{
  "paragraphs": [
    {
      "text": "%md\n# Anomaly Detection in Network Traffic with K-means Clustering\n*Authors : Hochet Guillaume, Kopp Olivier, Silvestri Romain*",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Anomaly Detection in Network Traffic with K-means Clustering</h1>\n<p><em>Authors : Hochet Guillaume, Kopp Olivier, Silvestri Romain</em></p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073707_78020445",
      "id": "paragraph_1623317489726_1848241258",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:245"
    },
    {
      "text": "%md\n# Partie 1 : chargement du dataset\n\nOn commence par télécharger et stocker le dataset :\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Partie 1 : chargement du dataset</h1>\n<p>On commence par télécharger et stocker le dataset :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_902345040",
      "id": "20210605-174335_1085964338",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:246"
    },
    {
      "text": "%sh \ncd /data && curl --silent -O http://kdd.ics.uci.edu/databases/kddcup99/kddcup.data.gz && gunzip kddcup.data",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "INCOMPLETE",
        "msg": [
          {
            "type": "TEXT",
            "data": "Paragraph received a SIGTERM\nExitValue: 143"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_2082273241",
      "id": "20210605-174335_1722822959",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:247"
    },
    {
      "text": "%md\nOn lit le dataset, et on le transforme en dataFrame, puis on l'affiche.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On lit le dataset, et on le transforme en dataFrame, puis on l&rsquo;affiche.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_1072377199",
      "id": "20210605-174335_1561095242",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:248"
    },
    {
      "text": "val dataWithoutHeader = spark.read.\n    option(\"inferSchema\",true).\n    option(\"header\",false).\n    csv(\"/data/kddcup.data\")\n    \nval data = dataWithoutHeader.toDF(\n    \"duration\",\"protocol_type\",\"service\",\"flag\",\n    \"src_bytes\",\"dst_bytes\",\"land\",\"wrong_fragment\",\"urgent\",\n    \"hot\",\"num_failed_logins\",\"logged_in\",\"num_compromised\",\n    \"root_shell\",\"su_attempted\",\"num_root\",\"num_file_creations\",\n    \"num_shells\",\"num_access_files\",\"num_outbound_cmds\",\n    \"is_host_login\",\"is_guest_login\",\"count\",\"srv_count\",\n    \"serror_rate\",\"srv_serror_rate\",\"rerror_rate\",\"srv_rerror_rate\",\n    \"same_srv_rate\",\"diff_srv_rate\",\"srv_diff_host_rate\",\n    \"dst_host_count\",\"dst_host_srv_count\",\n    \"dst_host_same_srv_rate\",\"dst_host_diff_srv_rate\",\n    \"dst_host_same_src_port_rate\",\"dst_host_srv_diff_host_rate\",\n    \"dst_host_serror_rate\",\"dst_host_srv_serror_rate\",\n    \"dst_host_rerror_rate\",\"dst_host_srv_rerror_rate\",\n    \"label\")\n\ndata.select(\"label\").groupBy(\"label\").count().orderBy($\"count\".desc).show(25)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------------+-------+\n|           label|  count|\n+----------------+-------+\n|          smurf.|2807886|\n|        neptune.|1072017|\n|         normal.| 972781|\n|          satan.|  15892|\n|        ipsweep.|  12481|\n|      portsweep.|  10413|\n|           nmap.|   2316|\n|           back.|   2203|\n|    warezclient.|   1020|\n|       teardrop.|    979|\n|            pod.|    264|\n|   guess_passwd.|     53|\n|buffer_overflow.|     30|\n|           land.|     21|\n|    warezmaster.|     20|\n|           imap.|     12|\n|        rootkit.|     10|\n|     loadmodule.|      9|\n|      ftp_write.|      8|\n|       multihop.|      7|\n|            phf.|      4|\n|           perl.|      3|\n|            spy.|      2|\n+----------------+-------+\n\n\u001b[1m\u001b[34mdataWithoutHeader\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [_c0: int, _c1: string ... 40 more fields]\n\u001b[1m\u001b[34mdata\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [duration: int, protocol_type: string ... 40 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_1196561076",
      "id": "20210605-174335_2006412555",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:249"
    },
    {
      "text": "%md\nOn applique l'algorithme K-means sur le dataset. Dans ce cas, le nombre de clusters est déterminé de façon automatiquement dans la fonction fit().\nOn affiche ensuite les coordonnées des centroides de chaque clusters :",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On applique l&rsquo;algorithme K-means sur le dataset. Dans ce cas, le nombre de clusters est déterminé de façon automatiquement dans la fonction fit().<br />\nOn affiche ensuite les coordonnées des centroides de chaque clusters :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_856888741",
      "id": "20210605-174335_1229402511",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:250"
    },
    {
      "text": "import org.apache.spark.ml.{Pipeline,PipelineModel}\nimport org.apache.spark.ml.clustering.{KMeans,KMeansModel}\nimport org.apache.spark.ml.feature.VectorAssembler\n\nval numericOnly = data.drop(\"protocol_type\",\"service\",\"flag\").cache()\n\nval assembler = new VectorAssembler().\n    setInputCols(numericOnly.columns.filter(_!=\"label\")).\n    setOutputCol(\"featureVector\")\n    \nval kmeans = new KMeans().\n    setPredictionCol(\"cluster\").\n    setFeaturesCol(\"featureVector\")\n    \nval pipeline = new Pipeline().setStages(Array(assembler,kmeans))\n\nval pipelineModel = pipeline.fit(numericOnly)\nval kmeansModel = pipelineModel.stages.last.asInstanceOf[KMeansModel]\nkmeansModel.clusterCenters.foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[48.34019491959669,1834.6215497618625,826.2031900016945,5.7161172049003456E-6,6.487793027561892E-4,7.961734678254053E-6,0.012437658596734055,3.205108575604837E-5,0.14352904910348827,0.00808830584493399,6.818511237273984E-5,3.6746467745787934E-5,0.012934960793560386,0.0011887482315762398,7.430952366370449E-5,0.0010211435092468404,0.0,4.082940860643104E-7,8.351655530445469E-4,334.9735084506668,295.26714620807076,0.17797031701994342,0.1780369894027253,0.05766489875327374,0.05772990937912739,0.7898841322630883,0.021179610609908736,0.02826081009629284,232.98107822302248,189.21428335201279,0.7537133898006421,0.030710978823798966,0.6050519309248854,0.006464107887636004,0.1780911843182601,0.17788589813474293,0.05792761150001131,0.05765922142400886]\n[10999.0,0.0,1.309937401E9,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,255.0,1.0,0.0,0.65,1.0,0.0,0.0,0.0,1.0,1.0]\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.clustering.{KMeans, KMeansModel}\nimport org.apache.spark.ml.feature.VectorAssembler\n\u001b[1m\u001b[34mnumericOnly\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [duration: int, src_bytes: int ... 37 more fields]\n\u001b[1m\u001b[34massembler\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.VectorAssembler\u001b[0m = vecAssembler_334545c91725\n\u001b[1m\u001b[34mkmeans\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.clustering.KMeans\u001b[0m = kmeans_5218ac72e774\n\u001b[1m\u001b[34mpipeline\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.Pipeline\u001b[0m = pipeline_f97970f7e7e0\n\u001b[1m\u001b[34mpipelineModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.PipelineModel\u001b[0m = pipeline_f97970f7e7e0\n\u001b[1m\u001b[34mkmeansModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.clustering.KMeansModel\u001b[0m = kmeans_5218..."
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_2146930191",
      "id": "20210605-174335_759701637",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:251"
    },
    {
      "text": "%md\n \nOn remarque que l'algorithme a fixé le nombre de cluster à 2, ce qui semble être trop faible, par rapport aux nombres de features du dataset (42).\nOn possède également les labels dans le dataset (ce qui n'est normalement pas le cas lors de clustering), on peut donc en profiter pour observer la répartition des label dans les diffèrents clusters : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On remarque que l&rsquo;algorithme a fixé le nombre de cluster à 2, ce qui semble être trop faible, par rapport aux nombres de features du dataset (42).<br />\nOn possède également les labels dans le dataset (ce qui n&rsquo;est normalement pas le cas lors de clustering), on peut donc en profiter pour observer la répartition des label dans les diffèrents clusters :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_288146492",
      "id": "20210605-174335_1965205735",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:252"
    },
    {
      "text": "def showResult(results: PipelineModel) = {\n    val tmpdf = results.transform(numericOnly).\n    select(\"cluster\", \"label\").\n    groupBy(\"cluster\", \"label\").\n    count().\n    orderBy($\"cluster\", $\"count\".desc)\n    tmpdf.show(tmpdf.count.toInt)\n}",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mshowResult\u001b[0m: \u001b[1m\u001b[32m(results: org.apache.spark.ml.PipelineModel)Unit\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_1982724429",
      "id": "20210605-174335_957443197",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:253"
    },
    {
      "text": "val withCluster = pipelineModel.transform(numericOnly)\nwithCluster.select(\"cluster\", \"label\").\n    groupBy(\"cluster\", \"label\").\n    count().\n    orderBy($\"cluster\", $\"count\".desc).\n    show(25)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 972781|\n|      0|          satan.|  15892|\n|      0|        ipsweep.|  12481|\n|      0|      portsweep.|  10412|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|    warezclient.|   1020|\n|      0|       teardrop.|    979|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     30|\n|      0|           land.|     21|\n|      0|    warezmaster.|     20|\n|      0|           imap.|     12|\n|      0|        rootkit.|     10|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      8|\n|      0|       multihop.|      7|\n|      0|            phf.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n+-------+----------------+-------+\n\n\u001b[1m\u001b[34mwithCluster\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [duration: int, src_bytes: int ... 39 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_350567998",
      "id": "20210605-174335_1227553177",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:254"
    },
    {
      "text": "%md\nOn voit en effet que le nombre de cluster est bien trop faible. L'attaque \"portsweep\" est la seule entrée catégorisée en dehors du cluster 0. Cela veut probablement dire que c'est l'attaque qui possède le plus grand écart de valeurs avec les autres connexions.\nDe plus, on peut voir qu'aucun des autres type d'attaques n'a été detecté comme tel. Le model ne fait pas la différence entre une anomalie et une connexion normal puisqu'il classe tout dans un seul cluster. Le K-means n'arrive donc pas à trouver de façon automatique le bon nombre de clusters.\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On voit en effet que le nombre de cluster est bien trop faible. L&rsquo;attaque &ldquo;portsweep&rdquo; est la seule entrée catégorisée en dehors du cluster 0. Cela veut probablement dire que c&rsquo;est l&rsquo;attaque qui possède le plus grand écart de valeurs avec les autres connexions.<br />\nDe plus, on peut voir qu&rsquo;aucun des autres type d&rsquo;attaques n&rsquo;a été detecté comme tel. Le model ne fait pas la différence entre une anomalie et une connexion normal puisqu&rsquo;il classe tout dans un seul cluster. Le K-means n&rsquo;arrive donc pas à trouver de façon automatique le bon nombre de clusters.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_48564458",
      "id": "20210605-174335_621458481",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:255"
    },
    {
      "text": "%md\n \n# Partie 2 : Recherche du bon nombre de clusters\n\nIl faut maintenant trouver le bon nombre de cluster, qui permet aux moins de diffèrencier les connexions normales des attaques. On peut s'attendre à avoir aux moins un cluster par type d'attaques, étant donné qu'elles s'appuient sur des techniques diffèrentes, qui devraient produire des données particulières. Il pourrait même être envisageable d'avoir plusieurs clusters pour une même attaque, si celle-ci peut se décliner sous plusieurs formes.\n\nPour se faire, il est nécessaire de calculer un score pour déterminer le meilleur K. Ce score est calculé grâce à la fonction computeCost, qui va calculer la moyenne des carrés des distances entre chaque point et leur centroide le plus proche. Dans un premier temps, on utilise les paramètres de base, dans la fonction clusteringScore0() : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:46:34+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Partie 2 : Recherche du bon nombre de clusters</h1>\n<p>Il faut maintenant trouver le bon nombre de cluster, qui permet aux moins de diffèrencier les connexions normales des attaques. On peut s&rsquo;attendre à avoir aux moins un cluster par type d&rsquo;attaques, étant donné qu&rsquo;elles s&rsquo;appuient sur des techniques diffèrentes, qui devraient produire des données particulières. Il pourrait même être envisageable d&rsquo;avoir plusieurs clusters pour une même attaque, si celle-ci peut se décliner sous plusieurs formes.</p>\n<p>Pour se faire, il est nécessaire de calculer un score pour déterminer le meilleur K. Ce score est calculé grâce à la fonction computeCost, qui va calculer la moyenne des carrés des distances entre chaque point et leur centroide le plus proche. Dans un premier temps, on utilise les paramètres de base, dans la fonction clusteringScore0() :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_736188484",
      "id": "20210605-174335_1158628839",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:256",
      "dateFinished": "2021-06-10T12:46:36+0000",
      "dateStarted": "2021-06-10T12:46:34+0000"
    },
    {
      "text": "import org.apache.spark.sql.DataFrame\nimport scala.util.Random\nimport org.apache.spark.ml.PipelineModel\n\ndef clusteringScore0(data: DataFrame, k: Int): (Double, PipelineModel) = {\n      val assembler = new VectorAssembler().setInputCols(data.columns.filter(_ != \"label\")).setOutputCol(\"featureVector\")\n      val kmeans = new KMeans().setSeed(Random.nextLong()).setK(k).setPredictionCol(\"cluster\").setFeaturesCol(\"featureVector\")\n      val pipeline = new Pipeline().setStages(Array(assembler, kmeans))\n      val pipelineModel = pipeline.fit(data)\n      val kmeansModel = pipelineModel.stages.last.asInstanceOf[KMeansModel]\n     \n      (kmeansModel.computeCost(assembler.transform(data)) / data.count(), pipelineModel)\n    }\n\n    val Score0Res = (20 to 100 by 20).map(k => (k, clusteringScore0(numericOnly, k)))\n    Score0Res.foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[33mwarning: \u001b[0mthere was one deprecation warning; re-run with -deprecation for details\n(20,(1.4459851601350617E8,pipeline_21f04dbbd961))\n(40,(1.4087888210539624E8,pipeline_77e3e331946b))\n(60,(1.0647611504349876E7,pipeline_7720010b5ac8))\n(80,(1.0376607521989204E7,pipeline_08eb09e212b9))\n(100,(7227021.800265637,pipeline_f10640de7e45))\nimport org.apache.spark.sql.DataFrame\nimport scala.util.Random\nimport org.apache.spark.ml.PipelineModel\n\u001b[1m\u001b[34mclusteringScore0\u001b[0m: \u001b[1m\u001b[32m(data: org.apache.spark.sql.DataFrame, k: Int)(Double, org.apache.spark.ml.PipelineModel)\u001b[0m\n\u001b[1m\u001b[34mScore0Res\u001b[0m: \u001b[1m\u001b[32mscala.collection.immutable.IndexedSeq[(Int, (Double, org.apache.spark.ml.PipelineModel))]\u001b[0m = Vector((20,(1.4459851601350617E8,pipeline_21f04dbbd961)), (40,(1.4087888210539624E8,pipeline_77e3e331946b)), (60,(1.0647611504349876E7,pipeline_7720010b5ac8)), (80,(1.0376607521989204E7,pipeline_08eb09e212b9)), (100,(7227021.800265637,pipeline_f10640de7e45)))\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_429941280",
      "id": "20210605-174335_257917097",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:257"
    },
    {
      "text": "%md\nVoici un graphique de l'évolution de l'erreur quadratique moyenne en fonction de K. Les données ont été normalisées à l'aide d'un Min-Max afin d'avoir des valeurs entre 0 et 1. On remarque qu'a partir de 60, l'erreur moyenne diminue beaucoup plus lentement, on peut donc supposer dans un premier temps que le nombre de cluster optimal doit se trouver aux alentours de cette valeur. A noter que dans le cas de l'algorithme K-means, on ne cherche pas a obtenir l'erreur la plus faible, car avec plus de cluster, on obtient forcément moins d'erreur (si on a n clusters et n entrées, l'erreur sera de 0, et chaque entrée appartiendra à son propre cluster). On cherche donc ce que l'on appel un \"elbow\", c'est à dire le point à partir duquel l'erreur arrete de diminuer fortement et se stabilise.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:47:29+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Voici un graphique de l&rsquo;évolution de l&rsquo;erreur quadratique moyenne en fonction de K. Les données ont été normalisées à l&rsquo;aide d&rsquo;un Min-Max afin d&rsquo;avoir des valeurs entre 0 et 1. On remarque qu&rsquo;a partir de 60, l&rsquo;erreur moyenne diminue beaucoup plus lentement, on peut donc supposer dans un premier temps que le nombre de cluster optimal doit se trouver aux alentours de cette valeur. A noter que dans le cas de l&rsquo;algorithme K-means, on ne cherche pas a obtenir l&rsquo;erreur la plus faible, car avec plus de cluster, on obtient forcément moins d&rsquo;erreur (si on a n clusters et n entrées, l&rsquo;erreur sera de 0, et chaque entrée appartiendra à son propre cluster). On cherche donc ce que l&rsquo;on appel un &ldquo;elbow&rdquo;, c&rsquo;est à dire le point à partir duquel l&rsquo;erreur arrete de diminuer fortement et se stabilise.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073708_101928106",
      "id": "paragraph_1622995414232_272758672",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:258",
      "dateFinished": "2021-06-10T12:47:29+0000",
      "dateStarted": "2021-06-10T12:47:29+0000"
    },
    {
      "text": "val test0DF = (20 to 100 by 20).map(k => (k, Score0Res((k/20)-1)._2._1)).toSeq.toDF(\"k\", \"score\")\nval maxScore = test0DF.groupBy().max(\"score\").rdd.map(r => r(0)).collect()(0).asInstanceOf[Double]\nval minScore = test0DF.groupBy().min(\"score\").rdd.map(r => r(0)).collect()(0).asInstanceOf[Double]\n\nval test0DF_norm = test0DF.withColumn(\"normalize score\", (test0DF(\"score\") - minScore) / (maxScore - minScore))\nz.show(test0DF_norm)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "lineChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "_1": "string",
                      "_2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "style": "stack"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "k",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "normalize score",
                  "index": 2,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "_1": "string",
                      "_2": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "k\tscore\tnormalize score\n20\t1.4459851601350617E8\t1.0\n40\t1.4087888210539624E8\t0.9729228110284949\n60\t1.0647611504349876E7\t0.024900287528171517\n80\t1.0376607521989204E7\t0.022927505737358387\n100\t7227021.800265637\t0.0\n"
          },
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mtest0DF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [k: int, score: double]\n\u001b[1m\u001b[34mmaxScore\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 1.4459851601350617E8\n\u001b[1m\u001b[34mminScore\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 7227021.800265637\n\u001b[1m\u001b[34mtest0DF_norm\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [k: int, score: double ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_116376061",
      "id": "paragraph_1622989511184_767429762",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:259"
    },
    {
      "text": " %md\nLa cellule ci dessous montre le nombre de labels uniques présensts dans chaque cluster, puis le détail des clusters (en partie). On remarque qu'un des clusters regroupe la plupart des attaques, tandis que les autres clusters plus petit comporte 1 ou 2 labels diffèrents. \nDans les détails, on voit que beaucoup de clusters ne comportent qu'une entrée, et la plupart d'entre eux concerne les connexions normales, ou les attaques portsweep. A partir de K=60, on voit qu'un cluster contenant beaucoup de connexion normales apparait, il ne represente que 10% des connexions normales cependant, le reste étant majoritairement représenté dans le premier cluster. A partir de K=80, on semble obtenir de meilleur résultats en terme de répartition (on a des clusters avec soit beaucoup de connexion normales et quelques attaques, soit l'inverse).",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>La cellule ci dessous montre le nombre de labels uniques présensts dans chaque cluster, puis le détail des clusters (en partie). On remarque qu&rsquo;un des clusters regroupe la plupart des attaques, tandis que les autres clusters plus petit comporte 1 ou 2 labels diffèrents.<br />\nDans les détails, on voit que beaucoup de clusters ne comportent qu&rsquo;une entrée, et la plupart d&rsquo;entre eux concerne les connexions normales, ou les attaques portsweep. A partir de K=60, on voit qu&rsquo;un cluster contenant beaucoup de connexion normales apparait, il ne represente que 10% des connexions normales cependant, le reste étant majoritairement représenté dans le premier cluster. A partir de K=80, on semble obtenir de meilleur résultats en terme de répartition (on a des clusters avec soit beaucoup de connexion normales et quelques attaques, soit l&rsquo;inverse).</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_699678940",
      "id": "paragraph_1622995692772_619948711",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:260"
    },
    {
      "text": "val df0 = Score0Res(3)._2._2.transform(numericOnly).select(\"cluster\", \"label\").distinct.groupBy(\"cluster\").count().sort(\"cluster\")\ndf0.show()\n\nprint(\"K = \" + Score0Res(0)._1 + \" : \\n\")\nshowResult(Score0Res(0)._2._2)\nprint(\"K = \" + Score0Res(1)._1 + \" : \\n\")\nshowResult(Score0Res(1)._2._2)\nprint(\"K = \" + Score0Res(2)._1 + \" : \\n\")\nshowResult(Score0Res(2)._2._2)\nprint(\"K = \" + Score0Res(3)._1 + \" : \\n\")\nshowResult(Score0Res(3)._2._2)\nprint(\"K = \" + Score0Res(4)._1 + \" : \\n\")\nshowResult(Score0Res(4)._2._2)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----+\n|cluster|count|\n+-------+-----+\n|      0|   23|\n|      1|    1|\n|      2|    1|\n|      3|    1|\n|      4|    1|\n|      5|    1|\n|      6|    1|\n|      7|    1|\n|      8|    1|\n|      9|    1|\n|     10|    1|\n|     11|    7|\n|     12|    1|\n|     13|    1|\n|     14|    1|\n|     15|    1|\n|     16|    1|\n|     17|    1|\n|     18|    1|\n|     19|    3|\n+-------+-----+\nonly showing top 20 rows\n\nK = 20 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 972341|\n|      0|          satan.|  15892|\n|      0|        ipsweep.|  12481|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     30|\n|      0|           land.|     21|\n|      0|           imap.|     12|\n|      0|        rootkit.|     10|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      8|\n|      0|       multihop.|      7|\n|      0|    warezmaster.|      5|\n|      0|            phf.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      2|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|      1|\n|      8|    warezclient.|     59|\n|      8|         normal.|      8|\n|      9|         normal.|      1|\n|     10|      portsweep.|      1|\n|     11|      portsweep.|      1|\n|     12|         normal.|    241|\n|     12|    warezclient.|      1|\n|     13|         normal.|     39|\n|     13|    warezmaster.|     15|\n|     14|         normal.|      3|\n|     15|         normal.|      1|\n|     16|         normal.|      1|\n|     17|      portsweep.|      2|\n|     18|         normal.|      1|\n|     19|         normal.|    144|\n+-------+----------------+-------+\n\nK = 40 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 972341|\n|      0|          satan.|  15892|\n|      0|        ipsweep.|  12481|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     30|\n|      0|           land.|     21|\n|      0|           imap.|     12|\n|      0|        rootkit.|     10|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      8|\n|      0|       multihop.|      7|\n|      0|    warezmaster.|      5|\n|      0|            phf.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|      portsweep.|      1|\n|      8|      portsweep.|      1|\n|      9|         normal.|    241|\n|      9|    warezclient.|      1|\n|     10|         normal.|    144|\n|     11|         normal.|     39|\n|     11|    warezmaster.|     15|\n|     12|      portsweep.|      2|\n|     12|         normal.|      2|\n|     13|         normal.|      3|\n|     14|         normal.|      2|\n|     15|    warezclient.|     59|\n|     15|         normal.|      2|\n|     16|         normal.|      4|\n|     17|         normal.|      1|\n|     18|         normal.|      2|\n|     19|      portsweep.|      1|\n+-------+----------------+-------+\n\nK = 60 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 935324|\n|      0|          satan.|  15891|\n|      0|        ipsweep.|  12480|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     28|\n|      0|           land.|     21|\n|      0|           imap.|     11|\n|      0|        rootkit.|      9|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      7|\n|      0|       multihop.|      4|\n|      0|            phf.|      4|\n|      0|    warezmaster.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      2|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|      1|\n|      8|      portsweep.|      1|\n|      9|         normal.|      1|\n|     10|      portsweep.|      1|\n|     11|         normal.|      1|\n|     12|         normal.|     96|\n|     12|       multihop.|      1|\n|     12|    warezmaster.|      1|\n|     13|         normal.|      1|\n|     14|    warezclient.|     19|\n|     15|         normal.|    580|\n|     16|         normal.|      1|\n|     17|         normal.|      1|\n|     18|    warezmaster.|      7|\n|     19|         normal.|      6|\n|     20|         normal.|      1|\n|     21|         normal.|  36099|\n|     21|buffer_overflow.|      2|\n|     21|       multihop.|      1|\n|     21|          satan.|      1|\n|     21|        ipsweep.|      1|\n|     21|      ftp_write.|      1|\n|     21|        rootkit.|      1|\n|     22|      portsweep.|      2|\n|     23|         normal.|      1|\n|     24|         normal.|      1|\n|     25|         normal.|      1|\n|     26|         normal.|    142|\n|     27|         normal.|      8|\n|     28|         normal.|      1|\n|     29|         normal.|    185|\n|     29|       multihop.|      1|\n|     29|           imap.|      1|\n|     30|         normal.|     60|\n|     31|         normal.|      1|\n|     32|         normal.|      1|\n|     33|         normal.|      2|\n|     34|         normal.|      1|\n|     35|         normal.|      1|\n|     36|         normal.|      1|\n|     37|         normal.|      1|\n|     38|         normal.|      1|\n|     39|         normal.|      1|\n|     40|         normal.|      7|\n|     41|         normal.|      5|\n|     42|         normal.|      2|\n|     43|    warezmaster.|      3|\n|     44|    warezclient.|     31|\n|     45|         normal.|      4|\n|     46|    warezclient.|      1|\n|     47|         normal.|      1|\n|     48|    warezclient.|      2|\n|     49|    warezmaster.|      2|\n|     50|         normal.|      1|\n|     51|    warezclient.|      7|\n|     52|         normal.|      3|\n|     53|         normal.|    230|\n|     54|    warezmaster.|      2|\n|     55|         normal.|      1|\n|     56|         normal.|      1|\n|     57|         normal.|      2|\n|     58|         normal.|      3|\n|     59|    warezmaster.|      1|\n+-------+----------------+-------+\n\nK = 80 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 921671|\n|      0|          satan.|  15891|\n|      0|        ipsweep.|  12480|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     28|\n|      0|           land.|     21|\n|      0|           imap.|     11|\n|      0|        rootkit.|      9|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      7|\n|      0|    warezmaster.|      4|\n|      0|       multihop.|      4|\n|      0|            phf.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|      portsweep.|      1|\n|      8|      portsweep.|      1|\n|      9|      portsweep.|      1|\n|     10|         normal.|      1|\n|     11|         normal.|  49663|\n|     11|buffer_overflow.|      2|\n|     11|      ftp_write.|      1|\n|     11|        ipsweep.|      1|\n|     11|       multihop.|      1|\n|     11|        rootkit.|      1|\n|     11|          satan.|      1|\n|     12|         normal.|     21|\n|     13|         normal.|      2|\n|     14|         normal.|     62|\n|     15|         normal.|    633|\n|     16|         normal.|      7|\n|     17|    warezclient.|      1|\n|     18|         normal.|      1|\n|     19|         normal.|     69|\n|     19|    warezmaster.|      1|\n|     19|       multihop.|      1|\n|     20|         normal.|      1|\n|     21|         normal.|      1|\n|     22|    warezmaster.|      3|\n|     23|         normal.|      1|\n|     24|    warezmaster.|     12|\n|     25|         normal.|      1|\n|     26|         normal.|      1|\n|     27|         normal.|      1|\n|     28|         normal.|     86|\n|     29|         normal.|     29|\n|     30|         normal.|      2|\n|     31|    warezclient.|      4|\n|     32|         normal.|      1|\n|     33|         normal.|      3|\n|     34|         normal.|      1|\n|     35|         normal.|      1|\n|     36|    warezclient.|      2|\n|     37|    warezclient.|      4|\n|     38|    warezclient.|      3|\n|     39|    warezclient.|      4|\n|     40|    warezclient.|      5|\n|     41|    warezclient.|      2|\n|     42|    warezclient.|      3|\n|     43|    warezclient.|      4|\n|     44|    warezclient.|      1|\n|     45|    warezclient.|      6|\n|     46|         normal.|      1|\n|     47|    warezclient.|      1|\n|     48|    warezclient.|      6|\n|     49|    warezclient.|      7|\n|     50|    warezclient.|      7|\n|     51|         normal.|      3|\n|     52|      portsweep.|      1|\n|     53|      portsweep.|      1|\n|     54|         normal.|     74|\n|     55|         normal.|    142|\n|     56|         normal.|      1|\n|     57|         normal.|     32|\n|     58|         normal.|      1|\n|     59|         normal.|      2|\n|     60|         normal.|      1|\n|     61|         normal.|      1|\n|     62|         normal.|      1|\n|     63|         normal.|      1|\n|     64|         normal.|      1|\n|     65|         normal.|      6|\n|     66|         normal.|      4|\n|     67|         normal.|     38|\n|     68|         normal.|      1|\n|     69|         normal.|    212|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 100 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 891597|\n|      0|          satan.|  15891|\n|      0|        ipsweep.|  12480|\n|      0|      portsweep.|   9519|\n|      0|           nmap.|   2316|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    938|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     28|\n|      0|           back.|     23|\n|      0|           land.|     21|\n|      0|           imap.|     10|\n|      0|     loadmodule.|      9|\n|      0|        rootkit.|      9|\n|      0|      ftp_write.|      7|\n|      0|            phf.|      4|\n|      0|       multihop.|      4|\n|      0|    warezmaster.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|      1|\n|      8|      portsweep.|      1|\n|      9|         normal.|     21|\n|     10|      portsweep.|      1|\n|     11|         normal.|      1|\n|     12|         normal.|      1|\n|     13|         normal.|      1|\n|     14|    warezclient.|     38|\n|     15|         normal.|    157|\n|     16|         normal.|   3089|\n|     16|buffer_overflow.|      1|\n|     16|        ipsweep.|      1|\n|     17|         normal.|      1|\n|     18|    warezmaster.|      1|\n|     19|         normal.|      1|\n|     20|         normal.|     21|\n|     20|       multihop.|      1|\n|     21|         normal.|  67156|\n|     21|           back.|   2180|\n|     21|      ftp_write.|      1|\n|     21|        rootkit.|      1|\n|     21|       multihop.|      1|\n|     21|          satan.|      1|\n|     21|buffer_overflow.|      1|\n|     21|           imap.|      1|\n|     22|         normal.|      1|\n|     23|         normal.|      1|\n|     24|         normal.|    449|\n|     25|         normal.|      8|\n|     26|         normal.|     10|\n|     27|         normal.|      1|\n|     28|         normal.|      2|\n|     29|         normal.|      2|\n|     30|         normal.|   9632|\n|     30|      portsweep.|    883|\n|     30|    warezclient.|     22|\n|     31|      portsweep.|      2|\n|     32|         normal.|      1|\n|     33|         normal.|     60|\n|     33|           imap.|      1|\n|     34|         normal.|      8|\n|     35|         normal.|     10|\n|     36|         normal.|      1|\n|     37|         normal.|      1|\n|     38|         normal.|      1|\n|     39|         normal.|      3|\n|     40|         normal.|     18|\n|     40|    warezmaster.|      1|\n|     41|         normal.|      1|\n|     42|         normal.|    165|\n|     42|       multihop.|      1|\n|     43|         normal.|     11|\n|     44|         normal.|      1|\n|     45|         normal.|      2|\n|     46|         normal.|      6|\n|     47|         normal.|     11|\n|     48|         normal.|      3|\n|     49|         normal.|     21|\n|     50|         normal.|     12|\n|     51|         normal.|      6|\n|     52|         normal.|      2|\n|     53|    warezmaster.|      1|\n|     54|         normal.|      6|\n|     55|    warezclient.|     21|\n|     56|         normal.|      1|\n|     57|         normal.|     20|\n|     58|         normal.|      6|\n|     59|    warezmaster.|      4|\n|     60|         normal.|      1|\n|     61|         normal.|      1|\n|     62|         normal.|      3|\n+-------+----------------+-------+\nonly showing top 100 rows\n\n\u001b[1m\u001b[34mdf0\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_1761136508",
      "id": "20210605-174335_1914049381",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:261"
    },
    {
      "text": "%md\nDans cette deuxième version de la fonction \"clusterscore\", on modifie les paramètres MaxIter et Tol. Le paramètre Tol définie le mouvement à partir duquel les centroides sont considèrés comme stable ou non (si les centroides bouge de moins de x lors d'une itération, l'algorithme s'arrête). Pour le paramètre MaxIter, il définie simplement le nombre max d'itération de l'algorithme. Par défaut (donc dans le fonction clusteringScore0), ces valeurs sont fixées à 1.04e-4 et 20, cette deuxième fonction va donc executer l'algorithme plus longtemps.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Dans cette deuxième version de la fonction &ldquo;clusterscore&rdquo;, on modifie les paramètres MaxIter et Tol. Le paramètre Tol définie le mouvement à partir duquel les centroides sont considèrés comme stable ou non (si les centroides bouge de moins de x lors d&rsquo;une itération, l&rsquo;algorithme s&rsquo;arrête). Pour le paramètre MaxIter, il définie simplement le nombre max d&rsquo;itération de l&rsquo;algorithme. Par défaut (donc dans le fonction clusteringScore0), ces valeurs sont fixées à 1.04e-4 et 20, cette deuxième fonction va donc executer l&rsquo;algorithme plus longtemps.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_1902782186",
      "id": "paragraph_1622995720734_1205895069",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:262"
    },
    {
      "text": "import org.apache.spark.sql.DataFrame\nimport scala.util.Random\n\ndef clusteringScore1(data: DataFrame, k: Int): (Double, PipelineModel) = {\n      val assembler = new VectorAssembler().setInputCols(data.columns.filter(_ != \"label\")).setOutputCol(\"featureVector\")\n      val kmeans = new KMeans().setSeed(Random.nextLong()).setK(k).setPredictionCol(\"cluster\").setFeaturesCol(\"featureVector\").setMaxIter(40).setTol(1.0e-5)\n      val pipeline = new Pipeline().setStages(Array(assembler, kmeans))\n      val pipelineModel = pipeline.fit(data)\n      val kmeansModel = pipelineModel.stages.last.asInstanceOf[KMeansModel]\n     \n      (kmeansModel.computeCost(assembler.transform(data)) / data.count(), pipelineModel)\n    }\n    \n    val Score1Res = (20 to 100 by 20).map(k => (k, clusteringScore1(numericOnly, k)))\n    Score1Res.foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[33mwarning: \u001b[0mthere was one deprecation warning; re-run with -deprecation for details\n(20,(7.17889955125447E7,pipeline_f18a220d09c3))\n(40,(1.5196515952481166E8,pipeline_8c7d12679dff))\n(60,(1.026535019747111E7,pipeline_b7e5500feb7c))\n(80,(4558817.741500725,pipeline_291e290cae68))\n(100,(5592649.973995538,pipeline_f26678e8e1b6))\nimport org.apache.spark.sql.DataFrame\nimport scala.util.Random\n\u001b[1m\u001b[34mclusteringScore1\u001b[0m: \u001b[1m\u001b[32m(data: org.apache.spark.sql.DataFrame, k: Int)(Double, org.apache.spark.ml.PipelineModel)\u001b[0m\n\u001b[1m\u001b[34mScore1Res\u001b[0m: \u001b[1m\u001b[32mscala.collection.immutable.IndexedSeq[(Int, (Double, org.apache.spark.ml.PipelineModel))]\u001b[0m = Vector((20,(7.17889955125447E7,pipeline_f18a220d09c3)), (40,(1.5196515952481166E8,pipeline_8c7d12679dff)), (60,(1.026535019747111E7,pipeline_b7e5500feb7c)), (80,(4558817.741500725,pipeline_291e290cae68)), (100,(5592649.973995538,pipeline_f26678e8e1b6)))\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_1598191559",
      "id": "20210605-174335_795610586",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:263"
    },
    {
      "text": "%md\nOn affiche à nouveau les résultats en fonction du nombre de clusters. La tendance du graphique est assez similaires à celui obtenu avec la première version. Il semble donc qu'executer l'algorithme plus longtemps n'améliore pas significativement les résultats.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On affiche à nouveau les résultats en fonction du nombre de clusters. La tendance du graphique est assez similaires à celui obtenu avec la première version. Il semble donc qu&rsquo;executer l&rsquo;algorithme plus longtemps n&rsquo;améliore pas significativement les résultats.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_1470615750",
      "id": "paragraph_1622996352484_267455587",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:264"
    },
    {
      "text": "val test1DF = (20 to 100 by 20).map(k => (k, Score1Res((k/20)-1)._2._1)).toSeq.toDF(\"k\", \"score\")\nval maxScore = test1DF.groupBy().max(\"score\").rdd.map(r => r(0)).collect()(0).asInstanceOf[Double]\nval minScore = test1DF.groupBy().min(\"score\").rdd.map(r => r(0)).collect()(0).asInstanceOf[Double]\n\nval test1DF_norm = test1DF.withColumn(\"normalize score\", (test1DF(\"score\") - minScore) / (maxScore - minScore))\nz.show(test1DF_norm)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "stackedAreaChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "_1": "string",
                      "_2": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [],
              "groups": [],
              "values": []
            },
            "helium": {}
          },
          "1": {
            "graph": {
              "mode": "lineChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "k": "string",
                      "score": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "style": "stack"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "k",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "normalize score",
                  "index": 2,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          },
          "2": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "k": "string",
                      "score": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "3": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "k": "string",
                      "score": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---+--------------------+--------------------+\n|  k|               score|     normalize score|\n+---+--------------------+--------------------+\n| 20|  7.17889955125447E7|   0.456087417662621|\n| 40|1.5196515952481166E8|                 1.0|\n| 60| 1.026535019747111E7|0.038712937224634855|\n| 80|   4558817.741500725|                 0.0|\n|100|   5592649.973995538|0.007013485444300348|\n+---+--------------------+--------------------+\n\n\n"
          },
          {
            "type": "TABLE",
            "data": "k\tscore\tnormalize score\n20\t7.17889955125447E7\t0.456087417662621\n40\t1.5196515952481166E8\t1.0\n60\t1.026535019747111E7\t0.038712937224634855\n80\t4558817.741500725\t0.0\n100\t5592649.973995538\t0.007013485444300348\n"
          },
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.Column\n\u001b[1m\u001b[34mmySd\u001b[0m: \u001b[1m\u001b[32m(col: org.apache.spark.sql.Column)org.apache.spark.sql.Column\u001b[0m\n\u001b[1m\u001b[34mtest1DF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [k: int, score: double]\n\u001b[1m\u001b[34mmaxScore\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 1.5196515952481166E8\n\u001b[1m\u001b[34mminScore\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 4558817.741500725\n\u001b[1m\u001b[34mtest1DF_norm\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [k: int, score: double ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073709_993781015",
      "id": "paragraph_1622991262161_1110241961",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:265"
    },
    {
      "text": "%md\nDe même ici, on obtient des résultats assez similaire que lors du ClusteringScore0. Encore une fois, à partir de K=80, les résultats semblent un peu meilleurs.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:50:26+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>De même ici, on obtient des résultats assez similaire que lors du ClusteringScore0. Encore une fois, à partir de K=80, les résultats semblent un peu meilleurs.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1433633052",
      "id": "paragraph_1622997832619_2021459281",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:266",
      "dateFinished": "2021-06-10T12:50:26+0000",
      "dateStarted": "2021-06-10T12:50:26+0000"
    },
    {
      "text": "val df1 = Score1Res(3)._2._2.transform(numericOnly).select(\"cluster\", \"label\").distinct.groupBy(\"cluster\").count().sort(\"cluster\")\ndf1.show()\n\nprint(\"K = \" + Score1Res(0)._1 + \" : \\n\")\nshowResult(Score1Res(0)._2._2)\nprint(\"K = \" + Score1Res(1)._1 + \" : \\n\")\nshowResult(Score1Res(1)._2._2)\nprint(\"K = \" + Score1Res(2)._1 + \" : \\n\")\nshowResult(Score1Res(2)._2._2)\nprint(\"K = \" + Score1Res(3)._1 + \" : \\n\")\nshowResult(Score1Res(3)._2._2)\nprint(\"K = \" + Score1Res(4)._1 + \" : \\n\")\nshowResult(Score1Res(4)._2._2)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----+\n|cluster|count|\n+-------+-----+\n|      0|    1|\n|      1|    1|\n|      2|    1|\n|      3|    1|\n|      4|    1|\n|      5|    1|\n|      6|    1|\n|      7|    1|\n|      8|    1|\n|      9|    1|\n|     10|    1|\n|     11|    3|\n|     12|    2|\n|     13|    1|\n|     14|    1|\n|     15|    5|\n|     16|    3|\n|     17|    6|\n|     18|    1|\n|     19|    1|\n+-------+-----+\nonly showing top 20 rows\n\nK = 20 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 972310|\n|      0|          satan.|  15892|\n|      0|        ipsweep.|  12481|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     30|\n|      0|           land.|     21|\n|      0|           imap.|     12|\n|      0|        rootkit.|     10|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      8|\n|      0|       multihop.|      6|\n|      0|    warezmaster.|      4|\n|      0|            phf.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|      portsweep.|      1|\n|      8|    warezmaster.|     15|\n|      8|         normal.|     14|\n|      9|         normal.|    243|\n|      9|    warezclient.|      1|\n|     10|    warezclient.|     59|\n|     10|         normal.|      8|\n|     11|         normal.|      3|\n|     12|         normal.|      2|\n|     12|      portsweep.|      2|\n|     13|         normal.|      1|\n|     14|         normal.|      2|\n|     15|      portsweep.|      1|\n|     16|      portsweep.|      1|\n|     17|         normal.|    198|\n|     17|       multihop.|      1|\n|     17|    warezmaster.|      1|\n+-------+----------------+-------+\n\nK = 40 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 971111|\n|      0|          satan.|  15892|\n|      0|        ipsweep.|  12481|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     30|\n|      0|           land.|     21|\n|      0|           imap.|     11|\n|      0|        rootkit.|     10|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      8|\n|      0|       multihop.|      5|\n|      0|            phf.|      4|\n|      0|    warezmaster.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|      portsweep.|      1|\n|      8|      portsweep.|      1|\n|      9|    warezmaster.|     15|\n|      9|         normal.|     14|\n|     10|      portsweep.|      2|\n|     10|         normal.|      2|\n|     11|         normal.|    987|\n|     12|         normal.|    240|\n|     12|       multihop.|      2|\n|     12|           imap.|      1|\n|     13|         normal.|      3|\n|     14|         normal.|    172|\n|     14|    warezmaster.|      1|\n|     15|         normal.|      1|\n|     16|         normal.|      1|\n|     17|         normal.|      1|\n|     18|         normal.|    249|\n|     18|    warezclient.|     60|\n|     19|      portsweep.|      1|\n+-------+----------------+-------+\n\nK = 60 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 921550|\n|      0|          satan.|  15891|\n|      0|        ipsweep.|  12480|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|           back.|   2203|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     28|\n|      0|           land.|     21|\n|      0|           imap.|     11|\n|      0|        rootkit.|      9|\n|      0|     loadmodule.|      9|\n|      0|      ftp_write.|      7|\n|      0|    warezmaster.|      4|\n|      0|       multihop.|      4|\n|      0|            phf.|      4|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      2|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|      1|\n|      8|      portsweep.|      1|\n|      9|         normal.|      4|\n|     10|      portsweep.|      1|\n|     11|         normal.|      1|\n|     12|         normal.|      1|\n|     13|         normal.|      1|\n|     14|         normal.|  49784|\n|     14|buffer_overflow.|      2|\n|     14|        ipsweep.|      1|\n|     14|       multihop.|      1|\n|     14|      ftp_write.|      1|\n|     14|          satan.|      1|\n|     14|        rootkit.|      1|\n|     15|         normal.|    633|\n|     16|    warezmaster.|      1|\n|     17|    warezclient.|     21|\n|     18|         normal.|     34|\n|     19|      portsweep.|      2|\n|     20|         normal.|      1|\n|     21|         normal.|      1|\n|     22|         normal.|      1|\n|     23|         normal.|    212|\n|     23|       multihop.|      1|\n|     23|           imap.|      1|\n|     24|         normal.|      1|\n|     25|         normal.|      2|\n|     26|         normal.|    142|\n|     27|         normal.|      1|\n|     28|         normal.|     10|\n|     29|         normal.|      1|\n|     30|         normal.|     69|\n|     30|       multihop.|      1|\n|     30|    warezmaster.|      1|\n|     31|         normal.|      1|\n|     32|         normal.|      1|\n|     33|         normal.|      1|\n|     34|         normal.|      1|\n|     35|         normal.|      1|\n|     36|         normal.|     12|\n|     37|         normal.|      1|\n|     38|         normal.|     62|\n|     39|         normal.|      5|\n|     40|         normal.|      2|\n|     41|    warezclient.|      3|\n|     42|         normal.|      5|\n|     43|    warezmaster.|     10|\n|     44|    warezmaster.|      1|\n|     45|         normal.|      1|\n|     46|         normal.|     58|\n|     47|    warezclient.|      7|\n|     48|         normal.|      1|\n|     49|    warezmaster.|      2|\n|     50|    warezclient.|      1|\n|     51|         normal.|     55|\n|     52|         normal.|      3|\n|     53|         normal.|     49|\n|     54|    warezmaster.|      1|\n|     55|    warezclient.|     28|\n|     56|         normal.|      1|\n|     57|         normal.|     68|\n|     58|         normal.|      1|\n|     59|         normal.|      2|\n+-------+----------------+-------+\n\nK = 80 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|         normal.|    614|\n|      1|      portsweep.|      1|\n|      2|         normal.|      4|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|      portsweep.|      1|\n|      8|      portsweep.|      1|\n|      9|      portsweep.|      1|\n|     10|      portsweep.|      1|\n|     11|         normal.|   3187|\n|     11|buffer_overflow.|      1|\n|     11|        ipsweep.|      1|\n|     12|         normal.|   5615|\n|     12|           back.|     11|\n|     13|         normal.|      1|\n|     14|         normal.|      1|\n|     15|         normal.|  55367|\n|     15|buffer_overflow.|      8|\n|     15|     loadmodule.|      2|\n|     15|        rootkit.|      1|\n|     15|    warezmaster.|      1|\n|     16|         normal.|    154|\n|     16|       multihop.|      1|\n|     16|           imap.|      1|\n|     17|         normal.|  44438|\n|     17|            phf.|      4|\n|     17|     loadmodule.|      1|\n|     17|       multihop.|      1|\n|     17|        rootkit.|      1|\n|     17|           imap.|      1|\n|     18|    warezclient.|      1|\n|     19|         normal.|    232|\n|     20|         normal.|     13|\n|     21|         normal.|    141|\n|     22|          smurf.|2278221|\n|     23|         normal.| 180449|\n|     23|          smurf.|    135|\n|     23|           nmap.|     89|\n|     23|    warezclient.|     33|\n|     23|          satan.|     21|\n|     23|        rootkit.|      2|\n|     23|       multihop.|      1|\n|     24|         normal.|      4|\n|     25|         normal.|     96|\n|     25|    warezmaster.|      1|\n|     25|       multihop.|      1|\n|     26|         normal.|    667|\n|     26|      portsweep.|    593|\n|     27|         normal.|      2|\n|     28|         normal.|  88198|\n|     28|        ipsweep.|  12480|\n|     28|           nmap.|   1287|\n|     28|        neptune.|    711|\n|     28|    warezclient.|    557|\n|     28|      portsweep.|     95|\n|     28|          satan.|     70|\n|     28|       teardrop.|     55|\n|     28|   guess_passwd.|     52|\n|     28|           land.|     21|\n|     28|           imap.|      9|\n|     28|            pod.|      2|\n|     28|      ftp_write.|      2|\n|     28|        rootkit.|      2|\n|     28|          smurf.|      1|\n|     29|    warezmaster.|      3|\n|     30|    warezmaster.|     12|\n|     31|         normal.|      1|\n|     32|           back.|   2165|\n|     32|         normal.|    797|\n|     33|         normal.|      1|\n|     34|         normal.|  13980|\n|     34|        rootkit.|      1|\n|     34|      ftp_write.|      1|\n|     34|       multihop.|      1|\n|     35|         normal.| 128660|\n|     35|buffer_overflow.|      4|\n|     35|     loadmodule.|      4|\n|     35|          satan.|      2|\n|     35|            spy.|      1|\n|     35|   guess_passwd.|      1|\n|     36|         normal.|  24687|\n|     36|buffer_overflow.|      1|\n|     36|          satan.|      1|\n|     37|        neptune.| 471532|\n|     37|         normal.|  32073|\n|     37|      portsweep.|   8810|\n|     37|          satan.|   2172|\n|     37|           nmap.|    939|\n|     37|       teardrop.|    885|\n|     37|        rootkit.|      2|\n|     37|    warezmaster.|      1|\n|     38|         normal.|   6768|\n|     38|      portsweep.|    290|\n|     38|    warezclient.|     22|\n|     39|        neptune.| 186427|\n|     39|          satan.|    218|\n|     39|      portsweep.|    173|\n|     39|         normal.|     87|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 100 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2807886|\n|      0|        neptune.|1072017|\n|      0|         normal.| 857098|\n|      0|          satan.|  15891|\n|      0|        ipsweep.|  12480|\n|      0|      portsweep.|  10402|\n|      0|           nmap.|   2316|\n|      0|       teardrop.|    979|\n|      0|    warezclient.|    960|\n|      0|            pod.|    264|\n|      0|   guess_passwd.|     53|\n|      0|buffer_overflow.|     25|\n|      0|           land.|     21|\n|      0|           back.|     11|\n|      0|           imap.|     10|\n|      0|        rootkit.|      8|\n|      0|     loadmodule.|      7|\n|      0|      ftp_write.|      7|\n|      0|       multihop.|      3|\n|      0|    warezmaster.|      3|\n|      0|           perl.|      3|\n|      0|            spy.|      2|\n|      1|      portsweep.|      1|\n|      2|      portsweep.|      1|\n|      3|      portsweep.|      1|\n|      4|      portsweep.|      1|\n|      5|      portsweep.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|      1|\n|      8|      portsweep.|      1|\n|      9|         normal.|     18|\n|     10|      portsweep.|      1|\n|     11|         normal.|      1|\n|     12|         normal.|     25|\n|     13|         normal.|      1|\n|     14|    warezclient.|      4|\n|     15|         normal.|      1|\n|     16|         normal.|      1|\n|     17|         normal.|      3|\n|     18|         normal.|      8|\n|     19|         normal.|      1|\n|     20|         normal.|    584|\n|     21|         normal.|      1|\n|     22|         normal.|    135|\n|     23|      portsweep.|      2|\n|     24|         normal.|      1|\n|     25|         normal.|      1|\n|     26|         normal.|    500|\n|     27|         normal.|     45|\n|     28|         normal.|  99136|\n|     28|           back.|   2192|\n|     28|buffer_overflow.|      4|\n|     28|            phf.|      4|\n|     28|       multihop.|      2|\n|     28|     loadmodule.|      2|\n|     28|        rootkit.|      2|\n|     28|          satan.|      1|\n|     28|    warezmaster.|      1|\n|     28|           imap.|      1|\n|     29|         normal.|     25|\n|     30|         normal.|      2|\n|     31|         normal.|      2|\n|     32|         normal.|  14544|\n|     32|      ftp_write.|      1|\n|     32|        ipsweep.|      1|\n|     32|buffer_overflow.|      1|\n|     33|         normal.|      1|\n|     34|         normal.|      1|\n|     35|         normal.|      2|\n|     36|         normal.|      1|\n|     37|         normal.|      8|\n|     38|         normal.|     22|\n|     39|         normal.|      3|\n|     40|         normal.|     12|\n|     41|         normal.|      1|\n|     42|         normal.|    179|\n|     43|         normal.|     18|\n|     43|    warezmaster.|      1|\n|     43|       multihop.|      1|\n|     44|         normal.|    103|\n|     44|           imap.|      1|\n|     44|       multihop.|      1|\n|     45|         normal.|      6|\n|     46|         normal.|     33|\n|     47|         normal.|      1|\n|     48|         normal.|      2|\n|     49|         normal.|      1|\n|     50|         normal.|      3|\n|     51|         normal.|      1|\n|     52|         normal.|      1|\n|     53|         normal.|     22|\n|     54|    warezmaster.|      3|\n|     55|    warezclient.|      4|\n|     56|    warezclient.|      7|\n|     57|         normal.|     25|\n|     58|         normal.|      2|\n|     59|    warezmaster.|      2|\n|     60|         normal.|      1|\n|     61|    warezmaster.|      1|\n|     62|    warezmaster.|      1|\n+-------+----------------+-------+\nonly showing top 100 rows\n\n\u001b[1m\u001b[34mdf1\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1702382420",
      "id": "20210605-174335_662071009",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:267"
    },
    {
      "text": "%md\nDurant les précédents calculs de score, les data ont été utilisées tel quel. Cela ne conduit pas forcément à de bon résultats, dans le cas où l'interval de valeurs des diffèrentes features est hétérogéne. C'est le cas pour notre dataset, certaines valeur correspondent à un ratio (entre 0 et 1) tandis que d'autre peuvent atteindre de grande valeurs (la durée, ou la quantité de donnée de la connexion peuvent atteindre des valeurs supérieur à 10000 par exemple). Les grandes diffèrences de valeurs vont diminuer l'influence de certaines features lors du clustering. Pour cette raison, il est necessaire de normaliser toutes les features. Pour cela, nous utilisons un objet StandardScaler, qui normalise les données en utilisant la méthode z-score (soustraction de la moyenne et division par l'écart type). Dans notre cas, la soustraction par la moyenne n'est pas nécessaire, et est donc désactivée. On va donc simplement diviser toutes les valeurs par l'écart type.\nLa nouvelle fonction de scoring est décrite ci dessous. Nous l'executons avec un nombre plus élévée de valeurs de K, afin d'observer plus largement l'évolution de l'erreur moyenne : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:51:26+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Durant les précédents calculs de score, les data ont été utilisées tel quel. Cela ne conduit pas forcément à de bon résultats, dans le cas où l&rsquo;interval de valeurs des diffèrentes features est hétérogéne. C&rsquo;est le cas pour notre dataset, certaines valeur correspondent à un ratio (entre 0 et 1) tandis que d&rsquo;autre peuvent atteindre de grande valeurs (la durée, ou la quantité de donnée de la connexion peuvent atteindre des valeurs supérieur à 10000 par exemple). Les grandes diffèrences de valeurs vont diminuer l&rsquo;influence de certaines features lors du clustering. Pour cette raison, il est necessaire de normaliser toutes les features. Pour cela, nous utilisons un objet StandardScaler, qui normalise les données en utilisant la méthode z-score (soustraction de la moyenne et division par l&rsquo;écart type). Dans notre cas, la soustraction par la moyenne n&rsquo;est pas nécessaire, et est donc désactivée. On va donc simplement diviser toutes les valeurs par l&rsquo;écart type.<br />\nLa nouvelle fonction de scoring est décrite ci dessous. Nous l&rsquo;executons avec un nombre plus élévée de valeurs de K, afin d&rsquo;observer plus largement l&rsquo;évolution de l&rsquo;erreur moyenne :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1255764473",
      "id": "paragraph_1622998417635_953454669",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:268",
      "dateFinished": "2021-06-10T12:51:26+0000",
      "dateStarted": "2021-06-10T12:51:26+0000"
    },
    {
      "text": "import org.apache.spark.ml.feature.StandardScaler\n\n  def clusteringScore2(data: DataFrame, k: Int): (Double, PipelineModel) = {\n    val assembler = new VectorAssembler().\n      setInputCols(data.columns.filter(_ != \"label\")).\n      setOutputCol(\"featureVector\")\n    val scaler = new StandardScaler().\n      setInputCol(\"featureVector\").\n      setOutputCol(\"scaledFeatureVector\").\n      setWithStd(true).\n      setWithMean(false)\n    val kmeans = new KMeans().\n      setSeed(Random.nextLong()).\n      setK(k).\n      setPredictionCol(\"cluster\").\n      setFeaturesCol(\"scaledFeatureVector\").\n      setMaxIter(40).\n      setTol(1.0e-5)\n    val pipeline = new Pipeline().setStages(Array(assembler, scaler, kmeans))\n    val pipelineModel = pipeline.fit(data)\n    val kmeansModel = pipelineModel.stages.last.asInstanceOf[KMeansModel]\n     \n      (kmeansModel.computeCost(pipelineModel.transform(data)) / data.count(), pipelineModel)\n  }\n\n  val Score2Res = (60 to 270 by 30).map(k => (k, clusteringScore2(numericOnly, k)))\n  //val Score2Res = (270 to 270 by 30).map(k => (k, clusteringScore2(numericOnly, k)))\n  Score2Res.foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[33mwarning: \u001b[0mthere was one deprecation warning; re-run with -deprecation for details\n(60,(1.2163078658346012,pipeline_f2d023cbf867))\n(90,(0.7090208409403682,pipeline_859c945a5282))\n(120,(0.5206187879159487,pipeline_99f019e6cfa3))\n(150,(0.4038229182802757,pipeline_76365ba3da41))\n(180,(0.3402973599902901,pipeline_9e511aa2fb17))\n(210,(0.29617379015172596,pipeline_e4668f0c808d))\n(240,(0.25053280491909,pipeline_aff820cc43cf))\n(270,(0.21793981264884785,pipeline_ac52cbe0d19e))\nimport org.apache.spark.ml.feature.StandardScaler\n\u001b[1m\u001b[34mclusteringScore2\u001b[0m: \u001b[1m\u001b[32m(data: org.apache.spark.sql.DataFrame, k: Int)(Double, org.apache.spark.ml.PipelineModel)\u001b[0m\n\u001b[1m\u001b[34mScore2Res\u001b[0m: \u001b[1m\u001b[32mscala.collection.immutable.IndexedSeq[(Int, (Double, org.apache.spark.ml.PipelineModel))]\u001b[0m = Vector((60,(1.2163078658346012,pipeline_f2d023cbf867)), (90,(0.7090208409403682,pipeline_859c945a5282)), (120,(0.5206187879159487,pipeline_99f019e6cfa3)), (150,(0.4038229182802757,pipeline_76365ba3da41)), (180,(0.3402973599902901,pipeline_9e511aa2fb17)), (210,(0.29617379015172596,pipeline_e4668f0c808d)), (240,(0.25053280491909,pipeline_aff820cc43cf)), (270,(0.21793981264884785,pipeline_ac52cbe0d19e)))\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1020356686",
      "id": "20210605-174335_1507692910",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:269"
    },
    {
      "text": "print(\"K = \" + Score2Res(0)._1 + \" : \\n\")\nshowResult(Score2Res(0)._2._2)\nprint(\"K = \" + Score2Res(1)._1 + \" : \\n\")\nshowResult(Score2Res(1)._2._2)\nprint(\"K = \" + Score2Res(2)._1 + \" : \\n\")\nshowResult(Score2Res(2)._2._2)\nprint(\"K = \" + Score2Res(3)._1 + \" : \\n\")\nshowResult(Score2Res(3)._2._2)\nprint(\"K = \" + Score2Res(4)._1 + \" : \\n\")\nshowResult(Score2Res(4)._2._2)\nprint(\"K = \" + Score2Res(5)._1 + \" : \\n\")\nshowResult(Score2Res(5)._2._2)\nprint(\"K = \" + Score2Res(6)._1 + \" : \\n\")\nshowResult(Score2Res(6)._2._2)\nprint(\"K = \" + Score2Res(7)._1 + \" : \\n\")\nshowResult(Score2Res(7)._2._2)\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "K = 60 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|        neptune.| 859876|\n|      0|         normal.|     35|\n|      0|      portsweep.|      1|\n|      1|          smurf.|2805843|\n|      1|         normal.|    337|\n|      2|        neptune.| 204558|\n|      2|      portsweep.|   1069|\n|      2|         normal.|    337|\n|      2|          satan.|      3|\n|      3|         normal.|      1|\n|      4|      portsweep.|      2|\n|      5|         normal.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|   6613|\n|      7|      portsweep.|    101|\n|      8|         normal.|   4565|\n|      9|         normal.|   6766|\n|      9|          satan.|    147|\n|      9|      portsweep.|     17|\n|      9|           nmap.|     13|\n|     10|         normal.| 241389|\n|     10|    warezclient.|    298|\n|     10|buffer_overflow.|      3|\n|     10|      ftp_write.|      1|\n|     10|        rootkit.|      1|\n|     11|         normal.|  42141|\n|     11|        ipsweep.|     31|\n|     11|           back.|     23|\n|     11|           nmap.|     10|\n|     11|    warezclient.|      7|\n|     11|            pod.|      3|\n|     11|        neptune.|      3|\n|     11|          satan.|      1|\n|     11|      ftp_write.|      1|\n|     11|       multihop.|      1|\n|     12|         normal.|      2|\n|     13|         normal.|    220|\n|     13|buffer_overflow.|     18|\n|     13|            phf.|      4|\n|     13|           perl.|      3|\n|     13|        rootkit.|      1|\n|     13|     loadmodule.|      1|\n|     13|       multihop.|      1|\n|     14|           land.|     21|\n|     14|         normal.|      7|\n|     15|         normal.|  11501|\n|     15|      portsweep.|      1|\n|     15|        neptune.|      1|\n|     16|        ipsweep.|   8010|\n|     16|           nmap.|    989|\n|     16|         normal.|    129|\n|     16|            pod.|     89|\n|     16|    warezclient.|      7|\n|     17|         normal.|   2133|\n|     17|    warezclient.|     19|\n|     17|      ftp_write.|      2|\n|     17|       multihop.|      2|\n|     17|    warezmaster.|      1|\n|     17|   guess_passwd.|      1|\n|     18|       teardrop.|    970|\n|     19|         normal.|  21393|\n|     19|           nmap.|    178|\n|     19|          smurf.|     81|\n|     19|        ipsweep.|     69|\n|     19|          satan.|     45|\n|     19|        neptune.|     35|\n|     19|    warezmaster.|     18|\n|     19|            pod.|     13|\n|     19|           imap.|     11|\n|     19|      portsweep.|      4|\n|     19|       multihop.|      2|\n|     19|        rootkit.|      2|\n|     19|     loadmodule.|      1|\n|     20|         normal.|   2786|\n|     20|      portsweep.|    289|\n|     21|         normal.|    350|\n|     21|     loadmodule.|      2|\n|     21|       multihop.|      1|\n|     22|         normal.|     60|\n|     22|    warezmaster.|      1|\n|     22|        ipsweep.|      1|\n|     23|         normal.|      1|\n|     24|      portsweep.|      2|\n|     25|         normal.|  12963|\n|     25|           nmap.|   1022|\n|     25|          satan.|    509|\n|     25|      portsweep.|     52|\n|     25|        ipsweep.|     28|\n|     25|            pod.|     14|\n|     25|        neptune.|     12|\n|     25|     loadmodule.|      2|\n|     25|       teardrop.|      2|\n|     25|    warezclient.|      1|\n|     26|        ipsweep.|   3206|\n|     26|         normal.|    627|\n|     26|        neptune.|      4|\n|     26|      portsweep.|      4|\n|     26|    warezclient.|      1|\n|     26|     loadmodule.|      1|\n|     26|          satan.|      1|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 90 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|         normal.| 174563|\n|      0|           back.|   1255|\n|      1|          smurf.|2806022|\n|      1|         normal.|    333|\n|      2|         normal.|     23|\n|      3|        neptune.| 377353|\n|      3|         normal.|     27|\n|      3|      portsweep.|      1|\n|      4|        neptune.| 204553|\n|      4|      portsweep.|     38|\n|      4|         normal.|     10|\n|      5|       teardrop.|    970|\n|      6|         normal.|      1|\n|      7|         normal.|   7691|\n|      7|    warezclient.|    460|\n|      7|buffer_overflow.|      3|\n|      7|        rootkit.|      1|\n|      7|      ftp_write.|      1|\n|      8|         normal.|   6116|\n|      8|        ipsweep.|      2|\n|      8|      portsweep.|      1|\n|      9|         normal.|   4435|\n|     10|         normal.|  25760|\n|     10|          satan.|    301|\n|     10|          smurf.|    130|\n|     10|    warezclient.|     41|\n|     10|           nmap.|     16|\n|     10|        rootkit.|      3|\n|     10|      portsweep.|      3|\n|     10|            spy.|      1|\n|     10|           imap.|      1|\n|     11|         normal.|   1105|\n|     11|    warezclient.|     14|\n|     12|         normal.|      2|\n|     13|         normal.|  54718|\n|     13|           back.|     29|\n|     14|         normal.|  11483|\n|     14|        neptune.|      1|\n|     14|      portsweep.|      1|\n|     15|         normal.|    684|\n|     16|         normal.|    218|\n|     16|buffer_overflow.|     18|\n|     16|            phf.|      4|\n|     16|        rootkit.|      1|\n|     16|     loadmodule.|      1|\n|     17|           land.|     21|\n|     17|         normal.|      7|\n|     18|        ipsweep.|   2524|\n|     18|         normal.|    247|\n|     18|        neptune.|      2|\n|     18|      portsweep.|      2|\n|     19|      portsweep.|   6205|\n|     19|        ipsweep.|    197|\n|     19|         normal.|     12|\n|     20|         normal.|     16|\n|     21|         normal.|      1|\n|     22|         normal.|      6|\n|     22|          satan.|      1|\n|     22|   guess_passwd.|      1|\n|     23|         normal.|     55|\n|     24|      portsweep.|      2|\n|     25|         normal.|      1|\n|     26|      portsweep.|      2|\n|     27|         normal.|   2539|\n|     27|      portsweep.|    289|\n|     28|      portsweep.|      3|\n|     29|         normal.|    349|\n|     30|         normal.|  80499|\n|     30|           back.|    109|\n|     31|         normal.|   1418|\n|     31|           nmap.|      3|\n|     31|          satan.|      1|\n|     32|         normal.|      1|\n|     33|         normal.|   2133|\n|     33|    warezclient.|     19|\n|     33|       multihop.|      2|\n|     33|      ftp_write.|      2|\n|     33|   guess_passwd.|      1|\n|     33|    warezmaster.|      1|\n|     34|      portsweep.|   1545|\n|     34|          satan.|      3|\n|     34|         normal.|      2|\n|     35|         normal.|  32300|\n|     35|           back.|     21|\n|     35|    warezclient.|      8|\n|     35|      ftp_write.|      1|\n|     36|        ipsweep.|   8009|\n|     36|           nmap.|    986|\n|     36|         normal.|    109|\n|     36|    warezclient.|      2|\n|     37|      portsweep.|      1|\n|     38|         normal.| 105150|\n|     38|          smurf.|   1536|\n|     38|          satan.|    193|\n|     38|           nmap.|     53|\n|     39|        neptune.|   5362|\n|     39|      portsweep.|    248|\n|     39|         normal.|      1|\n|     40|         normal.|   7981|\n|     40|          satan.|    261|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 120 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|        neptune.| 482773|\n|      0|         normal.|      1|\n|      1|          smurf.|2805796|\n|      1|         normal.|    333|\n|      2|        neptune.| 204570|\n|      2|         normal.|    888|\n|      2|      portsweep.|    528|\n|      2|          satan.|      1|\n|      3|           land.|     21|\n|      3|         normal.|      7|\n|      4|         normal.|      2|\n|      5|         normal.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|   1642|\n|      7|      portsweep.|    101|\n|      8|         normal.|  40621|\n|      8|        ipsweep.|     13|\n|      8|           back.|      7|\n|      8|    warezclient.|      1|\n|      8|      portsweep.|      1|\n|      9|         normal.|      1|\n|     10|         normal.|  65255|\n|     11|         normal.|     20|\n|     12|      portsweep.|      2|\n|     13|         normal.|  54149|\n|     14|      portsweep.|      1|\n|     15|       teardrop.|    970|\n|     16|         normal.|    216|\n|     16|buffer_overflow.|     18|\n|     16|            phf.|      4|\n|     16|     loadmodule.|      1|\n|     16|        rootkit.|      1|\n|     17|         normal.|   1049|\n|     17|    warezclient.|     15|\n|     18|         normal.|    839|\n|     18|    warezclient.|      5|\n|     19|           back.|   1701|\n|     19|         normal.|    356|\n|     19|    warezclient.|     39|\n|     20|         normal.|   5442|\n|     20|          satan.|    117|\n|     20|      portsweep.|      4|\n|     20|           nmap.|      1|\n|     21|         normal.|      1|\n|     22|         normal.|      6|\n|     23|        ipsweep.|    679|\n|     23|         normal.|      9|\n|     24|         normal.|     29|\n|     25|         normal.|      2|\n|     26|         normal.|    349|\n|     27|         normal.|   1389|\n|     27|           nmap.|      2|\n|     27|          satan.|      1|\n|     28|        ipsweep.|   7981|\n|     28|         normal.|     98|\n|     28|           nmap.|     34|\n|     28|    warezclient.|      2|\n|     29|         normal.|    181|\n|     30|         normal.|      5|\n|     31|         normal.|      1|\n|     32|           nmap.|   1018|\n|     32|        neptune.|     17|\n|     32|      portsweep.|      9|\n|     32|         normal.|      2|\n|     33|         normal.|     12|\n|     34|         normal.|   4383|\n|     35|         normal.| 194978|\n|     35|           back.|     39|\n|     36|   guess_passwd.|     51|\n|     36|         normal.|     48|\n|     36|        rootkit.|      1|\n|     37|         normal.|     48|\n|     37|        ipsweep.|      1|\n|     37|    warezmaster.|      1|\n|     38|        ipsweep.|   2524|\n|     38|         normal.|    243|\n|     38|        neptune.|      2|\n|     38|      portsweep.|      2|\n|     39|         normal.|   6511|\n|     39|          satan.|    333|\n|     39|      portsweep.|      1|\n|     40|         normal.|    552|\n|     41|         normal.|   3839|\n|     41|          satan.|    268|\n|     41|      portsweep.|     40|\n|     41|        ipsweep.|     13|\n|     41|           nmap.|      1|\n|     42|         normal.|  12138|\n|     42|          satan.|    652|\n|     42|          smurf.|    541|\n|     42|           nmap.|     24|\n|     42|      portsweep.|      7|\n|     42|        rootkit.|      2|\n|     42|            spy.|      1|\n|     43|          satan.|  12200|\n|     43|      portsweep.|   1715|\n|     43|         normal.|      2|\n|     44|      portsweep.|    298|\n|     44|         normal.|      9|\n|     45|         normal.|   1668|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 150 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|         normal.| 185575|\n|      0|           back.|     38|\n|      1|         normal.|    216|\n|      1|buffer_overflow.|     18|\n|      1|            phf.|      4|\n|      1|        rootkit.|      1|\n|      1|     loadmodule.|      1|\n|      2|           land.|     21|\n|      2|         normal.|      7|\n|      3|         normal.|   2132|\n|      4|        neptune.| 370897|\n|      4|         normal.|     24|\n|      4|      portsweep.|      1|\n|      5|         normal.|    181|\n|      6|         normal.|      1|\n|      7|         normal.|      6|\n|      8|         normal.|     10|\n|      9|         normal.|  17306|\n|      9|    warezclient.|      6|\n|     10|          smurf.|2805787|\n|     10|         normal.|    308|\n|     11|         normal.|      2|\n|     12|         normal.|  10805|\n|     12|        ipsweep.|      1|\n|     12|      portsweep.|      1|\n|     13|         normal.|    970|\n|     13|    warezclient.|      4|\n|     13|       multihop.|      2|\n|     13|      ftp_write.|      2|\n|     13|    warezmaster.|      1|\n|     13|   guess_passwd.|      1|\n|     14|         normal.|      1|\n|     15|         normal.|     58|\n|     15|        ipsweep.|      1|\n|     15|    warezmaster.|      1|\n|     16|         normal.| 106052|\n|     17|         normal.|  19067|\n|     18|      portsweep.|      1|\n|     19|        neptune.|  49870|\n|     20|           nmap.|    985|\n|     20|         normal.|    173|\n|     20|        ipsweep.|     28|\n|     20|    warezclient.|      4|\n|     20|        neptune.|      1|\n|     21|         normal.|     21|\n|     21|            spy.|      1|\n|     22|         normal.|   1212|\n|     22|          satan.|      1|\n|     22|           nmap.|      1|\n|     23|         normal.|   4383|\n|     24|         normal.|   3068|\n|     24|        neptune.|     26|\n|     24|          satan.|      4|\n|     24|        ipsweep.|      3|\n|     25|   guess_passwd.|      1|\n|     26|          satan.|  11898|\n|     27|         normal.|   1222|\n|     27|        ipsweep.|    164|\n|     27|    warezclient.|     35|\n|     27|        neptune.|      7|\n|     27|      ftp_write.|      1|\n|     27|          satan.|      1|\n|     28|         normal.|    349|\n|     29|   guess_passwd.|     51|\n|     29|         normal.|     48|\n|     29|        rootkit.|      1|\n|     30|         normal.|   9681|\n|     30|          satan.|    515|\n|     30|      portsweep.|     41|\n|     30|           nmap.|      3|\n|     31|      portsweep.|      1|\n|     32|      portsweep.|      2|\n|     33|         normal.|      2|\n|     33|      ftp_write.|      1|\n|     34|         normal.|      1|\n|     35|         normal.|     12|\n|     36|         normal.|    288|\n|     36|    warezclient.|    274|\n|     37|         normal.|      1|\n|     38|      portsweep.|    297|\n|     38|         normal.|      5|\n|     39|         normal.|   9691|\n|     39|          satan.|    735|\n|     39|          smurf.|    498|\n|     39|           nmap.|     16|\n|     39|      portsweep.|      4|\n|     39|        rootkit.|      2|\n|     39|            spy.|      1|\n|     40|         normal.|   5182|\n|     40|          satan.|    241|\n|     40|      portsweep.|      7|\n|     40|           back.|      3|\n|     40|    warezclient.|      1|\n|     41|       multihop.|      1|\n|     42|         normal.|   4499|\n|     43|      portsweep.|   5924|\n|     43|        ipsweep.|    197|\n|     43|         normal.|      8|\n|     44|         normal.|  18197|\n|     44|    warezclient.|     36|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 180 : \n+-------+----------------+------+\n|cluster|           label| count|\n+-------+----------------+------+\n|      0|          smurf.|178211|\n|      0|         normal.|   315|\n|      0|          satan.|    59|\n|      1|         normal.|   872|\n|      1|    warezclient.|     4|\n|      1|       multihop.|     2|\n|      1|      ftp_write.|     2|\n|      1|   guess_passwd.|     1|\n|      1|    warezmaster.|     1|\n|      2|      portsweep.|     1|\n|      3|         normal.|     1|\n|      4|        neptune.|123668|\n|      5|         normal.|     1|\n|      6|      portsweep.|     1|\n|      7|         normal.|  2203|\n|      7|      portsweep.|    11|\n|      7|        ipsweep.|     8|\n|      7|           back.|     3|\n|      7|    warezclient.|     1|\n|      8|      portsweep.|     2|\n|      9|      portsweep.|     1|\n|     10|        ipsweep.|  7980|\n|     10|         normal.|    43|\n|     10|           nmap.|     3|\n|     10|    warezclient.|     2|\n|     11|         normal.|   216|\n|     11|buffer_overflow.|    18|\n|     11|            phf.|     4|\n|     11|     loadmodule.|     1|\n|     11|        rootkit.|     1|\n|     12|         normal.| 88410|\n|     13|   guess_passwd.|     1|\n|     14|         normal.|     2|\n|     15|         normal.| 16510|\n|     16|   guess_passwd.|    51|\n|     16|         normal.|    48|\n|     16|        rootkit.|     1|\n|     17|        neptune.|103984|\n|     17|      portsweep.|   245|\n|     17|         normal.|    12|\n|     17|          satan.|     2|\n|     18|          satan.| 11898|\n|     19|         normal.|     3|\n|     20|         normal.|  3295|\n|     21|         normal.|   181|\n|     22|         normal.| 57976|\n|     23|         normal.|     6|\n|     24|         normal.|  1084|\n|     25|         normal.| 20771|\n|     25|           back.|     2|\n|     26|         normal.|     3|\n|     27|      portsweep.|   211|\n|     27|         normal.|    21|\n|     28|         normal.|   684|\n|     29|         normal.|   348|\n|     30|         normal.|  1191|\n|     30|          satan.|    18|\n|     30|           nmap.|    16|\n|     31|         normal.|     7|\n|     32|         normal.|  8977|\n|     32|    warezclient.|     1|\n|     33|           land.|    21|\n|     33|         normal.|     7|\n|     34|       teardrop.|   711|\n|     35|         normal.|   559|\n|     35|    warezclient.|    14|\n|     36|         normal.|     1|\n|     37|         normal.|  1334|\n|     38|        neptune.|  8986|\n|     38|      portsweep.|   215|\n|     38|         normal.|     1|\n|     39|         normal.|  1398|\n|     39|        neptune.|     3|\n|     39|          satan.|     3|\n|     39|    warezclient.|     1|\n|     39|           nmap.|     1|\n|     40|         normal.|  2348|\n|     40|          satan.|   122|\n|     40|      portsweep.|     2|\n|     41|         normal.|    12|\n|     42|           nmap.|  1018|\n|     42|        neptune.|    16|\n|     42|      portsweep.|     9|\n|     42|         normal.|     1|\n|     43|         normal.|103044|\n|     43|          smurf.|  1086|\n|     43|           nmap.|    42|\n|     43|          satan.|    39|\n|     44|         normal.|     4|\n|     45|         normal.|   210|\n|     45|      portsweep.|   183|\n|     46|         normal.|   283|\n|     47|         normal.|    42|\n|     47|        ipsweep.|     1|\n|     47|    warezmaster.|     1|\n|     48|         normal.|  6045|\n|     49|     loadmodule.|     1|\n|     50|         normal.|   896|\n|     50|      portsweep.|     1|\n|     50|        ipsweep.|     1|\n+-------+----------------+------+\nonly showing top 100 rows\n\nK = 210 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|2624672|\n|      0|         normal.|     18|\n|      1|         normal.|   8603|\n|      2|        neptune.| 102425|\n|      2|      portsweep.|      2|\n|      2|         normal.|      1|\n|      3|         normal.|    857|\n|      3|    warezclient.|     15|\n|      4|      portsweep.|      1|\n|      5|         normal.|  40431|\n|      6|         normal.|      1|\n|      7|        neptune.| 235305|\n|      7|         normal.|      1|\n|      8|         normal.|   1752|\n|      8|    warezclient.|      2|\n|      9|         normal.|   3381|\n|      9|          satan.|    241|\n|      9|      portsweep.|     37|\n|     10|         normal.|     16|\n|     11|         normal.|      2|\n|     12|        ipsweep.|   7980|\n|     12|         normal.|     55|\n|     12|           nmap.|      3|\n|     12|    warezclient.|      2|\n|     13|         normal.|   9859|\n|     13|    warezclient.|      3|\n|     13|      ftp_write.|      1|\n|     14|       teardrop.|    970|\n|     15|     loadmodule.|      2|\n|     15|       multihop.|      1|\n|     15|         normal.|      1|\n|     16|         normal.|    479|\n|     17|         normal.|      6|\n|     18|      portsweep.|    297|\n|     18|         normal.|      5|\n|     19|        ipsweep.|    678|\n|     19|         normal.|      9|\n|     20|         normal.|   1774|\n|     20|          satan.|      5|\n|     20|      portsweep.|      2|\n|     21|      portsweep.|      1|\n|     22|   guess_passwd.|     51|\n|     22|         normal.|     46|\n|     22|        rootkit.|      1|\n|     23|         normal.|    684|\n|     24|         normal.|     30|\n|     24|        ipsweep.|      1|\n|     25|         normal.|  10712|\n|     25|    warezclient.|      2|\n|     26|          satan.|  11898|\n|     27|         normal.|   1078|\n|     27|      portsweep.|      3|\n|     28|         normal.|    534|\n|     28|    warezclient.|     14|\n|     29|         normal.|    216|\n|     29|buffer_overflow.|     18|\n|     29|            phf.|      4|\n|     29|        rootkit.|      1|\n|     29|     loadmodule.|      1|\n|     30|         normal.|    594|\n|     31|         normal.|    349|\n|     32|   guess_passwd.|      1|\n|     33|         normal.|   2682|\n|     34|         normal.|      2|\n|     35|         normal.|  21191|\n|     36|         normal.|  19043|\n|     37|         normal.|   5900|\n|     38|         normal.|  29441|\n|     39|         normal.|      5|\n|     40|         normal.|   2612|\n|     40|          satan.|     24|\n|     40|           nmap.|      1|\n|     41|         normal.|     11|\n|     42|         normal.|      1|\n|     43|         normal.|   4287|\n|     44|           land.|     21|\n|     44|         normal.|      7|\n|     45|          satan.|    752|\n|     45|         normal.|      9|\n|     46|         normal.|  11333|\n|     46|           back.|      4|\n|     47|         normal.|    405|\n|     47|        ipsweep.|      6|\n|     47|     loadmodule.|      1|\n|     48|         normal.|   1635|\n|     48|          satan.|      3|\n|     48|        neptune.|      3|\n|     48|           back.|      2|\n|     48|           nmap.|      1|\n|     48|    warezclient.|      1|\n|     49|         normal.|      6|\n|     50|         normal.|   5427|\n|     50|      portsweep.|      1|\n|     50|        neptune.|      1|\n|     51|         normal.|    999|\n|     51|        ipsweep.|     30|\n|     51|          satan.|      2|\n|     51|    warezclient.|      1|\n|     52|         normal.|   2249|\n|     52|          satan.|     21|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 240 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|        neptune.| 100507|\n|      0|         normal.|     10|\n|      1|          smurf.|2803908|\n|      1|         normal.|    185|\n|      2|        neptune.| 179366|\n|      3|           land.|     21|\n|      3|         normal.|      7|\n|      4|       teardrop.|    711|\n|      5|         normal.|   4778|\n|      6|         normal.|      1|\n|      7|         normal.|    307|\n|      8|         normal.|   1968|\n|      9|         normal.|  15268|\n|     10|        ipsweep.|   7980|\n|     10|         normal.|     37|\n|     10|           nmap.|      3|\n|     10|    warezclient.|      2|\n|     11|         normal.| 138267|\n|     11|           back.|     38|\n|     12|         normal.|    509|\n|     13|         normal.|  43427|\n|     14|         normal.|      1|\n|     15|         normal.|    457|\n|     15|        neptune.|      2|\n|     15|           back.|      2|\n|     15|          satan.|      1|\n|     16|         normal.|    348|\n|     17|         normal.|      2|\n|     18|      portsweep.|      1|\n|     19|         normal.|   3940|\n|     19|        neptune.|     27|\n|     19|        ipsweep.|     12|\n|     19|           back.|      9|\n|     20|         normal.|      7|\n|     21|        ipsweep.|   2524|\n|     21|         normal.|    236|\n|     21|        neptune.|      2|\n|     21|      portsweep.|      2|\n|     22|         normal.|    684|\n|     23|         normal.|      5|\n|     24|         normal.|      4|\n|     25|         normal.|     30|\n|     26|   guess_passwd.|     51|\n|     26|         normal.|     48|\n|     26|        rootkit.|      1|\n|     27|         normal.|      1|\n|     28|         normal.|   9591|\n|     28|    warezclient.|      3|\n|     28|      ftp_write.|      1|\n|     29|         normal.|    216|\n|     29|buffer_overflow.|     18|\n|     29|            phf.|      4|\n|     29|     loadmodule.|      1|\n|     29|        rootkit.|      1|\n|     30|         normal.|   1787|\n|     30|      portsweep.|      7|\n|     30|    warezclient.|      1|\n|     30|           back.|      1|\n|     31|         normal.|    354|\n|     31|      portsweep.|      2|\n|     31|        ipsweep.|      1|\n|     32|         normal.|   3204|\n|     32|           back.|     47|\n|     33|      portsweep.|   3701|\n|     33|        ipsweep.|    195|\n|     33|         normal.|      6|\n|     34|      portsweep.|      1|\n|     35|         normal.|  16687|\n|     36|         normal.|     13|\n|     36|    warezmaster.|      1|\n|     37|         normal.|      1|\n|     38|         normal.|  81197|\n|     38|          smurf.|      1|\n|     39|         normal.|      2|\n|     39|      ftp_write.|      1|\n|     40|         normal.|     22|\n|     41|         normal.|   1334|\n|     42|         normal.|   2028|\n|     42|    warezclient.|     18|\n|     42|       multihop.|      2|\n|     42|      ftp_write.|      2|\n|     42|   guess_passwd.|      1|\n|     42|    warezmaster.|      1|\n|     43|         normal.|  16529|\n|     44|          satan.|   8949|\n|     45|         normal.|    293|\n|     45|    warezclient.|      1|\n|     46|         normal.|     12|\n|     47|         normal.|    102|\n|     48|      portsweep.|    289|\n|     48|         normal.|     20|\n|     49|        neptune.| 131337|\n|     50|      portsweep.|    990|\n|     50|          satan.|    371|\n|     50|         normal.|     16|\n|     50|        neptune.|      1|\n|     51|         normal.|   5533|\n|     52|         normal.|   1183|\n|     53|   guess_passwd.|      1|\n|     54|         normal.|   3308|\n+-------+----------------+-------+\nonly showing top 100 rows\n\nK = 270 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.|  70517|\n|      0|         normal.|     31|\n|      1|         normal.|     10|\n|      2|         normal.|   1198|\n|      2|    warezclient.|     14|\n|      3|        neptune.|  78220|\n|      4|        neptune.| 102322|\n|      4|      portsweep.|      2|\n|      4|         normal.|      1|\n|      5|         normal.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|   7113|\n|      7|           back.|      7|\n|      8|      portsweep.|     99|\n|      8|         normal.|      5|\n|      9|         normal.|   1748|\n|      9|          satan.|     54|\n|      9|      portsweep.|      3|\n|     10|         normal.| 139327|\n|     10|           back.|     37|\n|     11|         normal.|    207|\n|     11|buffer_overflow.|     15|\n|     11|            phf.|      4|\n|     11|        rootkit.|      1|\n|     12|         normal.|      2|\n|     13|     loadmodule.|      2|\n|     13|         normal.|      1|\n|     13|       multihop.|      1|\n|     14|         normal.|      1|\n|     15|         normal.|     41|\n|     16|         normal.|    348|\n|     17|         normal.|  91255|\n|     18|      portsweep.|   1503|\n|     18|          satan.|      3|\n|     18|         normal.|      1|\n|     19|        ipsweep.|   7980|\n|     19|         normal.|     36|\n|     19|           nmap.|      3|\n|     19|    warezclient.|      2|\n|     20|         normal.|    454|\n|     21|           land.|     21|\n|     21|         normal.|      7|\n|     22|         normal.|   3208|\n|     23|         normal.|  14464|\n|     24|         normal.|     10|\n|     25|         normal.|   1974|\n|     25|        ipsweep.|      1|\n|     26|      portsweep.|      1|\n|     27|            pod.|    165|\n|     27|       teardrop.|      9|\n|     28|   guess_passwd.|     50|\n|     28|         normal.|      1|\n|     29|         normal.|    534|\n|     29|    warezclient.|     14|\n|     30|         normal.|   2588|\n|     31|         normal.|      2|\n|     32|         normal.|   9625|\n|     33|         normal.|   3164|\n|     34|         normal.|  16208|\n|     35|         normal.|  53346|\n|     36|         normal.|      6|\n|     37|      portsweep.|      2|\n|     38|      portsweep.|   2395|\n|     38|         normal.|      3|\n|     39|        ipsweep.|   2523|\n|     39|         normal.|    188|\n|     39|      portsweep.|      2|\n|     39|        neptune.|      2|\n|     40|         normal.|    810|\n|     41|         normal.|    800|\n|     41|           back.|      4|\n|     41|          satan.|      2|\n|     41|    warezclient.|      1|\n|     42|         normal.|      1|\n|     43|         normal.|     37|\n|     43|        ipsweep.|      1|\n|     44|          satan.|      1|\n|     45|         normal.|      5|\n|     46|         normal.|      8|\n|     47|         normal.|     20|\n|     48|         normal.|   1189|\n|     48|          satan.|      1|\n|     48|           nmap.|      1|\n|     49|         normal.|   4652|\n|     50|       teardrop.|    711|\n|     51|         normal.|      3|\n|     52|         normal.|   2311|\n|     52|        neptune.|     15|\n|     52|          satan.|      4|\n|     52|        ipsweep.|      3|\n|     53|          smurf.|2614582|\n|     53|         normal.|      7|\n|     54|         normal.|   2526|\n|     55|        neptune.|    684|\n|     56|         normal.|     21|\n|     57|         normal.|   1998|\n|     57|    warezclient.|      2|\n|     57|      ftp_write.|      1|\n|     58|      portsweep.|      1|\n|     59|         normal.|  22268|\n+-------+----------------+-------+\nonly showing top 100 rows\n\n+-------+-----+\n|cluster|count|\n+-------+-----+\n|      0|    3|\n|      1|    6|\n|      2|    1|\n|      3|    1|\n|      4|    1|\n|      5|    1|\n|      6|    1|\n|      7|    5|\n|      8|    1|\n|      9|    1|\n|     10|    4|\n|     11|    5|\n|     12|    1|\n|     13|    1|\n|     14|    1|\n|     15|    1|\n|     16|    3|\n|     17|    4|\n|     18|    1|\n|     19|    1|\n+-------+-----+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mdf2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1903268205",
      "id": "20210605-174335_1292416474",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:270"
    },
    {
      "text": "%md\nEn observant le graphe ci-dessous, on peut observer l'évolution de la qualité du clustering qui diminue rapidement avant de tendre vers un  minimum. On peut supposer que la valeur optimal de k dans ce cas-ci se trouve autour de 180. La diminution de l'erreur après cette valeur n'est plus très prononcée ce qui indique que le minimum est proche.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>En observant le graphe ci-dessous, on peut observer l&rsquo;évolution de la qualité du clustering qui diminue rapidement avant de tendre vers un  minimum. On peut supposer que la valeur optimal de k dans ce cas-ci se trouve autour de 180. La diminution de l&rsquo;erreur après cette valeur n&rsquo;est plus très prononcée ce qui indique que le minimum est proche.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_300270078",
      "id": "paragraph_1622998488415_184842474",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:271"
    },
    {
      "text": "val test2DF = (60 to 270 by 30).map(k => (k, Score2Res((k/30)-2)._2._1)).toSeq.toDF(\"k\", \"score\")\nz.show(test2DF)\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "stackedAreaChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "k": "string",
                      "score": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "k",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "score",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "k\tscore\n60\t1.1301223770375508\n90\t0.708995143741017\n120\t0.5132572853592624\n150\t0.3940539505639885\n180\t0.3328789565726285\n210\t0.2782550440380699\n240\t0.2522955839904606\n270\t0.2235633137942374\n"
          },
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mtest2DF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [k: int, score: double]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1973354247",
      "id": "paragraph_1622989482542_1680768805",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:272"
    },
    {
      "text": "%md\nOn peut maintenant observer la répartition des clusters avec K=180 : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On peut maintenant observer la répartition des clusters avec K=180 :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_706410949",
      "id": "paragraph_1623061579951_53930177",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:273"
    },
    {
      "text": "val df2 = Score2Res(4)._2._2.transform(numericOnly).select(\"cluster\", \"label\").distinct.groupBy(\"cluster\").count().sort(desc(\"count\"))\ndf2.show(df2.count.toInt)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----+\n|cluster|count|\n+-------+-----+\n|     93|   13|\n|     51|    7|\n|     60|    7|\n|    162|    6|\n|    169|    6|\n|     90|    6|\n|    109|    6|\n|      1|    6|\n|     39|    5|\n|      7|    5|\n|    101|    5|\n|    170|    5|\n|     11|    5|\n|    139|    4|\n|    130|    4|\n|    128|    4|\n|     10|    4|\n|     80|    4|\n|    167|    4|\n|     98|    4|\n|     43|    4|\n|     56|    4|\n|    158|    4|\n|     17|    4|\n|    149|    4|\n|     42|    4|\n|    173|    4|\n|    153|    4|\n|     89|    4|\n|    152|    3|\n|    176|    3|\n|    178|    3|\n|     65|    3|\n|     84|    3|\n|    164|    3|\n|     69|    3|\n|     40|    3|\n|     50|    3|\n|     57|    3|\n|    122|    3|\n|     38|    3|\n|     47|    3|\n|     62|    3|\n|    111|    3|\n|     81|    3|\n|     64|    3|\n|     58|    3|\n|    116|    3|\n|    147|    3|\n|     68|    3|\n|     61|    3|\n|    132|    3|\n|     76|    3|\n|     16|    3|\n|     30|    3|\n|    159|    3|\n|    172|    3|\n|      0|    3|\n|     96|    2|\n|     45|    2|\n|     75|    2|\n|    133|    2|\n|    165|    2|\n|     52|    2|\n|     59|    2|\n|     55|    2|\n|    120|    2|\n|     25|    2|\n|     92|    2|\n|    157|    2|\n|    143|    2|\n|    156|    2|\n|     32|    2|\n|    151|    2|\n|    141|    2|\n|    145|    2|\n|     33|    2|\n|     27|    2|\n|    106|    2|\n|    123|    2|\n|    175|    2|\n|     79|    2|\n|     66|    2|\n|    124|    2|\n|     35|    2|\n|     67|    2|\n|     53|    2|\n|    161|    2|\n|    100|    2|\n|     74|    2|\n|    148|    1|\n|     31|    1|\n|    137|    1|\n|     85|    1|\n|    155|    1|\n|    126|    1|\n|     78|    1|\n|     26|    1|\n|    108|    1|\n|     44|    1|\n|     28|    1|\n|     22|    1|\n|     91|    1|\n|    115|    1|\n|     34|    1|\n|    140|    1|\n|    146|    1|\n|    107|    1|\n|     13|    1|\n|     86|    1|\n|    168|    1|\n|    103|    1|\n|     12|    1|\n|     20|    1|\n|    171|    1|\n|     63|    1|\n|     94|    1|\n|     48|    1|\n|    163|    1|\n|      5|    1|\n|    112|    1|\n|    154|    1|\n|    177|    1|\n|    105|    1|\n|     37|    1|\n|    127|    1|\n|      9|    1|\n|     88|    1|\n|      6|    1|\n|    114|    1|\n|      4|    1|\n|    174|    1|\n|      8|    1|\n|    142|    1|\n|     23|    1|\n|      3|    1|\n|     87|    1|\n|    136|    1|\n|    166|    1|\n|    129|    1|\n|     97|    1|\n|    102|    1|\n|     54|    1|\n|     73|    1|\n|    160|    1|\n|     24|    1|\n|     70|    1|\n|     19|    1|\n|     95|    1|\n|     41|    1|\n|     21|    1|\n|     15|    1|\n|    117|    1|\n|    179|    1|\n|     71|    1|\n|     14|    1|\n|     83|    1|\n|    110|    1|\n|    135|    1|\n|     72|    1|\n|      2|    1|\n|    119|    1|\n|    118|    1|\n|     46|    1|\n|     99|    1|\n|    144|    1|\n|     18|    1|\n|    138|    1|\n|     49|    1|\n|     77|    1|\n|     82|    1|\n|    113|    1|\n|    121|    1|\n|    125|    1|\n|     29|    1|\n|    150|    1|\n|    131|    1|\n|    134|    1|\n|    104|    1|\n|     36|    1|\n+-------+-----+\n\n\u001b[1m\u001b[34mdf2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1078512489",
      "id": "paragraph_1623059505742_491900923",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:274"
    },
    {
      "text": "%md\nOn remarque quelques clusters comportant plusieurs label, et 1 en contenant 13. On peut observer plus en détails ces résultats dans la cellule suivante.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On remarque quelques clusters comportant plusieurs label, et 1 en contenant 13. On peut observer plus en détails ces résultats dans la cellule suivante.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_1170349806",
      "id": "paragraph_1623061603736_944817673",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:275"
    },
    {
      "text": "print(\"K = \" + Score2Res(4)._1 + \" : \\n\")\nshowResult(Score2Res(4)._2._2)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "K = 180 : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|          smurf.| 178211|\n|      0|         normal.|    315|\n|      0|          satan.|     59|\n|      1|         normal.|    872|\n|      1|    warezclient.|      4|\n|      1|      ftp_write.|      2|\n|      1|       multihop.|      2|\n|      1|   guess_passwd.|      1|\n|      1|    warezmaster.|      1|\n|      2|      portsweep.|      1|\n|      3|         normal.|      1|\n|      4|        neptune.| 123668|\n|      5|         normal.|      1|\n|      6|      portsweep.|      1|\n|      7|         normal.|   2203|\n|      7|      portsweep.|     11|\n|      7|        ipsweep.|      8|\n|      7|           back.|      3|\n|      7|    warezclient.|      1|\n|      8|      portsweep.|      2|\n|      9|      portsweep.|      1|\n|     10|        ipsweep.|   7980|\n|     10|         normal.|     43|\n|     10|           nmap.|      3|\n|     10|    warezclient.|      2|\n|     11|         normal.|    216|\n|     11|buffer_overflow.|     18|\n|     11|            phf.|      4|\n|     11|     loadmodule.|      1|\n|     11|        rootkit.|      1|\n|     12|         normal.|  88410|\n|     13|   guess_passwd.|      1|\n|     14|         normal.|      2|\n|     15|         normal.|  16510|\n|     16|   guess_passwd.|     51|\n|     16|         normal.|     48|\n|     16|        rootkit.|      1|\n|     17|        neptune.| 103984|\n|     17|      portsweep.|    245|\n|     17|         normal.|     12|\n|     17|          satan.|      2|\n|     18|          satan.|  11898|\n|     19|         normal.|      3|\n|     20|         normal.|   3295|\n|     21|         normal.|    181|\n|     22|         normal.|  57976|\n|     23|         normal.|      6|\n|     24|         normal.|   1084|\n|     25|         normal.|  20771|\n|     25|           back.|      2|\n|     26|         normal.|      3|\n|     27|      portsweep.|    211|\n|     27|         normal.|     21|\n|     28|         normal.|    684|\n|     29|         normal.|    348|\n|     30|         normal.|   1191|\n|     30|          satan.|     18|\n|     30|           nmap.|     16|\n|     31|         normal.|      7|\n|     32|         normal.|   8977|\n|     32|    warezclient.|      1|\n|     33|           land.|     21|\n|     33|         normal.|      7|\n|     34|       teardrop.|    711|\n|     35|         normal.|    559|\n|     35|    warezclient.|     14|\n|     36|         normal.|      1|\n|     37|         normal.|   1334|\n|     38|        neptune.|   8986|\n|     38|      portsweep.|    215|\n|     38|         normal.|      1|\n|     39|         normal.|   1398|\n|     39|        neptune.|      3|\n|     39|          satan.|      3|\n|     39|           nmap.|      1|\n|     39|    warezclient.|      1|\n|     40|         normal.|   2348|\n|     40|          satan.|    122|\n|     40|      portsweep.|      2|\n|     41|         normal.|     12|\n|     42|           nmap.|   1018|\n|     42|        neptune.|     16|\n|     42|      portsweep.|      9|\n|     42|         normal.|      1|\n|     43|         normal.| 103044|\n|     43|          smurf.|   1086|\n|     43|           nmap.|     42|\n|     43|          satan.|     39|\n|     44|         normal.|      4|\n|     45|         normal.|    210|\n|     45|      portsweep.|    183|\n|     46|         normal.|    283|\n|     47|         normal.|     42|\n|     47|        ipsweep.|      1|\n|     47|    warezmaster.|      1|\n|     48|         normal.|   6045|\n|     49|     loadmodule.|      1|\n|     50|         normal.|    896|\n|     50|      portsweep.|      1|\n|     50|        ipsweep.|      1|\n|     51|         normal.|   1458|\n|     51|        ipsweep.|     29|\n|     51|          satan.|      7|\n|     51|           nmap.|      4|\n|     51|    warezclient.|      2|\n|     51|        neptune.|      1|\n|     51|     loadmodule.|      1|\n|     52|         normal.|   2825|\n|     52|           back.|      1|\n|     53|          smurf.|2627942|\n|     53|         normal.|     19|\n|     54|         normal.|   2878|\n|     55|         normal.|      2|\n|     55|      ftp_write.|      1|\n|     56|         normal.|   1692|\n|     56|buffer_overflow.|      4|\n|     56|        rootkit.|      1|\n|     56|     loadmodule.|      1|\n|     57|         normal.|   9817|\n|     57|    warezclient.|      2|\n|     57|      ftp_write.|      1|\n|     58|      portsweep.|   1545|\n|     58|          satan.|      3|\n|     58|         normal.|      2|\n|     59|        neptune.| 203291|\n|     59|         normal.|     11|\n|     60|         normal.|   8251|\n|     60|          satan.|    538|\n|     60|          smurf.|    445|\n|     60|           nmap.|     16|\n|     60|      portsweep.|      5|\n|     60|        rootkit.|      2|\n|     60|            spy.|      1|\n|     61|           back.|   1699|\n|     61|         normal.|    352|\n|     61|    warezclient.|     38|\n|     62|         normal.|   2470|\n|     62|          satan.|    289|\n|     62|      portsweep.|      4|\n|     63|         normal.|     39|\n|     64|      portsweep.|   6217|\n|     64|        ipsweep.|    196|\n|     64|         normal.|     12|\n|     65|         normal.|   2248|\n|     65|          satan.|     23|\n|     65|        ipsweep.|      1|\n|     66|         normal.|   7940|\n|     66|        ipsweep.|      1|\n|     67|         normal.|      2|\n|     67|          satan.|      1|\n|     68|         normal.|    358|\n|     68|buffer_overflow.|      2|\n|     68|     loadmodule.|      1|\n|     69|         normal.|   7651|\n|     69|          satan.|    473|\n|     69|      portsweep.|     41|\n|     70|         normal.|      1|\n|     71|         normal.|  14859|\n|     72|         normal.|  18242|\n|     73|         normal.|     16|\n|     74|            pod.|    165|\n|     74|       teardrop.|      9|\n|     75|         normal.|  15047|\n|     75|    warezclient.|      6|\n|     76|         normal.|   1781|\n|     76|          satan.|      5|\n|     76|      portsweep.|      2|\n|     77|         normal.|      2|\n|     78|         normal.|  18376|\n|     79|         normal.|     22|\n|     79|            spy.|      1|\n|     80|        ipsweep.|   2524|\n|     80|         normal.|    243|\n|     80|      portsweep.|      2|\n|     80|        neptune.|      2|\n|     81|         normal.|   2724|\n|     81|      portsweep.|      2|\n|     81|        neptune.|      1|\n|     82|         normal.|     26|\n|     83|         normal.|  57473|\n|     84|         normal.|   5208|\n|     84|          satan.|    103|\n|     84|           nmap.|      1|\n|     85|         normal.|      9|\n|     86|         normal.|  10803|\n|     87|         normal.|     13|\n|     88|      portsweep.|      1|\n|     89|         normal.|   4300|\n|     89|    warezclient.|    120|\n|     89|buffer_overflow.|      6|\n|     89|      ftp_write.|      1|\n|     90|         normal.|   3910|\n|     90|      portsweep.|    168|\n|     90|        neptune.|     36|\n|     90|           back.|      7|\n|     90|        ipsweep.|      2|\n|     90|          satan.|      1|\n|     91|         normal.|    575|\n|     92|         normal.|   8842|\n|     92|    warezclient.|      2|\n|     93|         normal.|  10591|\n|     93|           nmap.|    155|\n|     93|          smurf.|     92|\n|     93|        ipsweep.|     69|\n|     93|    warezmaster.|     18|\n|     93|           imap.|      8|\n|     93|          satan.|      6|\n|     93|            pod.|      5|\n|     93|       multihop.|      2|\n|     93|        rootkit.|      2|\n|     93|      portsweep.|      2|\n|     93|     loadmodule.|      1|\n|     93|        neptune.|      1|\n|     94|         normal.|      1|\n|     95|         normal.|      4|\n|     96|         normal.|  18314|\n|     96|           back.|      7|\n|     97|         normal.|  48193|\n|     98|         normal.|    979|\n|     98|        neptune.|     11|\n|     98|          satan.|      3|\n|     98|        ipsweep.|      3|\n|     99|         normal.|   2705|\n|    100|         normal.| 151258|\n|    100|           back.|     39|\n|    101|         normal.|  17788|\n|    101|    warezclient.|     36|\n|    101|          satan.|      2|\n|    101|           imap.|      1|\n|    101|        rootkit.|      1|\n|    102|         normal.|      3|\n|    103|      portsweep.|      1|\n|    104|         normal.|      7|\n|    105|            pod.|     94|\n|    106|      portsweep.|    297|\n|    106|         normal.|      5|\n|    107|         normal.|      5|\n|    108|         normal.|      1|\n|    109|         normal.|   7000|\n|    109|          satan.|     36|\n|    109|        neptune.|     28|\n|    109|           nmap.|     17|\n|    109|      portsweep.|      3|\n|    109|           imap.|      3|\n|    110|         normal.|   2149|\n|    111|         normal.|   2306|\n|    111|          satan.|     17|\n|    111|    warezclient.|      3|\n|    112|         normal.|  15592|\n|    113|         normal.|      7|\n|    114|      portsweep.|      1|\n|    115|         normal.|      4|\n|    116|        ipsweep.|    679|\n|    116|         normal.|      9|\n|    116|      portsweep.|      1|\n|    117|         normal.|      5|\n|    118|         normal.|      3|\n|    119|         normal.|  33775|\n|    120|         normal.|  13226|\n|    120|           back.|      6|\n|    121|         normal.|      1|\n|    122|        neptune.|   1761|\n|    122|      portsweep.|     32|\n|    122|         normal.|      1|\n|    123|         normal.|   8314|\n|    123|        neptune.|      2|\n|    124|         normal.|  11354|\n|    124|        ipsweep.|      2|\n|    125|       teardrop.|    259|\n|    126|         normal.|      1|\n|    127|         normal.|   1341|\n|    128|         normal.|   7270|\n|    128|          smurf.|     89|\n|    128|           nmap.|     29|\n|    128|          satan.|      8|\n|    129|      portsweep.|      1|\n|    130|         normal.|   1022|\n|    130|           back.|      4|\n|    130|          satan.|      3|\n|    130|    warezclient.|      1|\n|    131|         normal.|   7850|\n|    132|           perl.|      3|\n|    132|         normal.|      1|\n|    132|       multihop.|      1|\n|    133|      portsweep.|    197|\n|    133|         normal.|      8|\n|    134|         normal.|  10051|\n|    135|         normal.|    773|\n|    136|         normal.|    468|\n|    137|         normal.|    509|\n|    138|         normal.|      1|\n|    139|      portsweep.|    992|\n|    139|          satan.|    385|\n|    139|         normal.|     16|\n|    139|        neptune.|      1|\n|    140|         normal.|      1|\n|    141|         normal.|    293|\n|    141|    warezclient.|      1|\n|    142|         normal.|      1|\n|    143|          satan.|   1771|\n|    143|      portsweep.|     13|\n|    144|         normal.|  15804|\n|    145|         normal.|    957|\n|    145|    warezclient.|     51|\n|    146|         normal.|      4|\n|    147|         normal.|   3411|\n|    147|    warezclient.|    396|\n|    147|        rootkit.|      1|\n|    148|         normal.|   3544|\n|    149|           nmap.|    985|\n|    149|         normal.|    186|\n|    149|        ipsweep.|     28|\n|    149|    warezclient.|      4|\n|    150|         normal.|   4328|\n|    151|         normal.|   1156|\n|    151|    warezclient.|     14|\n|    152|        neptune.| 164087|\n|    152|         normal.|     15|\n|    152|      portsweep.|      1|\n|    153|         normal.|    399|\n|    153|        ipsweep.|      6|\n|    153|     loadmodule.|      2|\n|    153|          satan.|      1|\n|    154|         normal.|   3699|\n|    155|         normal.|   3612|\n|    156|    warezclient.|    274|\n|    156|         normal.|      5|\n|    157|        neptune.| 100548|\n|    157|         normal.|      7|\n|    158|         normal.|    348|\n|    158|          satan.|     69|\n|    158|          smurf.|     21|\n|    158|        neptune.|      1|\n|    159|         normal.|      3|\n|    159|        rootkit.|      1|\n|    159|      ftp_write.|      1|\n|    160|         normal.|     27|\n|    161|         normal.|    117|\n|    161|      portsweep.|      1|\n|    162|         normal.|    734|\n|    162|        ipsweep.|    161|\n|    162|    warezclient.|     19|\n|    162|        neptune.|      4|\n|    162|      portsweep.|      1|\n|    162|      ftp_write.|      1|\n|    163|        neptune.| 212902|\n|    164|           back.|    433|\n|    164|         normal.|    165|\n|    164|    warezclient.|      1|\n|    165|        neptune.| 152632|\n|    165|         normal.|      1|\n|    166|         normal.|   1179|\n|    167|         normal.|   3167|\n|    167|        neptune.|     15|\n|    167|          satan.|      3|\n|    167|      portsweep.|      1|\n|    168|         normal.|  14483|\n|    169|        ipsweep.|    757|\n|    169|         normal.|    174|\n|    169|    warezclient.|     25|\n|    169|           nmap.|     18|\n|    169|        neptune.|      5|\n|    169|      ftp_write.|      1|\n|    170|         normal.|   4106|\n|    170|        ipsweep.|     31|\n|    170|           nmap.|     10|\n|    170|        neptune.|      4|\n|    170|       multihop.|      1|\n|    171|         normal.|    100|\n|    172|       multihop.|      1|\n|    172|         normal.|      1|\n|    172|     loadmodule.|      1|\n|    173|         normal.|   1956|\n|    173|        neptune.|     27|\n|    173|          satan.|      2|\n|    173|        ipsweep.|      2|\n|    174|         normal.|      2|\n|    175|         normal.|   2632|\n|    175|    warezclient.|      2|\n|    176|         normal.|   1180|\n|    176|          satan.|      1|\n|    176|           nmap.|      1|\n|    177|         normal.|      1|\n|    178|         normal.|    483|\n|    178|           back.|      2|\n|    178|          satan.|      1|\n|    179|         normal.|   1725|\n+-------+----------------+-------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073710_758846330",
      "id": "paragraph_1623059708043_1552569408",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:276"
    },
    {
      "text": "%md \nEn prenant le cluster 93, qui contient 13 label diffèrents, on remarque qu'il est majoritairement composé de connexion normale, puis d'une faible quantité d'autre connexion (attaques). C'est en réalité le cas pour tout les clusters, qui se compose toujours majoritairement d'un label, puis d'autres en quantité beaucoup plus limités. En comparant avec les résultats obtenue sans normalisation, ce phénomène est plus accentué désormais (avec le clusterScore1, certains cluster comportaient plusieurs type de label en quantités égales, ce qui n'est plus le cas ici).",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>En prenant le cluster 93, qui contient 13 label diffèrents, on remarque qu&rsquo;il est majoritairement composé de connexion normale, puis d&rsquo;une faible quantité d&rsquo;autre connexion (attaques). C&rsquo;est en réalité le cas pour tout les clusters, qui se compose toujours majoritairement d&rsquo;un label, puis d&rsquo;autres en quantité beaucoup plus limités. En comparant avec les résultats obtenue sans normalisation, ce phénomène est plus accentué désormais (avec le clusterScore1, certains cluster comportaient plusieurs type de label en quantités égales, ce qui n&rsquo;est plus le cas ici).</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073711_559731391",
      "id": "paragraph_1623061666632_1392853661",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:277"
    },
    {
      "text": "%md\nDurant toutes les analyses, certaines features ont été retirées car non compatible avec l'algorithme K-means. En effet, les valeurs non numérique ne peuvent pas être traitées directement (comment déterminer une distance entre TCP et UDP ?). Afin de pouvoir les intégrer et ainsi enrichir le dataset, nous allons implémenter du \"oneHot encoding\". Cela revient simplement à traduire une feature non numérique en valeur numérique. Cela n'est possible que lorsque la quantité possible de valeur est fixe (c'est le cas ici, ou l'on possède un nombre de protocoles limité). Il suffit alors de faire correspondre un chiffre à chaque valeur (par exemple : TCP => 0, UDP => 1, ...). Le resultat de l'encoding est un vecteur contenant un encodage binaire (pour n catégories, le vecteur sera au plus de longueur log2(n)+1). La fonction suivante permet d'efectuer cette transformation dans une pipeline.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/text",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Durant toutes les analyses, certaines features ont été retirées car non compatible avec l&rsquo;algorithme K-means. En effet, les valeurs non numérique ne peuvent pas être traitées directement (comment déterminer une distance entre TCP et UDP ?). Afin de pouvoir les intégrer et ainsi enrichir le dataset, nous allons implémenter du &ldquo;oneHot encoding&rdquo;. Cela revient simplement à traduire une feature non numérique en valeur numérique. Cela n&rsquo;est possible que lorsque la quantité possible de valeur est fixe (c&rsquo;est le cas ici, ou l&rsquo;on possède un nombre de protocoles limité). Il suffit alors de faire correspondre un chiffre à chaque valeur (par exemple : TCP =&gt; 0, UDP =&gt; 1, &hellip;). Le resultat de l&rsquo;encoding est un vecteur contenant un encodage binaire (pour n catégories, le vecteur sera au plus de longueur log2(n)+1). La fonction suivante permet d&rsquo;efectuer cette transformation dans une pipeline.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073711_168949392",
      "id": "paragraph_1623061965400_979384803",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:278"
    },
    {
      "text": "import org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\n\ndef oneHotPipeline(inputCol: String): (Pipeline, String) = {\n    val indexer = new StringIndexer().\n      setInputCol(inputCol).\n      setOutputCol(inputCol + \"_indexed\")\n    val encoder = new OneHotEncoder().\n      setInputCol(inputCol + \"_indexed\").\n      setOutputCol(inputCol + \"_vec\")\n    val pipeline = new Pipeline().setStages(Array(indexer, encoder))\n    (pipeline, inputCol + \"_vec\")\n  }",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[33mwarning: \u001b[0mthere was one deprecation warning; re-run with -deprecation for details\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\n\u001b[1m\u001b[34moneHotPipeline\u001b[0m: \u001b[1m\u001b[32m(inputCol: String)(org.apache.spark.ml.Pipeline, String)\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073713_1469201072",
      "id": "20210605-174335_1719660693",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:279"
    },
    {
      "text": "%md\nDans les analyses des résultats précédents, nous avons essayer de regarder la proportion de label par cluster. Dans un clustering parfait, chaque cluster devrait être composé à 100% d'un même label. Afin d'avoir une meilleur vision de ces proportions, il est possible de les calculer directement à l'aide d'une fonction. La fonction entropy effectue ce travail. Elle calcule la proportion de chaque label dans un cluster (ligne 4), puis multiplie cette valeur par son logarithme (il permet d'obtenir des valeurs proche de 0 pour les labels très présents, et des valeurs élévée pour les minorités, que l'on souhaite détécter). Enfin, on somme cette valeur pour chaque label.\nPar exemple, dans le cas d'un cluster de 1000 éléments, avec 999 connexion normales et 1 connexion de type smurf, on obtient l'entropie : -0.001 * log(0.001) + -0.999*log(0.999) = 3\nSi on a maintenant 800 normales, 100 smurf et 100 portsweep, on obtient : 2 * -0.1*log(0.1) + -0.92*log(0.92) = 0.23\nL'entropie péjore donc surtout les clusters contenant quelques valeur diffèrentes (que l'on peut considérer comme des outliers) plutôt que ceux contenant plusieurs label diffèrents présent en quantité homogènes. Dans notre cas, ce système semble convenir, étant donné que l'on cherche à obtenir un seul label par cluster. Plus l'entropie sera faible, meilleur sera le clustering.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:54:30+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Dans les analyses des résultats précédents, nous avons essayer de regarder la proportion de label par cluster. Dans un clustering parfait, chaque cluster devrait être composé à 100% d&rsquo;un même label. Afin d&rsquo;avoir une meilleur vision de ces proportions, il est possible de les calculer directement à l&rsquo;aide d&rsquo;une fonction. La fonction entropy effectue ce travail. Elle calcule la proportion de chaque label dans un cluster (ligne 4), puis multiplie cette valeur par son logarithme (il permet d&rsquo;obtenir des valeurs proche de 0 pour les labels très présents, et des valeurs élévée pour les minorités, que l&rsquo;on souhaite détécter). Enfin, on somme cette valeur pour chaque label.<br />\nPar exemple, dans le cas d&rsquo;un cluster de 1000 éléments, avec 999 connexion normales et 1 connexion de type smurf, on obtient l&rsquo;entropie : -0.001 * log(0.001) + -0.999<em>log(0.999) = 3<br />\nSi on a maintenant 800 normales, 100 smurf et 100 portsweep, on obtient : 2 * -0.1</em>log(0.1) + -0.92*log(0.92) = 0.23<br />\nL&rsquo;entropie péjore donc surtout les clusters contenant quelques valeur diffèrentes (que l&rsquo;on peut considérer comme des outliers) plutôt que ceux contenant plusieurs label diffèrents présent en quantité homogènes. Dans notre cas, ce système semble convenir, étant donné que l&rsquo;on cherche à obtenir un seul label par cluster. Plus l&rsquo;entropie sera faible, meilleur sera le clustering.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073713_431817988",
      "id": "paragraph_1623064342761_1676390825",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:280",
      "dateFinished": "2021-06-10T12:54:30+0000",
      "dateStarted": "2021-06-10T12:54:30+0000"
    },
    {
      "text": "def entropy(counts:Iterable[Int]):Double = {\n    val values=counts.filter(_>0)\n    val n=values.map(_.toDouble).sum\n    values.map{v=>\n      val p=v/n\n      -p * math.log(p)\n    }.sum\n}",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mentropy\u001b[0m: \u001b[1m\u001b[32m(counts: Iterable[Int])Double\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073713_1121538460",
      "id": "20210605-174335_1914609013",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:281"
    },
    {
      "text": "%md\nLa fonction suivante permet d'appliquer le calcul de l'entropie sur un ensemble de cluster.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>La fonction suivante permet d&rsquo;appliquer le calcul de l&rsquo;entropie sur un ensemble de cluster.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073714_1080411515",
      "id": "paragraph_1623065419847_726490013",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:282"
    },
    {
      "text": "def computeEntropy(pipeline:PipelineModel) = {\n  val clusterLabel = pipeline.transform(data).\n    select(\"cluster\", \"label\").as[(Int, String)]\n\n  val weightedClusterEntropy = clusterLabel.\n    groupByKey { case (cluster, _) => cluster }.\n    mapGroups { case (_, clusterLabels) =>\n      val labels = clusterLabels.map { case (_, label) => label }.toSeq\n      val labelCounts = labels.groupBy(identity).values.map(_.size)\n      labels.size * entropy(labelCounts)\n    }.collect()\n  weightedClusterEntropy.sum / data.count()\n}",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:54:51+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 317.45,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mcomputeEntropy\u001b[0m: \u001b[1m\u001b[32m(pipeline: org.apache.spark.ml.PipelineModel)Double\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073714_2050276497",
      "id": "20210605-174335_1207776441",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:283"
    },
    {
      "text": "%md\nEn appliquant le calcul de l'entropie sur différents nombres de clusters, on peut confirmer l'hypothèse faite sur les résultats de clusteringScore2 : L'entropie diminue fortement jusqu'aux alentour de 180-210, puis semble se stabiliser, puis remonte et semble ensuite diminuer de manière moins prononcée par la suite. Le nombre de cluster optimal doit donc se trouver dans cette fourchette.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:55:32+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>En appliquant le calcul de l&rsquo;entropie sur différents nombres de clusters, on peut confirmer l&rsquo;hypothèse faite sur les résultats de clusteringScore2 : L&rsquo;entropie diminue fortement jusqu&rsquo;aux alentour de 180-210, puis semble se stabiliser, puis remonte et semble ensuite diminuer de manière moins prononcée par la suite. Le nombre de cluster optimal doit donc se trouver dans cette fourchette.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073714_1693316038",
      "id": "paragraph_1623067766752_188014278",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:284",
      "dateFinished": "2021-06-10T12:55:32+0000",
      "dateStarted": "2021-06-10T12:55:32+0000"
    },
    {
      "text": "Score2Res.foreach({\n    v => println(\"K : \" + v._1 + \"\\n\" + computeEntropy(v._2._2)) \n})",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "K : 60\n0.017680078515068826\nK : 90\n0.015028774621032715\nK : 120\n0.01050305217313379\nK : 150\n0.008383797116051432\nK : 180\n0.007486396734148284\nK : 210\n0.00840337202310473\nK : 240\n0.005838050638915845\nK : 270\n0.0053280968277895965\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073714_704645986",
      "id": "paragraph_1623066047825_238986642",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:285"
    },
    {
      "text": "%md\nCalculons plus de valeurs entre 180 et 210 afin d'affiner les résultats : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Calculons plus de valeurs entre 180 et 210 afin d&rsquo;affiner les résultats :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073714_1598688641",
      "id": "paragraph_1623067891721_396585271",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:286"
    },
    {
      "text": "val Score3Res = (180 to 210 by 10).map(k => (k, clusteringScore2(numericOnly, k)))\nScore3Res.foreach({\n    v => println(\"K : \" + v._1 + \"\\n\" + computeEntropy(v._2._2)) \n})",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "K : 180\n0.006570199283468883\nK : 190\n0.01012652820945252\nK : 200\n0.0073310672832047966\nK : 210\n0.006120224173849115\n\u001b[1m\u001b[34mScore3Res\u001b[0m: \u001b[1m\u001b[32mscala.collection.immutable.IndexedSeq[(Int, (Double, org.apache.spark.ml.PipelineModel))]\u001b[0m = Vector((180,(0.33750649942646943,pipeline_47583ed67d0e)), (190,(0.3112973330425107,pipeline_6c8f72ed88e2)), (200,(0.29409222118322265,pipeline_8bdbb3b104ba)), (210,(0.2822803420098571,pipeline_46cb60edb907)))\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073715_347266667",
      "id": "paragraph_1623067924387_1646572842",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:287"
    },
    {
      "text": "%md\nOn remarque que les résultats sont diffèrents des précédents, ca sera toujours le cas avec K-means, étant donné que les centroides commencent à un emplacement aléatoire, donc le système ne converge pas toujours au même endroit. En lancant plusieurs fois les calculs, on remarque quand même que la valeur K=180 est souvent la plus basse jusqu'à 210, où le score continue de diminuer. On peut donc bien garder la valeur 180 comme nombre de clusters.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:56:19+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On remarque que les résultats sont diffèrents des précédents, ca sera toujours le cas avec K-means, étant donné que les centroides commencent à un emplacement aléatoire, donc le système ne converge pas toujours au même endroit. En lancant plusieurs fois les calculs, on remarque quand même que la valeur K=180 est souvent la plus basse jusqu&rsquo;à 210, où le score continue de diminuer. On peut donc bien garder la valeur 180 comme nombre de clusters.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073715_139279603",
      "id": "paragraph_1623080192454_1485293541",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:288",
      "dateFinished": "2021-06-10T12:56:19+0000",
      "dateStarted": "2021-06-10T12:56:19+0000"
    },
    {
      "text": "%md\nNous allons maintenant appliquer le one hot encoding afin de pouvoir traiter toutes les données, et pas seulement les valeurs numériques : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Nous allons maintenant appliquer le one hot encoding afin de pouvoir traiter toutes les données, et pas seulement les valeurs numériques :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073715_1986547786",
      "id": "paragraph_1623083926775_67287465",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:289"
    },
    {
      "text": "import org.apache.spark.ml.PipelineModel\n\ndef fitPipeline4(data: DataFrame, k: Int): PipelineModel = {\n    val (protoTypeEncoder, protoTypeVecCol) = oneHotPipeline(\"protocol_type\")\n    val (serviceEncoder, serviceVecCol) = oneHotPipeline(\"service\")\n    val (flagEncoder, flagVecCol) = oneHotPipeline(\"flag\")\n\n    // Original columns, without label / string columns, but with new vector encoded cols\n    val assembleCols = Set(data.columns: _*) --\n      Seq(\"label\", \"protocol_type\", \"service\", \"flag\") ++\n      Seq(protoTypeVecCol, serviceVecCol, flagVecCol)\n    val assembler = new VectorAssembler().\n      setInputCols(assembleCols.toArray).\n      setOutputCol(\"featureVector\")\n\n    val scaler = new StandardScaler()\n      .setInputCol(\"featureVector\")\n      .setOutputCol(\"scaledFeatureVector\")\n      .setWithStd(true)\n      .setWithMean(false)\n\n    val kmeans = new KMeans().\n      setSeed(Random.nextLong()).\n      setK(k).\n      setPredictionCol(\"cluster\").\n      setFeaturesCol(\"scaledFeatureVector\").\n      setMaxIter(40).\n      setTol(1.0e-5)\n\n    val pipeline = new Pipeline().setStages(\n      Array(protoTypeEncoder, serviceEncoder, flagEncoder, assembler, scaler, kmeans))\n    pipeline.fit(data)\n  }",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.ml.PipelineModel\n\u001b[1m\u001b[34mfitPipeline4\u001b[0m: \u001b[1m\u001b[32m(data: org.apache.spark.sql.DataFrame, k: Int)org.apache.spark.ml.PipelineModel\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073715_1243846638",
      "id": "20210605-174335_1339293689",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:290"
    },
    {
      "text": "%md\n# Partie 3 : Analyse des anomalies\n\nOn test maintenant l'algorithme uniquement avec la valeur de K déterminée : ",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Partie 3 : Analyse des anomalies</h1>\n<p>On test maintenant l&rsquo;algorithme uniquement avec la valeur de K déterminée :</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073715_388363885",
      "id": "paragraph_1623084023826_901826569",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:291"
    },
    {
      "text": "val pipelineModel = fitPipeline4(data, 180)\n  val countByClusterLabel = pipelineModel.transform(data).\n    select(\"cluster\", \"label\").\n    groupBy(\"cluster\", \"label\").\n    count().\n    orderBy(\"cluster\", \"label\")\n  countByClusterLabel.show(countByClusterLabel.count.toInt)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|        neptune.| 455811|\n|      1|         normal.|     67|\n|      1|          smurf.|2807697|\n|      2|        neptune.|   1041|\n|      2|      portsweep.|     10|\n|      2|          satan.|      2|\n|      3|        neptune.|   1042|\n|      3|      portsweep.|      8|\n|      3|          satan.|      4|\n|      4|        ipsweep.|     13|\n|      4|        neptune.|   1038|\n|      4|      portsweep.|     15|\n|      4|          satan.|      3|\n|      5|        neptune.|    827|\n|      5|      portsweep.|      5|\n|      5|          satan.|      6|\n|      6|       teardrop.|    970|\n|      7|        neptune.|    200|\n|      7|      portsweep.|      2|\n|      8|        neptune.|   1593|\n|      8|      portsweep.|      2|\n|      9|        neptune.|    839|\n|     10|           back.|     29|\n|     10|         normal.|  54729|\n|     11|        ipsweep.|     13|\n|     11|        neptune.|   1041|\n|     11|      portsweep.|     13|\n|     11|          satan.|      3|\n|     12|        neptune.|   1033|\n|     12|      portsweep.|      6|\n|     12|          satan.|      1|\n|     13|         normal.|   3833|\n|     14|        neptune.|   1037|\n|     14|         normal.|   1134|\n|     14|      portsweep.|      7|\n|     14|          satan.|      7|\n|     15|        neptune.|   1600|\n|     15|         normal.|      8|\n|     15|      portsweep.|      7|\n|     15|          satan.|      1|\n|     16|        neptune.|   1037|\n|     16|      portsweep.|     13|\n|     16|          satan.|      3|\n|     17|        neptune.|   1043|\n|     17|      portsweep.|      8|\n|     17|          satan.|      3|\n|     18|           back.|     91|\n|     18|         normal.|      8|\n|     18|      portsweep.|   6528|\n|     18|    warezclient.|      1|\n|     19|        ipsweep.|    162|\n|     19|        neptune.| 192990|\n|     19|         normal.|      1|\n|     19|      portsweep.|    362|\n|     19|          satan.|      3|\n|     20|        neptune.|    200|\n|     20|      portsweep.|      2|\n|     21|          satan.|      2|\n|     22|         normal.|  28663|\n|     22|          satan.|     10|\n|     23|         normal.|   2737|\n|     23|          satan.|      3|\n|     24|        neptune.|      4|\n|     24|         normal.|  22661|\n|     25|         normal.|      1|\n|     26|         normal.|    290|\n|     26|    warezclient.|    274|\n|     27|        ipsweep.|      1|\n|     27|         normal.|     59|\n|     27|    warezmaster.|      1|\n|     28|        ipsweep.|     13|\n|     28|        neptune.|   1037|\n|     28|      portsweep.|     12|\n|     28|          satan.|      3|\n|     29|         normal.|      2|\n|     30|        ipsweep.|      2|\n|     30|        neptune.|    200|\n|     30|      portsweep.|     10|\n|     30|          satan.|      3|\n|     31|        neptune.|   1039|\n|     31|      portsweep.|     10|\n|     31|          satan.|      2|\n|     32|        neptune.|   1035|\n|     32|      portsweep.|      9|\n|     32|          satan.|      2|\n|     33|        neptune.|    834|\n|     33|         normal.|      3|\n|     33|      portsweep.|      5|\n|     33|          satan.|      4|\n|     34|         normal.|      1|\n|     34|      portsweep.|    450|\n|     35|           back.|      5|\n|     35|         normal.|    153|\n|     35|          satan.|      2|\n|     35|    warezclient.|      1|\n|     36|           imap.|      4|\n|     36|           nmap.|   1033|\n|     36|         normal.|      2|\n|     37|           imap.|      7|\n|     37|        neptune.|   1043|\n|     37|         normal.|      3|\n|     37|      portsweep.|      8|\n|     37|          satan.|      2|\n|     38|        neptune.|   1030|\n|     38|      portsweep.|      7|\n|     38|          satan.|      2|\n|     39|           land.|     21|\n|     39|         normal.|      7|\n|     40|         normal.|  22979|\n|     41|         normal.|   8590|\n|     41|          satan.|      9|\n|     42|        neptune.|    840|\n|     42|      portsweep.|     11|\n|     42|          satan.|      3|\n|     43|      ftp_write.|      1|\n|     43|        neptune.|   1032|\n|     43|      portsweep.|      7|\n|     43|          satan.|      3|\n|     44|        neptune.|     16|\n|     44|         normal.|  18453|\n|     44|          satan.|      1|\n|     45|buffer_overflow.|     18|\n|     45|     loadmodule.|      1|\n|     45|         normal.|    217|\n|     45|            phf.|      4|\n|     45|        rootkit.|      2|\n|     46|           back.|      2|\n|     46|           imap.|      1|\n|     46|         normal.|    405|\n|     46|          satan.|      1|\n|     47|        ipsweep.|     13|\n|     47|        neptune.|   1044|\n|     47|      portsweep.|     14|\n|     47|          satan.|      3|\n|     48|buffer_overflow.|      6|\n|     48|      ftp_write.|      4|\n|     48|         normal.|  28316|\n|     48|        rootkit.|      1|\n|     48|    warezclient.|    701|\n|     49|        ipsweep.|     13|\n|     49|        neptune.|   1038|\n|     49|      portsweep.|     14|\n|     49|          satan.|      3|\n|     50|         normal.|    148|\n|     51|        neptune.|    200|\n|     51|      portsweep.|      2|\n|     52|        neptune.|   1037|\n|     52|      portsweep.|      9|\n|     52|          satan.|      3|\n|     53|           back.|      3|\n|     53|         normal.|  62334|\n|     54|         normal.|      3|\n|     55|   guess_passwd.|     51|\n|     55|         normal.|     18|\n|     55|        rootkit.|      1|\n|     56|      portsweep.|      2|\n|     57|        ipsweep.|    819|\n|     57|           nmap.|     36|\n|     57|         normal.|   3693|\n|     57|      portsweep.|      2|\n|     57|          satan.|     23|\n|     58|         normal.|     25|\n|     59|        neptune.|    843|\n|     59|      portsweep.|      5|\n|     59|          satan.|      3|\n|     60|buffer_overflow.|      1|\n|     60|        ipsweep.|      9|\n|     60|        neptune.|    200|\n|     60|         normal.|     50|\n|     60|      portsweep.|      4|\n|     61|        ipsweep.|     13|\n|     61|        neptune.|   1039|\n|     61|      portsweep.|     12|\n|     61|          satan.|     11|\n|     62|         normal.|    495|\n|     62|          satan.|      1|\n|     63|        ipsweep.|     13|\n|     63|        neptune.|   1042|\n|     63|      portsweep.|     13|\n|     63|          satan.|      3|\n|     64|         normal.|      1|\n|     65|      ftp_write.|      2|\n|     65|       multihop.|      2|\n|     65|         normal.|   2127|\n|     65|    warezclient.|     19|\n|     65|    warezmaster.|      1|\n|     66|         normal.|     18|\n|     67|         normal.|      9|\n|     68|         normal.|     29|\n|     68|            spy.|      1|\n|     69|        neptune.|    200|\n|     69|      portsweep.|      3|\n|     70|        neptune.|   1044|\n|     70|      portsweep.|      9|\n|     70|          satan.|      2|\n|     71|      portsweep.|    117|\n|     72|        ipsweep.|   8171|\n|     72|           nmap.|    990|\n|     72|         normal.|     72|\n|     73|          satan.|      5|\n|     74|          satan.|      2|\n|     75|        neptune.|   1011|\n|     75|           nmap.|      1|\n|     75|      portsweep.|      7|\n|     75|          satan.|      2|\n|     76|        ipsweep.|      1|\n|     76|        neptune.|    200|\n|     76|         normal.|      1|\n|     76|      portsweep.|      4|\n|     77|        neptune.|   1038|\n|     77|      portsweep.|      9|\n|     77|          satan.|      3|\n|     78|         normal.|    129|\n|     78|          satan.|      6|\n|     79|        neptune.|   1032|\n|     79|      portsweep.|      7|\n|     79|          satan.|      2|\n|     80|        neptune.|    846|\n|     80|         normal.|    910|\n|     80|      portsweep.|      7|\n|     80|          satan.|      3|\n|     81|         normal.|    349|\n|     82|         normal.|   3536|\n|     83|   guess_passwd.|      1|\n|     83|         normal.|      2|\n|     83|          satan.|      1|\n|     84|          satan.|      2|\n|     85|        neptune.|   1042|\n|     85|      portsweep.|     14|\n|     85|          satan.|      3|\n|     86|         normal.|     21|\n|     87|           back.|    341|\n|     87|         normal.|  16266|\n|     88|        neptune.|   1716|\n|     88|         normal.|      5|\n|     88|      portsweep.|      1|\n|     88|          satan.|      4|\n|     89|        neptune.|   1066|\n|     89|      portsweep.|      9|\n|     89|          satan.|      2|\n|     90|         normal.|      4|\n|     91|        ipsweep.|     13|\n|     91|        neptune.|   1039|\n|     91|         normal.|      7|\n|     91|      portsweep.|     11|\n|     91|          satan.|      3|\n|     92|         normal.|  12094|\n|     93|        neptune.|    835|\n|     93|      portsweep.|      5|\n|     93|          satan.|      2|\n|     94|         normal.|   8643|\n|     94|    warezclient.|      3|\n|     95|        neptune.|    836|\n|     95|      portsweep.|      1|\n|     96|        neptune.|   1041|\n|     96|      portsweep.|      9|\n|     96|          satan.|      2|\n|     97|        neptune.|   1043|\n|     97|      portsweep.|      8|\n|     97|          satan.|      6|\n|     98|        neptune.|    838|\n|     99|        neptune.|    840|\n|     99|          satan.|      1|\n|    100|      portsweep.|      1|\n|    101|        neptune.|    834|\n|    101|      portsweep.|      5|\n|    101|          satan.|      2|\n|    102|         normal.|     17|\n|    103|      portsweep.|      2|\n|    103|          satan.|  10627|\n|    104|         normal.|      7|\n|    105|      portsweep.|      2|\n|    106|        neptune.|    200|\n|    106|      portsweep.|     12|\n|    106|          satan.|      3|\n|    107|        neptune.|   1030|\n|    107|      portsweep.|      6|\n|    107|          satan.|      1|\n|    108|        ipsweep.|     11|\n|    108|        neptune.|     43|\n|    108|         normal.|  27108|\n|    109|         normal.|      7|\n|    109|            pod.|      5|\n|    110|      portsweep.|      2|\n|    111|         normal.|   1347|\n|    111|    warezclient.|     14|\n|    112|           back.|   1216|\n|    112|         normal.| 161893|\n|    113|      portsweep.|      2|\n|    114|        ipsweep.|     11|\n|    114|        neptune.|    846|\n|    114|         normal.|     38|\n|    114|      portsweep.|      1|\n|    115|           back.|      1|\n|    115|        ipsweep.|      3|\n|    115|         normal.|  12703|\n|    116|         normal.|      1|\n|    117|        ipsweep.|    550|\n|    117|         normal.|     84|\n|    117|            pod.|      1|\n|    118|         normal.|     13|\n|    118|      portsweep.|     44|\n|    119|         normal.|   4258|\n|    120|buffer_overflow.|      1|\n|    120|     loadmodule.|      1|\n|    120|        neptune.|    842|\n|    120|         normal.|      4|\n|    120|      portsweep.|      6|\n|    120|        rootkit.|      1|\n|    120|          satan.|      7|\n|    121|         normal.|      2|\n|    121|      portsweep.|   1864|\n|    121|          satan.|   1569|\n|    122|           back.|      3|\n|    122|        neptune.|      3|\n|    122|         normal.|   4487|\n|    122|          satan.|      9|\n|    122|    warezclient.|      1|\n|    123|        neptune.|   1038|\n|    123|      portsweep.|     13|\n|    123|          satan.|      3|\n|    124|        neptune.|    840|\n|    124|      portsweep.|     11|\n|    124|          satan.|      3|\n|    125|        neptune.|   1036|\n|    125|      portsweep.|      6|\n|    125|          satan.|      1|\n|    126|      ftp_write.|      1|\n|    126|         normal.|      2|\n|    127|           nmap.|    212|\n|    127|         normal.|  72877|\n|    127|          satan.|   1292|\n|    128|      portsweep.|     12|\n|    128|          satan.|   1720|\n|    129|buffer_overflow.|      4|\n|    129|   guess_passwd.|      1|\n|    129|        ipsweep.|      4|\n|    129|     loadmodule.|      3|\n|    129|        neptune.|      7|\n|    129|         normal.|   1812|\n|    129|      portsweep.|      4|\n|    129|        rootkit.|      2|\n|    129|          satan.|      3|\n|    129|            spy.|      1|\n|    130|         normal.|      1|\n|    131|        neptune.|    821|\n|    131|         normal.|   1214|\n|    131|        rootkit.|      3|\n|    131|          satan.|    166|\n|    131|    warezclient.|      2|\n|    132|        ipsweep.|   2527|\n|    132|         normal.|      3|\n|    132|      portsweep.|      2|\n|    133|        ipsweep.|     12|\n|    133|        neptune.|    840|\n|    133|         normal.|    503|\n|    133|      portsweep.|      6|\n|    133|          satan.|      3|\n|    134|        ipsweep.|      2|\n|    134|         normal.|    471|\n|    134|      portsweep.|      2|\n|    134|          satan.|      1|\n|    135|        neptune.| 363138|\n|    135|      portsweep.|      9|\n|    136|         normal.|      1|\n|    137|         normal.|     72|\n|    138|         normal.|   1194|\n|    138|      portsweep.|      1|\n|    139|         normal.|      1|\n|    140|        neptune.|    200|\n|    140|         normal.|      1|\n|    140|      portsweep.|      2|\n|    141|        neptune.|   3130|\n|    141|         normal.|    247|\n|    141|      portsweep.|    134|\n|    141|          satan.|    137|\n|    142|         normal.|      3|\n|    143|        ipsweep.|     11|\n|    143|        neptune.|      7|\n|    143|         normal.|   2504|\n|    143|      portsweep.|      2|\n|    143|          satan.|      7|\n|    144|           back.|    261|\n|    144|         normal.|  77502|\n|    145|         normal.|   6178|\n|    146|        neptune.|    200|\n|    146|      portsweep.|      2|\n|    147|         normal.|     30|\n|    148|        neptune.|    200|\n|    148|         normal.|      1|\n|    148|      portsweep.|      1|\n|    149|         normal.|  11516|\n|    150|        neptune.|    125|\n|    150|         normal.|  22883|\n|    150|      portsweep.|      2|\n|    150|          satan.|      6|\n|    151|        neptune.|    200|\n|    151|      portsweep.|     10|\n|    151|          satan.|      3|\n|    152|        ipsweep.|      2|\n|    152|         normal.|   2495|\n|    152|      portsweep.|      2|\n|    152|          satan.|     20|\n|    153|        neptune.|      1|\n|    153|         normal.|   6807|\n|    153|          satan.|    103|\n|    154|         normal.|      6|\n|    155|         normal.|   4743|\n|    156|         normal.|     64|\n|    157|        ipsweep.|     13|\n|    157|        neptune.|    200|\n|    157|      portsweep.|     12|\n|    157|          satan.|      3|\n|    158|         normal.|   2638|\n|    159|         normal.|   1005|\n|    160|         normal.|     26|\n|    161|        ipsweep.|     13|\n|    161|        neptune.|    200|\n|    161|         normal.|     12|\n|    161|      portsweep.|      4|\n|    162|           back.|      3|\n|    162|         normal.|   5834|\n|    163|        ipsweep.|     13|\n|    163|     loadmodule.|      2|\n|    163|       multihop.|      3|\n|    163|        neptune.|   1805|\n|    163|         normal.|   9165|\n|    163|      portsweep.|      3|\n|    163|    warezclient.|      4|\n|    163|    warezmaster.|     18|\n|    164|         normal.|      2|\n|    165|        neptune.|    838|\n|    165|      portsweep.|      1|\n|    166|         normal.|  36394|\n|    167|        neptune.|    200|\n|    167|      portsweep.|      2|\n|    168|           back.|     59|\n|    168|        neptune.|      1|\n|    168|         normal.|  17692|\n|    169|        ipsweep.|     40|\n|    169|           nmap.|     44|\n|    169|         normal.|   3414|\n|    169|            pod.|    258|\n|    169|      portsweep.|      2|\n|    169|          satan.|     11|\n|    169|          smurf.|    189|\n|    169|       teardrop.|      9|\n|    170|     loadmodule.|      2|\n|    170|       multihop.|      2|\n|    170|         normal.|      2|\n|    170|           perl.|      3|\n|    171|         normal.|     10|\n|    172|         normal.|   2037|\n|    173|         normal.|      1|\n|    174|        neptune.|    200|\n|    175|         normal.|     10|\n|    176|        neptune.|    200|\n|    176|      portsweep.|      9|\n|    176|          satan.|      2|\n|    177|           back.|    189|\n|    177|         normal.| 165127|\n|    178|        neptune.|    200|\n|    178|      portsweep.|      7|\n|    178|          satan.|      1|\n|    179|         normal.|      1|\n|    179|      portsweep.|    390|\n+-------+----------------+-------+\n\n\u001b[1m\u001b[34mpipelineModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.PipelineModel\u001b[0m = pipeline_2ee02deab8a4\n\u001b[1m\u001b[34mcountByClusterLabel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, label: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073715_1528172090",
      "id": "20210605-174335_1454458318",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:292"
    },
    {
      "text": "%md\nGrace aux clusters obtenus juste avant, nous allons maintenant pouvoir reperer des anomalies. La méthode qui est utilisée va simplement selectionner les points les plus loin de leur centroides, et les classer comme des anomalies. Nous n'allons donc pas pouvoir détecter des attaques directement, mais plutôt des comportement étranges, que ce soit dans des connexions normales (ce qui correspondrait peut être à des patterns d'attaques pas encore répertoriées), ou lors d'attaques (une anomalie dans une attaque peut vouloir dire que l'attaque a mal été catégorisée).\nLa fonction suivante va simplement parcourir tous les clusters, et pour chacun d'entre eux, va calculer la distance des points du cluster jusqu'aux centroides. Enfin, on va selectionner le 100eme point le plus loin. Cette distance representera la limite à partir de laquelle un point est considéré comme une anomalie. Cette valeur de 100 est arbitraire, il faudrait la tuner jusqu'à englober toutes les anomalies du dataset, afin d'obtenir de meilleur résultat lorsque de nouvelles données seront ajoutées.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:58:00+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Grace aux clusters obtenus juste avant, nous allons maintenant pouvoir reperer des anomalies. La méthode qui est utilisée va simplement selectionner les points les plus loin de leur centroides, et les classer comme des anomalies. Nous n&rsquo;allons donc pas pouvoir détecter des attaques directement, mais plutôt des comportement étranges, que ce soit dans des connexions normales (ce qui correspondrait peut être à des patterns d&rsquo;attaques pas encore répertoriées), ou lors d&rsquo;attaques (une anomalie dans une attaque peut vouloir dire que l&rsquo;attaque a mal été catégorisée).<br />\nLa fonction suivante va simplement parcourir tous les clusters, et pour chacun d&rsquo;entre eux, va calculer la distance des points du cluster jusqu&rsquo;aux centroides. Enfin, on va selectionner le 100eme point le plus loin. Cette distance representera la limite à partir de laquelle un point est considéré comme une anomalie. Cette valeur de 100 est arbitraire, il faudrait la tuner jusqu&rsquo;à englober toutes les anomalies du dataset, afin d&rsquo;obtenir de meilleur résultat lorsque de nouvelles données seront ajoutées.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073720_85553949",
      "id": "paragraph_1623088105736_500720695",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:293",
      "dateFinished": "2021-06-10T12:58:00+0000",
      "dateStarted": "2021-06-10T12:58:00+0000"
    },
    {
      "text": "import org.apache.spark.ml.linalg.{Vector, Vectors}\n\n  val kMeansModel = pipelineModel.stages.last.asInstanceOf[KMeansModel]\n  val centroids = kMeansModel.clusterCenters\n\n  val clustered = pipelineModel.transform(data) \n  val threshold = clustered.\n    select(\"cluster\", \"scaledFeatureVector\").as[(Int, Vector)].\n    map { case (cluster, vec) => Vectors.sqdist(centroids(cluster), vec) }.\n    orderBy($\"value\".desc).take(100).last",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.ml.linalg.{Vector, Vectors}\n\u001b[1m\u001b[34mkMeansModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.clustering.KMeansModel\u001b[0m = kmeans_d3f4ac2ea065\n\u001b[1m\u001b[34mcentroids\u001b[0m: \u001b[1m\u001b[32mArray[org.apache.spark.ml.linalg.Vector]\u001b[0m = Array([0.0,0.0,0.0,2.05826248641248,0.0,0.10919443262828962,0.10832301472520697,1.1589126160665362,0.0,0.0,0.0,2.618297401496062,0.0,0.0,0.0,0.0,0.0,0.0,2.615767472100013,0.7166361055288043,0.0,0.0,0.0,3.9811417888214997,2.5364248330727075E-5,2.6165856479870264,2.6186467740881154,0.04664696371389643,0.0,0.11776450017742068,0.6071594571704019,0.0,3.68399147413195E-6,0.0,0.0,4.0503651445007626E-5,5.884062970979417E-5,0.0,0.0,2.616753580669811,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.38816842188493,0.004767049338533135,0.011347766435630282,0.0,0.0,0.0,0.0,0..."
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073720_1602100002",
      "id": "20210605-174335_1346539352",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:294"
    },
    {
      "text": "%md\nVoici enfin le résultat des anomalies dans notre dataset, avec deux exemples, expliqués dans la cellule suivante.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Voici enfin le résultat des anomalies dans notre dataset, avec deux exemples, expliqués dans la cellule suivante.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073720_637318562",
      "id": "paragraph_1623088431713_488864887",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:295"
    },
    {
      "text": "val originalCols = data.columns\n  val anomalies = clustered.filter { row =>\n    val cluster = row.getAs[Int](\"cluster\")\n    val vec = row.getAs[Vector](\"scaledFeatureVector\")\n    Vectors.sqdist(centroids(cluster), vec) >= threshold\n  }\n  \n val anomaliesDF = anomalies.toDF",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34moriginalCols\u001b[0m: \u001b[1m\u001b[32mArray[String]\u001b[0m = Array(duration, protocol_type, service, flag, src_bytes, dst_bytes, land, wrong_fragment, urgent, hot, num_failed_logins, logged_in, num_compromised, root_shell, su_attempted, num_root, num_file_creations, num_shells, num_access_files, num_outbound_cmds, is_host_login, is_guest_login, count, srv_count, serror_rate, srv_serror_rate, rerror_rate, srv_rerror_rate, same_srv_rate, diff_srv_rate, srv_diff_host_rate, dst_host_count, dst_host_srv_count, dst_host_same_srv_rate, dst_host_diff_srv_rate, dst_host_same_src_port_rate, dst_host_srv_diff_host_rate, dst_host_serror_rate, dst_host_srv_serror_rate, dst_host_rerror_rate, dst_host_srv_rerror_rate, label)\n\u001b[1m\u001b[34manomalies\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql..."
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073721_237871775",
      "id": "20210605-174335_2125734165",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:296"
    },
    {
      "text": "%md\nCi dessous, nous trouvons deux exemples d'anomalies que nous avons décidé de présenter. La premiere chose que l'on remarque est que la première correspond à une connexion normale, tandis que la deuxième est de type scan nmap (scanning de port).\nLe premier exemple est situé dans le cluster 66, composé de 18 connexion normal (cf tableau countByClusterLabel).",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Ci dessous, nous trouvons deux exemples d&rsquo;anomalies que nous avons décidé de présenter. La premiere chose que l&rsquo;on remarque est que la première correspond à une connexion normale, tandis que la deuxième est de type scan nmap (scanning de port).<br />\nLe premier exemple est situé dans le cluster 66, composé de 18 connexion normal (cf tableau countByClusterLabel).</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073721_1149718688",
      "id": "paragraph_1623097901347_1192752530",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:297"
    },
    {
      "text": "println(anomaliesDF.take(2).last)\nprintln(anomaliesDF.take(22).last)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[0,tcp,telnet,S1,500,50141,0,0,0,0,0,1,175,1,2,206,0,0,2,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,78,21,0.26,0.04,0.01,0.1,0.22,0.81,0.0,0.0,normal.,1.0,(2,[1],[1.0]),11.0,(69,[11],[1.0]),6.0,(10,[6],[1.0]),(119,[1,3,5,6,7,11,12,13,16,18,21,22,23,25,26,27,28,29,30,34,35,44,48,60],[1.0,1.0,0.26,21.0,1.0,1.0,500.0,1.0,2.0,1.0,206.0,2.0,78.0,0.81,0.22,1.0,50141.0,1.0,0.04,0.1,0.01,1.0,175.0,1.0]),(119,[1,3,5,6,7,11,12,13,16,18,21,22,23,25,26,27,28,29,30,34,35,44,48,60],[121.10721758763151,2.0582624864080326,0.6323172255238401,0.19827637899759185,0.004717186229981853,2.6186538814275453,5.311063268973356E-4,2.8521592459052765,247.45027914896863,2.6160609827033166,52.30981742461317,56.32139930520088,1.2183514210813526,2.119434374873857,0.5761602588646844,0.0040651611150373575,0.07773649801247937,2.568740541135391,0.36851682022484683,2.423667838926402,0.02079055165405451,95.96132187701333,45.378156510290715,33.857002846636604]),66]\n[0,tcp,courier,SH,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,142,1,0.01,0.93,0.94,0.0,0.94,1.0,0.0,0.0,nmap.,1.0,(2,[1],[1.0]),58.0,(69,[58],[1.0]),5.0,(10,[5],[1.0]),(119,[3,5,6,7,11,18,23,25,26,27,29,30,35,43,107],[1.0,0.01,1.0,1.0,1.0,1.0,142.0,1.0,0.94,1.0,1.0,0.93,0.94,1.0,1.0]),(119,[3,5,6,7,11,18,23,25,26,27,29,30,35,43,107],[2.0582624864080326,0.024319893289378464,0.009441732333218659,0.004717186229981853,2.6186538814275453,2.6160609827033166,2.218024381968616,2.616585647992416,2.4617756515127422,0.0040651611150373575,2.568740541135391,8.568016070227689,1.9543118554811238,68.63693654518406,69.27249782273253]),75]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073721_1596937218",
      "id": "paragraph_1623265113806_2068804312",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:298"
    },
    {
      "text": "%md\nConcernant l'anomalie de la connexion normal, en observant le cluster, on remarque que les éléments ne sont pas forcément proche les uns des autres. On peut se trouver dans un cas où tous les points sont assez loin du centroides. Par contre, il semble s'agir presque exclusivement de connexions telnet. On voit que beaucoup d'entre elles sont envoyés à un grand nombre d'hosts, ce qui est étrange (il n'y a a-priori pas de raison d'essayer de se connecter à plusieurs dizaines d'hosts differents). Dans ce cas, il se peut qu'une attaque de type scanning soit perpetrée. D'autre connexions sont en revanche normales (longue session, vers 1 seul host). Il semble donc qu'il y ait un grand nombre d'anomalies dans ce cluster. Nous pouvons le vérifier en observant le nombre d'anomalies dans les clusters (cf cellule plus bas).",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:59:28+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Concernant l&rsquo;anomalie de la connexion normal, en observant le cluster, on remarque que les éléments ne sont pas forcément proche les uns des autres. On peut se trouver dans un cas où tous les points sont assez loin du centroides. Par contre, il semble s&rsquo;agir presque exclusivement de connexions telnet. On voit que beaucoup d&rsquo;entre elles sont envoyés à un grand nombre d&rsquo;hosts, ce qui est étrange (il n&rsquo;y a a-priori pas de raison d&rsquo;essayer de se connecter à plusieurs dizaines d&rsquo;hosts differents). Dans ce cas, il se peut qu&rsquo;une attaque de type scanning soit perpetrée. D&rsquo;autre connexions sont en revanche normales (longue session, vers 1 seul host). Il semble donc qu&rsquo;il y ait un grand nombre d&rsquo;anomalies dans ce cluster. Nous pouvons le vérifier en observant le nombre d&rsquo;anomalies dans les clusters (cf cellule plus bas).</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073721_1911653025",
      "id": "paragraph_1623101047889_587581265",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:299",
      "dateFinished": "2021-06-10T12:59:28+0000",
      "dateStarted": "2021-06-10T12:59:28+0000"
    },
    {
      "text": "val cluster66 = clustered.filter { row =>\n    val cluster = row.getAs[Int](\"cluster\")\n    cluster == 66\n  }.select(originalCols.head, originalCols.tail: _*)\nfor(w <- 1 to cluster66.count.toInt){\n    println(cluster66.take(w).last)   \n}",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[0,tcp,telnet,S1,167,19827,0,0,0,0,0,1,83,1,2,91,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,21,8,0.29,0.14,0.05,0.25,0.05,0.12,0.0,0.0,normal.]\n[0,tcp,telnet,S1,145,13236,0,0,0,0,0,1,31,1,2,38,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,29,10,0.28,0.1,0.03,0.2,0.07,0.2,0.0,0.0,normal.]\n[0,tcp,telnet,S1,500,50141,0,0,0,0,0,1,175,1,2,206,0,0,2,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,78,21,0.26,0.04,0.01,0.1,0.22,0.81,0.0,0.0,normal.]\n[0,tcp,telnet,S1,142,26316,0,0,0,0,0,1,31,1,2,36,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,94,22,0.22,0.04,0.01,0.09,0.19,0.82,0.0,0.0,normal.]\n[0,tcp,telnet,S1,303,31907,0,0,0,0,0,1,202,1,2,222,0,0,1,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,92,7,0.07,0.78,0.01,0.29,0.01,0.14,0.75,0.29,normal.]\n[0,tcp,telnet,S1,302,31786,0,0,0,0,0,1,198,1,2,218,0,0,1,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,103,18,0.17,0.05,0.01,0.0,0.01,0.06,0.0,0.0,normal.]\n[2278,tcp,telnet,SF,1340,29627,0,0,0,0,0,1,3,1,2,11,4,0,0,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,255,1,0.0,0.02,0.0,0.0,0.0,0.0,0.0,0.0,normal.]\n[1000,tcp,telnet,SF,291,7510,0,0,0,0,0,1,2,1,2,6,0,0,0,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,216,2,0.01,0.02,0.0,0.0,0.03,0.0,0.0,0.0,normal.]\n[0,tcp,telnet,S1,157,5338,0,0,0,0,0,1,1,1,2,4,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,185,1,0.01,0.02,0.01,0.0,0.01,1.0,0.0,0.0,normal.]\n[0,tcp,telnet,S1,223,12698,0,0,0,0,0,1,94,1,1,104,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,134,20,0.15,0.04,0.01,0.0,0.01,0.05,0.01,0.1,normal.]\n[1261,tcp,telnet,SF,458,219837,0,0,0,0,0,1,2,1,2,4,1,0,0,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,255,55,0.22,0.02,0.0,0.0,0.54,0.65,0.0,0.0,normal.]\n[2301,tcp,telnet,SF,850,87890,0,0,0,0,0,1,23,1,2,26,0,0,0,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,42,14,0.33,0.07,0.02,0.0,0.0,0.0,0.0,0.0,normal.]\n[0,tcp,telnet,S1,1680,16934,0,0,0,0,0,1,0,1,2,5,4,0,0,0,0,0,2,1,0.5,1.0,0.5,0.0,0.5,1.0,0.0,255,3,0.01,0.02,0.0,0.0,0.0,0.33,0.74,0.33,normal.]\n[0,tcp,telnet,S1,437,46777,0,0,0,0,0,1,237,1,2,261,0,0,1,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,90,10,0.11,0.06,0.01,0.0,0.03,0.3,0.0,0.0,normal.]\n[5930,tcp,telnet,RSTR,197,5339,0,0,0,0,1,1,2,1,2,6,0,0,0,0,0,0,1,1,0.0,0.0,1.0,1.0,1.0,0.0,0.0,80,4,0.05,0.08,0.01,0.0,0.03,0.25,0.65,0.25,normal.]\n[14494,tcp,telnet,SF,293,33542,0,0,0,0,0,1,46,1,2,55,0,0,1,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,255,67,0.26,0.02,0.0,0.0,0.84,0.84,0.0,0.0,normal.]\n[11233,tcp,telnet,SF,2361,46593,0,0,0,8,0,1,54,1,2,39,9,0,0,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,205,104,0.51,0.01,0.0,0.0,0.98,0.96,0.0,0.0,normal.]\n[15908,tcp,telnet,SF,888,43963,0,0,0,0,0,1,1,1,2,2,0,0,0,0,0,0,1,1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,255,83,0.33,0.02,0.0,0.0,0.51,0.72,0.0,0.01,normal.]\n\u001b[1m\u001b[34mcluster66\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [duration: int, protocol_type: string ... 40 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073721_1647473500",
      "id": "paragraph_1623098196283_614853572",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:300"
    },
    {
      "text": "%md\nIci, on voit en effet qu'il y a 7 anomalies dans le cluster 66, comme nous l'avions supposé. Cet exemple nous montre une anomalie au sein de même type de connexions.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Ici, on voit en effet qu&rsquo;il y a 7 anomalies dans le cluster 66, comme nous l&rsquo;avions supposé. Cet exemple nous montre une anomalie au sein de même type de connexions.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073721_461230024",
      "id": "paragraph_1623101981151_76405563",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:301"
    },
    {
      "text": "anomalies.\n    select(\"cluster\", \"label\").\n    groupBy(\"cluster\", \"label\").\n    count().\n    orderBy(\"cluster\", \"label\").show()",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-------------+-----+\n|cluster|        label|count|\n+-------+-------------+-----+\n|     26|      normal.|    2|\n|     27| warezmaster.|    1|\n|     36|        imap.|    4|\n|     36|        nmap.|   28|\n|     43|   ftp_write.|    1|\n|     45|      normal.|    3|\n|     45|     rootkit.|    1|\n|     46|      normal.|    2|\n|     46|       satan.|    1|\n|     56|   portsweep.|    2|\n|     66|      normal.|    7|\n|     68|      normal.|    6|\n|     68|         spy.|    1|\n|     71|   portsweep.|    3|\n|     75|        nmap.|    1|\n|     78|      normal.|    4|\n|     81|      normal.|    1|\n|     83|guess_passwd.|    1|\n|     86|      normal.|    5|\n|    102|      normal.|    3|\n+-------+-------------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_1455944764",
      "id": "paragraph_1623101444155_2124200144",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:302"
    },
    {
      "text": "%md\nConcernant la deuxième anomalie (nmap), elle se trouve dans le cluster 75, composé des connexions suivantes : \n```\n|     75|        neptune.|   1011|\n|     75|           nmap.|      1|\n|     75|      portsweep.|      7|\n|     75|          satan.|      2|\n```\nDans ce cas, nous n'avons pas forcement besoin d'analyser plus en détails. Le type nmap n'est simplement pas dans le bon cluster, et constitue donc une anomalie par rapport au type neptune. Par contre, les types portsweep et satan n'ont visiblement pas été catégorisé en tant qu'anomalie, probablement car il se rapproche suffisament du type neptune.\n\nAu final, les anomalies détectées dans des clusters de type différents correspondraient donc plus à des erreurs de clustering, alors que les anomalies dans des clusters du même type sont plus importante, et traduisent une potentielle attaque si le cluster en question est composé de connexions normales. La cellule suivante montre les centroides les plus proches des deux anomalies examinées. Les résultats confirment bien ce constat, le deuxième centroide le plus proche de l'anomalie nmap, correspond à un cluster composant majoritairement d'attaque de type nmap. Donc l'anomalie s'est simplement un peux trop éloignée de son cluster, et a été mal catégorisée. Pour la connexion normale, les autres clusters proches correspondent aussi à des connexion normales. On ne peut donc pas déterminer le type d'attaque avec cette méthode (on aurait pu imaginer que l'anomalie s'approche d'un cluster d'attaques, ce qui aurait pu nous permettre de déterminer son type).",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Concernant la deuxième anomalie (nmap), elle se trouve dans le cluster 75, composé des connexions suivantes :</p>\n<pre><code>|     75|        neptune.|   1011|\n|     75|           nmap.|      1|\n|     75|      portsweep.|      7|\n|     75|          satan.|      2|\n</code></pre>\n<p>Dans ce cas, nous n&rsquo;avons pas forcement besoin d&rsquo;analyser plus en détails. Le type nmap n&rsquo;est simplement pas dans le bon cluster, et constitue donc une anomalie par rapport au type neptune. Par contre, les types portsweep et satan n&rsquo;ont visiblement pas été catégorisé en tant qu&rsquo;anomalie, probablement car il se rapproche suffisament du type neptune.</p>\n<p>Au final, les anomalies détectées dans des clusters de type différents correspondraient donc plus à des erreurs de clustering, alors que les anomalies dans des clusters du même type sont plus importante, et traduisent une potentielle attaque si le cluster en question est composé de connexions normales. La cellule suivante montre les centroides les plus proches des deux anomalies examinées. Les résultats confirment bien ce constat, le deuxième centroide le plus proche de l&rsquo;anomalie nmap, correspond à un cluster composant majoritairement d&rsquo;attaque de type nmap. Donc l&rsquo;anomalie s&rsquo;est simplement un peux trop éloignée de son cluster, et a été mal catégorisée. Pour la connexion normale, les autres clusters proches correspondent aussi à des connexion normales. On ne peut donc pas déterminer le type d&rsquo;attaque avec cette méthode (on aurait pu imaginer que l&rsquo;anomalie s&rsquo;approche d&rsquo;un cluster d&rsquo;attaques, ce qui aurait pu nous permettre de déterminer son type).</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_91510234",
      "id": "paragraph_1623102042214_788388693",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:303"
    },
    {
      "text": "import scala.collection.mutable.ListBuffer\n\nval anomalies2 = clustered.filter { row =>\n    val cluster = row.getAs[Int](\"cluster\")\n    val vec = row.getAs[Vector](\"scaledFeatureVector\")\n    Vectors.sqdist(centroids(cluster), vec) >= threshold\n  }\nval firstAnomalie = anomalies2.take(2).last\nprintln(firstAnomalie)\n\nval distances = new ListBuffer[(Double, Int)]()\n  for(w <- 0 to 179){\n    val vec = firstAnomalie.getAs[Vector](\"scaledFeatureVector\")\n    distances += ((Vectors.sqdist(centroids(w), vec), w))\n}\ndistances.toList.sorted.slice(0,10).foreach({t => print(t._2 + \":\" + clustered.filter { row =>\n    row.getAs[Int](\"cluster\") == t._2\n  }.groupBy(\"label\").count().sort(desc(\"count\")).first() + \", \")})\nprint(\"\\n\")\n\nval secondAnomalie = anomalies2.take(22).last\nprintln(secondAnomalie)\n\n\nval distances2 = new ListBuffer[(Double, Int)]()\n  for(w <- 0 to 179){\n    val vec = secondAnomalie.getAs[Vector](\"scaledFeatureVector\")\n    distances2 += ((Vectors.sqdist(centroids(w), vec), w))\n}\ndistances2.toList.sorted.slice(0,10).foreach({t => print(t._2 + \":\" + clustered.filter { row =>\n    row.getAs[Int](\"cluster\") == t._2\n  }.groupBy(\"label\").count().sort(desc(\"count\")).first() + \", \")})\nprint(\"\\n\")",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[0,tcp,telnet,S1,500,50141,0,0,0,0,0,1,175,1,2,206,0,0,2,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,78,21,0.26,0.04,0.01,0.1,0.22,0.81,0.0,0.0,normal.,1.0,(2,[1],[1.0]),11.0,(69,[11],[1.0]),6.0,(10,[6],[1.0]),(119,[1,3,5,6,7,11,12,13,16,18,21,22,23,25,26,27,28,29,30,34,35,44,48,60],[1.0,1.0,0.26,21.0,1.0,1.0,500.0,1.0,2.0,1.0,206.0,2.0,78.0,0.81,0.22,1.0,50141.0,1.0,0.04,0.1,0.01,1.0,175.0,1.0]),(119,[1,3,5,6,7,11,12,13,16,18,21,22,23,25,26,27,28,29,30,34,35,44,48,60],[121.10721758763151,2.0582624864080326,0.6323172255238401,0.19827637899759185,0.004717186229981853,2.6186538814275453,5.311063268973356E-4,2.8521592459052765,247.45027914896863,2.6160609827033166,52.30981742461317,56.32139930520088,1.2183514210813526,2.119434374873857,0.5761602588646844,0.0040651611150373575,0.07773649801247937,2.568740541135391,0.36851682022484683,2.423667838926402,0.02079055165405451,95.96132187701333,45.378156510290715,33.857002846636604]),66]\n66:[normal.,18], 86:[normal.,21], 102:[normal.,17], 68:[normal.,29], 142:[normal.,3], 154:[normal.,6], 175:[normal.,10], 45:[normal.,217], 46:[normal.,405], 137:[normal.,72], \n[0,tcp,courier,SH,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,142,1,0.01,0.93,0.94,0.0,0.94,1.0,0.0,0.0,nmap.,1.0,(2,[1],[1.0]),58.0,(69,[58],[1.0]),5.0,(10,[5],[1.0]),(119,[3,5,6,7,11,18,23,25,26,27,29,30,35,43,107],[1.0,0.01,1.0,1.0,1.0,1.0,142.0,1.0,0.94,1.0,1.0,0.93,0.94,1.0,1.0]),(119,[3,5,6,7,11,18,23,25,26,27,29,30,35,43,107],[2.0582624864080326,0.024319893289378464,0.009441732333218659,0.004717186229981853,2.6186538814275453,2.6160609827033166,2.218024381968616,2.616585647992416,2.4617756515127422,0.0040651611150373575,2.568740541135391,8.568016070227689,1.9543118554811238,68.63693654518406,69.27249782273253]),75]\n75:[neptune.,1011], 36:[nmap.,1033], 135:[neptune.,363138], 0:[neptune.,455811], 22:[normal.,28663], 141:[neptune.,3130], 169:[normal.,3414], 127:[normal.,72877], 144:[normal.,77502], 177:[normal.,165127], \nimport scala.collection.mutable.ListBuffer\n\u001b[1m\u001b[34manomalies2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [duration: int, protocol_type: string ... 49 more fields]\n\u001b[1m\u001b[34mfirstAnomalie\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Row\u001b[0m = [0,tcp,telnet,S1,500,50141,0,0,0,0,0,1,175,1,2,206,0,0,2,0,0,0,1,1,1.0,1.0,0.0,0.0,1.0,0.0,0.0,78,21,0.26,0.04,0.01,0.1,0.22,0.81,0.0,0.0,normal.,1.0,(2,[1],[1.0]),11.0,(69,[11],[1.0]),6.0,(10,[6],[1.0]),(119,[1,3,5,6,7,11,12,13,16,18,21,22,23,25,26,27,28,29,30,34,35,44,48,60],[1.0,1.0,0.26,21.0,1.0,1.0,500.0,1.0,2.0,1.0,206.0,2.0,78.0,0.81,0.22,1.0,50141.0,1.0,0.04,0.1,0.01,1.0,175.0,1.0]),(119,[1,3,5,6,7,11,12,13,16,18,21,22,23,25,26,27,28,29,30,34,35,44,48,60],[121.10721758763151,2.0582624864080326,0.6323172255238401,0.19827..."
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_18654729",
      "id": "paragraph_1623144116803_1769414604",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:304"
    },
    {
      "text": "%md\n# Partie 4 : Questions d'analyse\n\n## Feature selection\n\nNous n'avons pas réussi à trouver de méthode efficace existante pour la feature selection dans un algorithme K-means. Nous avons donc voulu utiliser une méthode naive pour commencer. La méthode consiste à retirer une feature, puis comparer le score obtenu avec celui prenant en compte toutes les features. Si le résultat est meilleur, la feature est retirée, sinon, on la conserve. Le problème rencontré concerne le temps de calcul nécessaire à une méthode comme celle ci. En effet, la convergence de l'algorithme K-means depent de l'emplacement de départ des centroides, qui est aléatoire. Pour obtenir des résultats corrects, il devient donc nécessaire d'executer l'algorithme un certain nombre de fois, puis de moyenner les résultats. Avec 42 features et un temps moyen d'execution de 15min par K-means, cela devient très rapidement trop long (le déploiement sur un cluster à été testé, mais sans succès, à cause de problème de version sur spark notamment).\n\nNous avons donc décidé d'opter pour une autre méthode. Nous avons recherché dans les diffèrentes études déjà effectuées par le passé sur ce dataset et avons trouvé plusieurs sous ensemble de features qui avaient été selectionnés par les chercheurs. Nous avons donc testé ces sous ensembles afin d'obtenir nos résultats. Les deux sous ensemble comportent les features suivantes : \nsubset1 : 3,5,6,39\nsubset2 : 3,5,23,24,33,34,35,36\n\nsource : S. Zargari and D. Voorhis, \"Feature Selection in the Corrected KDD-dataset\", Third International Conference on Emerging Intelligent Data and Web Technologies, pp. 174-180, 2012, 2012.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T13:01:33+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Partie 4 : Questions d&rsquo;analyse</h1>\n<h2>Feature selection</h2>\n<p>Nous n&rsquo;avons pas réussi à trouver de méthode efficace existante pour la feature selection dans un algorithme K-means. Nous avons donc voulu utiliser une méthode naive pour commencer. La méthode consiste à retirer une feature, puis comparer le score obtenu avec celui prenant en compte toutes les features. Si le résultat est meilleur, la feature est retirée, sinon, on la conserve. Le problème rencontré concerne le temps de calcul nécessaire à une méthode comme celle ci. En effet, la convergence de l&rsquo;algorithme K-means depent de l&rsquo;emplacement de départ des centroides, qui est aléatoire. Pour obtenir des résultats correct, il devient donc nécessaire d&rsquo;executer l&rsquo;algorithme un certain nombre de fois, puis de moyenner les résultats. Avec 42 features et un temps moyen d&rsquo;execution de 15min par K-means, cela devient très rapidement trop long (le déploiement sur un cluster à été testé, mais sans succès, à cause de problème de version sur spark notamment).</p>\n<p>Nous avons donc décidé d&rsquo;opter pour une autre méthode. Nous avons recherché dans les diffèrentes études déjà effectuées par le passé sur ce dataset et avons trouvé plusieurs sous ensemble de features qui avaient été selectionnés par les chercheurs. Nous avons donc testé ces sous ensembles afin d&rsquo;obtenir nos résultats. Les deux sous ensemble comportent les features suivantes :<br />\nsubset1 : 3,5,6,39<br />\nsubset2 : 3,5,23,24,33,34,35,36</p>\n<p>source : S. Zargari and D. Voorhis, &ldquo;Feature Selection in the Corrected KDD-dataset&rdquo;, Third International Conference on Emerging Intelligent Data and Web Technologies, pp. 174-180, 2012, 2012.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_252265107",
      "id": "paragraph_1623085641450_1693379482",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:305"
    },
    {
      "text": "val subset1 = data.drop(\"duration\",\"protocol_type\", \"flag\",\"land\",\"wrong_fragment\",\"urgent\",\"hot\",\"num_failed_logins\",\"logged_in\",\"num_compromised\",\"root_shell\",\"su_attempted\",\"num_root\",\"num_file_creations\",\"num_shells\",\"num_access_files\",\"num_outbound_cmds\",\"is_host_login\",\"is_guest_login\",\"count\",\"srv_count\",\"serror_rate\",\"srv_serror_rate\",\"rerror_rate\",\"srv_rerror_rate\",\"same_srv_rate\",\"diff_srv_rate\",\"srv_diff_host_rate\",\"dst_host_count\",\"dst_host_srv_count\",\"dst_host_same_srv_rate\",\"dst_host_diff_srv_rate\",\"dst_host_same_src_port_rate\",\"dst_host_srv_diff_host_rate\",\"dst_host_serror_rate\",\"dst_host_rerror_rate\",\"dst_host_srv_rerror_rate\").cache()\n\nval subset2 = data.drop(\"duration\",\"protocol_type\",\"flag\",\n    \"dst_bytes\",\"land\",\"wrong_fragment\",\"urgent\",\n    \"hot\",\"num_failed_logins\",\"logged_in\",\"num_compromised\",\n    \"root_shell\",\"su_attempted\",\"num_root\",\"num_file_creations\",\n    \"num_shells\",\"num_access_files\",\"num_outbound_cmds\",\n    \"is_host_login\",\"is_guest_login\",\"serror_rate\",\"srv_serror_rate\",\"rerror_rate\",\"srv_rerror_rate\",\n    \"same_srv_rate\",\"diff_srv_rate\",\"srv_diff_host_rate\",\n    \"dst_host_count\",\"dst_host_srv_diff_host_rate\",    \n    \"dst_host_serror_rate\",\"dst_host_srv_serror_rate\",\n    \"dst_host_rerror_rate\",\"dst_host_srv_rerror_rate\",\n    \"label\").cache()",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34msubset1\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [service: string, src_bytes: int ... 3 more fields]\n\u001b[1m\u001b[34msubset2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [service: string, src_bytes: int ... 6 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_2003578743",
      "id": "paragraph_1623310285045_1595279883",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:306"
    },
    {
      "text": "def fitPipelineSubset(data: DataFrame, k: Int): PipelineModel = {\n    val (serviceEncoder, serviceVecCol) = oneHotPipeline(\"service\")\n\n    // Original columns, without label / string columns, but with new vector encoded cols\n    val assembleCols = Set(data.columns: _*) --\n      Seq(\"label\", \"service\") ++\n      Seq(serviceVecCol)\n    val assembler = new VectorAssembler().\n      setInputCols(assembleCols.toArray).\n      setOutputCol(\"featureVector\")\n\n    val scaler = new StandardScaler()\n      .setInputCol(\"featureVector\")\n      .setOutputCol(\"scaledFeatureVector\")\n      .setWithStd(true)\n      .setWithMean(false)\n\n    val kmeans = new KMeans().\n      setSeed(Random.nextLong()).\n      setK(k).\n      setPredictionCol(\"cluster\").\n      setFeaturesCol(\"scaledFeatureVector\").\n      setMaxIter(40).\n      setTol(1.0e-5)\n\n    val pipeline = new Pipeline().setStages(\n      Array(serviceEncoder, assembler, scaler, kmeans))\n    pipeline.fit(data)\n  }",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mfitPipelineSubset\u001b[0m: \u001b[1m\u001b[32m(data: org.apache.spark.sql.DataFrame, k: Int)org.apache.spark.ml.PipelineModel\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_88711063",
      "id": "paragraph_1623315770708_277296248",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:307"
    },
    {
      "text": "val subset1_res = fitPipelineSubset(subset1, 180)\nval subset2_res = fitPipelineSubset(subset2, 180)\n\nval countByClusterLabelSub1 = subset1_res.transform(data).\n    select(\"cluster\", \"label\").\n    groupBy(\"cluster\", \"label\").\n    count().\n    orderBy(\"cluster\", \"label\")\n    \nval countByClusterLabelSub2 = subset2_res.transform(data).\n    select(\"cluster\", \"label\").\n    groupBy(\"cluster\", \"label\").\n    count().\n    orderBy(\"cluster\", \"label\")",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|        ipsweep.|     40|\n|      0|           nmap.|      6|\n|      0|         normal.|   3456|\n|      0|            pod.|    259|\n|      0|      portsweep.|      2|\n|      0|          satan.|     12|\n|      0|          smurf.|2807886|\n|      1|         normal.|      8|\n|      2|           land.|      1|\n|      2|        neptune.|      9|\n|      2|         normal.|     13|\n|      2|      portsweep.|      1|\n|      3|         normal.|   2309|\n|      3|          satan.|      6|\n|      5|        neptune.|      1|\n|      5|         normal.|   2356|\n|      6|         normal.|   3833|\n|      8|         normal.|  20212|\n|      9|buffer_overflow.|     21|\n|      9|   guess_passwd.|     49|\n|      9|        ipsweep.|     14|\n|      9|     loadmodule.|      5|\n|      9|       multihop.|      2|\n|      9|        neptune.|    201|\n|      9|         normal.|   2001|\n|      9|           perl.|      3|\n|      9|      portsweep.|     10|\n|      9|        rootkit.|      4|\n|      9|          satan.|      6|\n|     10|          satan.|      1|\n|     11|           back.|    418|\n|     11|         normal.|  35781|\n|     11|      portsweep.|      2|\n|     12|      portsweep.|      1|\n|     13|        ipsweep.|     13|\n|     13|        neptune.|    200|\n|     13|         normal.|    509|\n|     13|      portsweep.|     12|\n|     13|          satan.|      3|\n|     14|           land.|      7|\n|     14|        neptune.|      3|\n|     14|         normal.|     74|\n|     15|        ipsweep.|   8173|\n|     15|           nmap.|   1026|\n|     15|      portsweep.|      4|\n|     16|        ipsweep.|     13|\n|     16|        neptune.|   1038|\n|     16|           nmap.|      1|\n|     16|      portsweep.|     15|\n|     16|          satan.|      3|\n|     17|        neptune.|    830|\n|     17|           nmap.|      1|\n|     17|          satan.|      1|\n|     18|        ipsweep.|     13|\n|     18|        neptune.|   1036|\n|     18|           nmap.|      1|\n|     18|      portsweep.|     14|\n|     18|          satan.|      3|\n|     19|        neptune.|    841|\n|     19|           nmap.|      1|\n|     19|      portsweep.|      3|\n|     20|        neptune.|    837|\n|     20|           nmap.|      1|\n|     20|      portsweep.|      3|\n|     21|      ftp_write.|      2|\n|     21|        neptune.|   1032|\n|     21|           nmap.|      1|\n|     21|      portsweep.|      7|\n|     21|          satan.|      3|\n|     22|           land.|      8|\n|     22|        neptune.|   1546|\n|     22|           nmap.|      1|\n|     22|         normal.|     12|\n|     22|      portsweep.|      2|\n|     23|        neptune.|    839|\n|     23|           nmap.|      1|\n|     24|        neptune.|    830|\n|     24|           nmap.|      1|\n|     25|        neptune.|    838|\n|     25|           nmap.|      1|\n|     26|        neptune.|    835|\n|     26|           nmap.|      1|\n|     27|        neptune.|    834|\n|     27|           nmap.|      1|\n|     27|         normal.|      1|\n|     28|        neptune.|    840|\n|     28|           nmap.|      1|\n|     28|          satan.|      1|\n|     29|        neptune.|    842|\n|     29|           nmap.|      1|\n|     29|      portsweep.|      4|\n|     30|        neptune.|   1044|\n|     30|           nmap.|      1|\n|     30|      portsweep.|     10|\n|     30|          satan.|      2|\n|     31|        neptune.| 819730|\n|     31|           nmap.|    981|\n|     31|         normal.|      1|\n|     31|      portsweep.|    223|\n|     31|          satan.|    169|\n|     32|        ipsweep.|     13|\n|     32|        neptune.|   1046|\n|     32|           nmap.|      1|\n|     32|         normal.|     38|\n|     32|      portsweep.|     12|\n|     32|          satan.|      3|\n|     33|        neptune.|    839|\n|     33|           nmap.|      1|\n|     34|        neptune.|    835|\n|     34|           nmap.|      1|\n|     35|        neptune.|    834|\n|     35|           nmap.|      1|\n|     35|          satan.|      1|\n|     36|        neptune.|    832|\n|     36|           nmap.|      1|\n|     36|          satan.|      1|\n|     37|        neptune.|   1041|\n|     37|           nmap.|      1|\n|     37|      portsweep.|     10|\n|     37|          satan.|      2|\n|     38|        ipsweep.|     13|\n|     38|        neptune.|   1044|\n|     38|           nmap.|      1|\n|     38|      portsweep.|     15|\n|     38|          satan.|      3|\n|     39|        neptune.|   1037|\n|     39|           nmap.|      1|\n|     39|      portsweep.|      9|\n|     39|          satan.|      3|\n|     40|        neptune.|    842|\n|     40|           nmap.|      1|\n|     41|        neptune.|    833|\n|     41|           nmap.|      1|\n|     42|        ipsweep.|     13|\n|     42|        neptune.|   1038|\n|     42|           nmap.|      1|\n|     42|      portsweep.|     14|\n|     42|          satan.|      3|\n|     43|        neptune.|    866|\n|     43|           nmap.|      1|\n|     44|        neptune.|   1038|\n|     44|           nmap.|      1|\n|     44|      portsweep.|     10|\n|     44|          satan.|      3|\n|     45|        neptune.|    846|\n|     45|           nmap.|      1|\n|     45|         normal.|      1|\n|     45|      portsweep.|      1|\n|     46|        neptune.|    837|\n|     46|           nmap.|      1|\n|     46|      portsweep.|      2|\n|     47|         normal.|     12|\n|     48|         normal.|    148|\n|     51|         normal.|     25|\n|     52|         normal.|    544|\n|     53|         normal.|     14|\n|     54|         normal.|    418|\n|     54|          satan.|      1|\n|     55|         normal.|     54|\n|     56|        ipsweep.|      1|\n|     56|        neptune.|     38|\n|     56|           nmap.|      1|\n|     56|         normal.|  11534|\n|     56|      portsweep.|      1|\n|     56|          satan.|      1|\n|     57|         normal.|  10117|\n|     58|        neptune.|     64|\n|     58|         normal.|     75|\n|     58|      portsweep.|      1|\n|     59|          satan.|      2|\n|     60|          satan.|      1|\n|     61|        neptune.|    200|\n|     61|         normal.|  11073|\n|     61|      portsweep.|   2646|\n|     61|        rootkit.|      3|\n|     61|          satan.|  10888|\n|     61|    warezclient.|      1|\n|     62|          satan.|      2|\n|     63|         normal.|   7726|\n|     64|         normal.|  30563|\n|     64|          satan.|      9|\n|     65|         normal.|    361|\n|     65|          satan.|      3|\n|     66|        neptune.|   1036|\n|     66|           nmap.|      1|\n|     66|      portsweep.|      6|\n|     66|          satan.|      1|\n|     67|        neptune.|    843|\n|     67|           nmap.|      1|\n|     68|        neptune.|    838|\n|     68|           nmap.|      1|\n|     68|      portsweep.|      2|\n|     69|        neptune.|    842|\n|     69|           nmap.|      1|\n|     69|      portsweep.|      2|\n|     70|        neptune.|    827|\n|     70|           nmap.|      1|\n|     71|   guess_passwd.|      1|\n|     71|           land.|      1|\n|     71|        neptune.|   1704|\n|     71|           nmap.|      1|\n|     71|         normal.|     84|\n|     71|      portsweep.|      1|\n|     72|        neptune.|   1043|\n|     72|           nmap.|      1|\n|     72|      portsweep.|      9|\n|     72|          satan.|      3|\n|     73|         normal.|      3|\n|     74|          satan.|      1|\n|     75|          satan.|      1|\n|     76|         normal.|      7|\n|     76|            pod.|      5|\n|     77|        ipsweep.|     12|\n|     77|        neptune.|    200|\n|     77|         normal.|  81389|\n|     77|      portsweep.|     11|\n|     77|          satan.|     13|\n|     78|buffer_overflow.|      8|\n|     78|      ftp_write.|      4|\n|     78|        ipsweep.|     13|\n|     78|     loadmodule.|      3|\n|     78|       multihop.|      3|\n|     78|        neptune.|   1805|\n|     78|           nmap.|      1|\n|     78|         normal.|  37856|\n|     78|      portsweep.|     14|\n|     78|        rootkit.|      1|\n|     78|          satan.|     26|\n|     78|    warezclient.|    651|\n|     78|    warezmaster.|     18|\n|     79|         normal.|   4838|\n|     80|         normal.|   4529|\n|     81|           back.|   1785|\n|     81|        ipsweep.|     13|\n|     81|        neptune.|    200|\n|     81|         normal.| 563045|\n|     81|            phf.|      4|\n|     81|      portsweep.|     11|\n|     81|          satan.|      7|\n|     83|      portsweep.|      2|\n|     84|      portsweep.|      1|\n|     85|         normal.|   1082|\n|     85|    warezclient.|    296|\n|     85|    warezmaster.|      1|\n|     86|         normal.|      9|\n|     87|          satan.|      1|\n|     88|          satan.|      1|\n|     90|        ipsweep.|     13|\n|     90|        neptune.|    200|\n|     90|         normal.|      7|\n|     90|      portsweep.|     10|\n|     90|          satan.|      3|\n|     91|        ipsweep.|   3344|\n|     91|          satan.|     23|\n|     92|         normal.|   2987|\n|     93|        neptune.|   1040|\n|     93|           nmap.|      1|\n|     93|      portsweep.|     14|\n|     93|          satan.|      3|\n|     94|        neptune.|    839|\n|     94|           nmap.|      1|\n|     94|      portsweep.|      2|\n|     95|           imap.|     12|\n|     95|        neptune.|   1043|\n|     95|           nmap.|      1|\n|     95|         normal.|      3|\n|     95|      portsweep.|      8|\n|     95|          satan.|      2|\n|     96|        neptune.|    839|\n|     96|           nmap.|      1|\n|     96|      portsweep.|      3|\n|     96|          satan.|      1|\n|     97|        neptune.|    843|\n|     97|           nmap.|      1|\n|     98|        neptune.|   1038|\n|     98|           nmap.|      1|\n|     98|      portsweep.|     14|\n|     98|          satan.|      3|\n|     99|        neptune.|    837|\n|     99|           nmap.|      1|\n|    100|        neptune.|   1041|\n|    100|           nmap.|      1|\n|    100|      portsweep.|      9|\n|    100|          satan.|      2|\n|    101|        neptune.|    840|\n|    101|           nmap.|      1|\n|    101|      portsweep.|      2|\n|    102|        ipsweep.|     13|\n|    102|        neptune.|    200|\n|    102|      portsweep.|     10|\n|    102|          satan.|     10|\n|    103|         normal.|   3768|\n|    104|         normal.|      1|\n|    104|          satan.|      2|\n|    105|         normal.|    237|\n|    105|    warezclient.|     57|\n|    106|      portsweep.|      1|\n|    107|      portsweep.|      1|\n|    108|         normal.|     51|\n|    109|   guess_passwd.|      3|\n|    109|        neptune.|     18|\n|    109|         normal.|    142|\n|    109|      portsweep.|      1|\n|    109|        rootkit.|      1|\n|    109|          satan.|      1|\n|    109|            spy.|      2|\n|    110|          satan.|      1|\n|    111|buffer_overflow.|      1|\n|    111|      ftp_write.|      2|\n|    111|        ipsweep.|     13|\n|    111|     loadmodule.|      1|\n|    111|       multihop.|      2|\n|    111|        neptune.|    200|\n|    111|         normal.|   2101|\n|    111|      portsweep.|     10|\n|    111|        rootkit.|      1|\n|    111|          satan.|      8|\n|    111|    warezclient.|     11|\n|    111|    warezmaster.|      1|\n|    112|         normal.|      3|\n|    113|         normal.|  45437|\n|    113|          satan.|      1|\n|    113|    warezclient.|      1|\n|    114|      portsweep.|      2|\n|    115|           nmap.|      1|\n|    115|         normal.|     40|\n|    115|      portsweep.|      1|\n|    116|        neptune.|    200|\n|    116|      portsweep.|      7|\n|    116|          satan.|      2|\n|    117|        neptune.|    200|\n|    117|      portsweep.|      9|\n|    117|          satan.|      3|\n|    118|        neptune.|    200|\n|    118|      portsweep.|      8|\n|    118|          satan.|      3|\n|    119|        neptune.|    200|\n|    119|      portsweep.|     13|\n|    119|          satan.|      3|\n|    120|        neptune.|    200|\n|    120|         normal.|    918|\n|    120|      portsweep.|      8|\n|    120|          satan.|      3|\n|    121|        neptune.|    200|\n|    121|      portsweep.|      9|\n|    121|          satan.|      2|\n|    122|        neptune.|    200|\n|    122|      portsweep.|      7|\n|    122|          satan.|      1|\n|    123|        neptune.|    200|\n|    123|      portsweep.|      7|\n|    123|          satan.|      1|\n|    124|        neptune.|    840|\n|    124|           nmap.|      1|\n|    124|      portsweep.|      1|\n|    125|        ipsweep.|     13|\n|    125|        neptune.|    200|\n|    125|      portsweep.|     12|\n|    125|          satan.|      3|\n|    126|        neptune.|    200|\n|    126|         normal.|     19|\n|    126|      portsweep.|      9|\n|    126|          satan.|      1|\n|    127|        neptune.|    200|\n|    127|      portsweep.|      8|\n|    127|          satan.|      4|\n|    128|        neptune.|    200|\n|    128|      portsweep.|      6|\n|    128|          satan.|      1|\n|    129|        neptune.|    200|\n|    129|         normal.|      4|\n|    129|      portsweep.|      7|\n|    129|          satan.|      4|\n|    130|        neptune.|    200|\n|    130|      portsweep.|      6|\n|    130|          satan.|      1|\n|    131|        neptune.|    200|\n|    131|      portsweep.|      9|\n|    131|          satan.|      6|\n|    132|        neptune.|    200|\n|    132|      portsweep.|      7|\n|    132|          satan.|      2|\n|    133|        neptune.|    200|\n|    133|      portsweep.|      7|\n|    133|          satan.|      1|\n|    134|        neptune.|    200|\n|    134|      portsweep.|      7|\n|    134|          satan.|      6|\n|    135|        neptune.|    200|\n|    135|      portsweep.|     10|\n|    135|          satan.|      3|\n|    136|        neptune.|    200|\n|    136|      portsweep.|     12|\n|    136|          satan.|      3|\n|    137|        ipsweep.|    702|\n|    137|        neptune.| 193990|\n|    137|           nmap.|    250|\n|    137|         normal.|  73852|\n|    137|      portsweep.|   6974|\n|    137|          satan.|   2977|\n|    137|       teardrop.|    979|\n|    138|        neptune.|    200|\n|    138|      portsweep.|     13|\n|    138|          satan.|      3|\n|    139|        neptune.|    200|\n|    139|      portsweep.|     10|\n|    139|          satan.|      2|\n|    140|        neptune.|    200|\n|    140|      portsweep.|     10|\n|    140|          satan.|      2|\n|    141|         normal.|    278|\n|    142|    warezclient.|      3|\n|    143|        ipsweep.|     13|\n|    143|        neptune.|    200|\n|    143|         normal.|   4910|\n|    143|      portsweep.|      9|\n|    143|          satan.|     27|\n|    144|           land.|      4|\n|    144|        neptune.|     42|\n|    144|         normal.|      8|\n|    145|         normal.|   1749|\n|    146|         normal.|    117|\n|    146|          satan.|      4|\n|    147|         normal.|      1|\n|    148|         normal.|     10|\n|    149|        ipsweep.|     13|\n|    149|        neptune.|    200|\n|    149|      portsweep.|     11|\n|    149|          satan.|      3|\n|    150|        neptune.|    831|\n|    150|           nmap.|      1|\n|    150|          satan.|      1|\n|    151|        neptune.|    180|\n|    151|      portsweep.|      7|\n|    151|          satan.|      1|\n|    152|        neptune.|    822|\n|    152|           nmap.|      1|\n|    152|         normal.|     10|\n|    152|          satan.|   1564|\n|    153|        neptune.|    842|\n|    153|      portsweep.|      1|\n|    154|        neptune.|   1601|\n|    154|           nmap.|      1|\n|    154|      portsweep.|      3|\n|    155|      portsweep.|      1|\n|    156|      portsweep.|      1|\n|    157|      portsweep.|      1|\n|    158|        ipsweep.|     13|\n|    158|        neptune.|    200|\n|    158|      portsweep.|     12|\n|    158|          satan.|      3|\n|    159|        neptune.|    200|\n|    159|      portsweep.|      9|\n|    159|          satan.|      2|\n|    160|        neptune.|    837|\n|    160|         normal.|     17|\n|    160|      portsweep.|      1|\n+-------+----------------+-------+\n\n\u001b[1m\u001b[34msubset1_res\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.PipelineModel\u001b[0m = pipeline_1ad00462dacb\n\u001b[1m\u001b[34msubset2_res\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.PipelineModel\u001b[0m = pipeline_35319443cfb7\n\u001b[1m\u001b[34mcountByClusterLabelSub1\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, label: string ... 1 more field]\n\u001b[1m\u001b[34mcountByClusterLabelSub2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [cluster: int, label: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073722_1937599562",
      "id": "paragraph_1623314677692_108474349",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:308"
    },
    {
      "text": "%md\nEn regardant la répartition des labels dans les clusters, il n'y a pas d'améliorations notables en utilisant ces subsets.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>En regardant la répartition des labels dans les clusters, il n&rsquo;y a pas d&rsquo;améliorations notables en utilisant ces subsets.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073723_342312290",
      "id": "paragraph_1623317196583_1204588015",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:309"
    },
    {
      "text": "println(\"First subset count by cluster : \")\ncountByClusterLabelSub1.show(countByClusterLabelSub1.count.toInt)\nprintln(\"Second subset count by cluster : \")\ncountByClusterLabelSub2.show(countByClusterLabelSub2.count.toInt)",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "First subset count by cluster : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|        ipsweep.|     40|\n|      0|           nmap.|      6|\n|      0|         normal.|   3456|\n|      0|            pod.|    259|\n|      0|      portsweep.|      2|\n|      0|          satan.|     12|\n|      0|          smurf.|2807886|\n|      1|         normal.|      8|\n|      2|           land.|      1|\n|      2|        neptune.|      9|\n|      2|         normal.|     13|\n|      2|      portsweep.|      1|\n|      3|         normal.|   2309|\n|      3|          satan.|      6|\n|      5|        neptune.|      1|\n|      5|         normal.|   2356|\n|      6|         normal.|   3833|\n|      8|         normal.|  20212|\n|      9|buffer_overflow.|     21|\n|      9|   guess_passwd.|     49|\n|      9|        ipsweep.|     14|\n|      9|     loadmodule.|      5|\n|      9|       multihop.|      2|\n|      9|        neptune.|    201|\n|      9|         normal.|   2001|\n|      9|           perl.|      3|\n|      9|      portsweep.|     10|\n|      9|        rootkit.|      4|\n|      9|          satan.|      6|\n|     10|          satan.|      1|\n|     11|           back.|    418|\n|     11|         normal.|  35781|\n|     11|      portsweep.|      2|\n|     12|      portsweep.|      1|\n|     13|        ipsweep.|     13|\n|     13|        neptune.|    200|\n|     13|         normal.|    509|\n|     13|      portsweep.|     12|\n|     13|          satan.|      3|\n|     14|           land.|      7|\n|     14|        neptune.|      3|\n|     14|         normal.|     74|\n|     15|        ipsweep.|   8173|\n|     15|           nmap.|   1026|\n|     15|      portsweep.|      4|\n|     16|        ipsweep.|     13|\n|     16|        neptune.|   1038|\n|     16|           nmap.|      1|\n|     16|      portsweep.|     15|\n|     16|          satan.|      3|\n|     17|        neptune.|    830|\n|     17|           nmap.|      1|\n|     17|          satan.|      1|\n|     18|        ipsweep.|     13|\n|     18|        neptune.|   1036|\n|     18|           nmap.|      1|\n|     18|      portsweep.|     14|\n|     18|          satan.|      3|\n|     19|        neptune.|    841|\n|     19|           nmap.|      1|\n|     19|      portsweep.|      3|\n|     20|        neptune.|    837|\n|     20|           nmap.|      1|\n|     20|      portsweep.|      3|\n|     21|      ftp_write.|      2|\n|     21|        neptune.|   1032|\n|     21|           nmap.|      1|\n|     21|      portsweep.|      7|\n|     21|          satan.|      3|\n|     22|           land.|      8|\n|     22|        neptune.|   1546|\n|     22|           nmap.|      1|\n|     22|         normal.|     12|\n|     22|      portsweep.|      2|\n|     23|        neptune.|    839|\n|     23|           nmap.|      1|\n|     24|        neptune.|    830|\n|     24|           nmap.|      1|\n|     25|        neptune.|    838|\n|     25|           nmap.|      1|\n|     26|        neptune.|    835|\n|     26|           nmap.|      1|\n|     27|        neptune.|    834|\n|     27|           nmap.|      1|\n|     27|         normal.|      1|\n|     28|        neptune.|    840|\n|     28|           nmap.|      1|\n|     28|          satan.|      1|\n|     29|        neptune.|    842|\n|     29|           nmap.|      1|\n|     29|      portsweep.|      4|\n|     30|        neptune.|   1044|\n|     30|           nmap.|      1|\n|     30|      portsweep.|     10|\n|     30|          satan.|      2|\n|     31|        neptune.| 819730|\n|     31|           nmap.|    981|\n|     31|         normal.|      1|\n|     31|      portsweep.|    223|\n|     31|          satan.|    169|\n|     32|        ipsweep.|     13|\n|     32|        neptune.|   1046|\n|     32|           nmap.|      1|\n|     32|         normal.|     38|\n|     32|      portsweep.|     12|\n|     32|          satan.|      3|\n|     33|        neptune.|    839|\n|     33|           nmap.|      1|\n|     34|        neptune.|    835|\n|     34|           nmap.|      1|\n|     35|        neptune.|    834|\n|     35|           nmap.|      1|\n|     35|          satan.|      1|\n|     36|        neptune.|    832|\n|     36|           nmap.|      1|\n|     36|          satan.|      1|\n|     37|        neptune.|   1041|\n|     37|           nmap.|      1|\n|     37|      portsweep.|     10|\n|     37|          satan.|      2|\n|     38|        ipsweep.|     13|\n|     38|        neptune.|   1044|\n|     38|           nmap.|      1|\n|     38|      portsweep.|     15|\n|     38|          satan.|      3|\n|     39|        neptune.|   1037|\n|     39|           nmap.|      1|\n|     39|      portsweep.|      9|\n|     39|          satan.|      3|\n|     40|        neptune.|    842|\n|     40|           nmap.|      1|\n|     41|        neptune.|    833|\n|     41|           nmap.|      1|\n|     42|        ipsweep.|     13|\n|     42|        neptune.|   1038|\n|     42|           nmap.|      1|\n|     42|      portsweep.|     14|\n|     42|          satan.|      3|\n|     43|        neptune.|    866|\n|     43|           nmap.|      1|\n|     44|        neptune.|   1038|\n|     44|           nmap.|      1|\n|     44|      portsweep.|     10|\n|     44|          satan.|      3|\n|     45|        neptune.|    846|\n|     45|           nmap.|      1|\n|     45|         normal.|      1|\n|     45|      portsweep.|      1|\n|     46|        neptune.|    837|\n|     46|           nmap.|      1|\n|     46|      portsweep.|      2|\n|     47|         normal.|     12|\n|     48|         normal.|    148|\n|     51|         normal.|     25|\n|     52|         normal.|    544|\n|     53|         normal.|     14|\n|     54|         normal.|    418|\n|     54|          satan.|      1|\n|     55|         normal.|     54|\n|     56|        ipsweep.|      1|\n|     56|        neptune.|     38|\n|     56|           nmap.|      1|\n|     56|         normal.|  11534|\n|     56|      portsweep.|      1|\n|     56|          satan.|      1|\n|     57|         normal.|  10117|\n|     58|        neptune.|     64|\n|     58|         normal.|     75|\n|     58|      portsweep.|      1|\n|     59|          satan.|      2|\n|     60|          satan.|      1|\n|     61|        neptune.|    200|\n|     61|         normal.|  11073|\n|     61|      portsweep.|   2646|\n|     61|        rootkit.|      3|\n|     61|          satan.|  10888|\n|     61|    warezclient.|      1|\n|     62|          satan.|      2|\n|     63|         normal.|   7726|\n|     64|         normal.|  30563|\n|     64|          satan.|      9|\n|     65|         normal.|    361|\n|     65|          satan.|      3|\n|     66|        neptune.|   1036|\n|     66|           nmap.|      1|\n|     66|      portsweep.|      6|\n|     66|          satan.|      1|\n|     67|        neptune.|    843|\n|     67|           nmap.|      1|\n|     68|        neptune.|    838|\n|     68|           nmap.|      1|\n|     68|      portsweep.|      2|\n|     69|        neptune.|    842|\n|     69|           nmap.|      1|\n|     69|      portsweep.|      2|\n|     70|        neptune.|    827|\n|     70|           nmap.|      1|\n|     71|   guess_passwd.|      1|\n|     71|           land.|      1|\n|     71|        neptune.|   1704|\n|     71|           nmap.|      1|\n|     71|         normal.|     84|\n|     71|      portsweep.|      1|\n|     72|        neptune.|   1043|\n|     72|           nmap.|      1|\n|     72|      portsweep.|      9|\n|     72|          satan.|      3|\n|     73|         normal.|      3|\n|     74|          satan.|      1|\n|     75|          satan.|      1|\n|     76|         normal.|      7|\n|     76|            pod.|      5|\n|     77|        ipsweep.|     12|\n|     77|        neptune.|    200|\n|     77|         normal.|  81389|\n|     77|      portsweep.|     11|\n|     77|          satan.|     13|\n|     78|buffer_overflow.|      8|\n|     78|      ftp_write.|      4|\n|     78|        ipsweep.|     13|\n|     78|     loadmodule.|      3|\n|     78|       multihop.|      3|\n|     78|        neptune.|   1805|\n|     78|           nmap.|      1|\n|     78|         normal.|  37856|\n|     78|      portsweep.|     14|\n|     78|        rootkit.|      1|\n|     78|          satan.|     26|\n|     78|    warezclient.|    651|\n|     78|    warezmaster.|     18|\n|     79|         normal.|   4838|\n|     80|         normal.|   4529|\n|     81|           back.|   1785|\n|     81|        ipsweep.|     13|\n|     81|        neptune.|    200|\n|     81|         normal.| 563045|\n|     81|            phf.|      4|\n|     81|      portsweep.|     11|\n|     81|          satan.|      7|\n|     83|      portsweep.|      2|\n|     84|      portsweep.|      1|\n|     85|         normal.|   1082|\n|     85|    warezclient.|    296|\n|     85|    warezmaster.|      1|\n|     86|         normal.|      9|\n|     87|          satan.|      1|\n|     88|          satan.|      1|\n|     90|        ipsweep.|     13|\n|     90|        neptune.|    200|\n|     90|         normal.|      7|\n|     90|      portsweep.|     10|\n|     90|          satan.|      3|\n|     91|        ipsweep.|   3344|\n|     91|          satan.|     23|\n|     92|         normal.|   2987|\n|     93|        neptune.|   1040|\n|     93|           nmap.|      1|\n|     93|      portsweep.|     14|\n|     93|          satan.|      3|\n|     94|        neptune.|    839|\n|     94|           nmap.|      1|\n|     94|      portsweep.|      2|\n|     95|           imap.|     12|\n|     95|        neptune.|   1043|\n|     95|           nmap.|      1|\n|     95|         normal.|      3|\n|     95|      portsweep.|      8|\n|     95|          satan.|      2|\n|     96|        neptune.|    839|\n|     96|           nmap.|      1|\n|     96|      portsweep.|      3|\n|     96|          satan.|      1|\n|     97|        neptune.|    843|\n|     97|           nmap.|      1|\n|     98|        neptune.|   1038|\n|     98|           nmap.|      1|\n|     98|      portsweep.|     14|\n|     98|          satan.|      3|\n|     99|        neptune.|    837|\n|     99|           nmap.|      1|\n|    100|        neptune.|   1041|\n|    100|           nmap.|      1|\n|    100|      portsweep.|      9|\n|    100|          satan.|      2|\n|    101|        neptune.|    840|\n|    101|           nmap.|      1|\n|    101|      portsweep.|      2|\n|    102|        ipsweep.|     13|\n|    102|        neptune.|    200|\n|    102|      portsweep.|     10|\n|    102|          satan.|     10|\n|    103|         normal.|   3768|\n|    104|         normal.|      1|\n|    104|          satan.|      2|\n|    105|         normal.|    237|\n|    105|    warezclient.|     57|\n|    106|      portsweep.|      1|\n|    107|      portsweep.|      1|\n|    108|         normal.|     51|\n|    109|   guess_passwd.|      3|\n|    109|        neptune.|     18|\n|    109|         normal.|    142|\n|    109|      portsweep.|      1|\n|    109|        rootkit.|      1|\n|    109|          satan.|      1|\n|    109|            spy.|      2|\n|    110|          satan.|      1|\n|    111|buffer_overflow.|      1|\n|    111|      ftp_write.|      2|\n|    111|        ipsweep.|     13|\n|    111|     loadmodule.|      1|\n|    111|       multihop.|      2|\n|    111|        neptune.|    200|\n|    111|         normal.|   2101|\n|    111|      portsweep.|     10|\n|    111|        rootkit.|      1|\n|    111|          satan.|      8|\n|    111|    warezclient.|     11|\n|    111|    warezmaster.|      1|\n|    112|         normal.|      3|\n|    113|         normal.|  45437|\n|    113|          satan.|      1|\n|    113|    warezclient.|      1|\n|    114|      portsweep.|      2|\n|    115|           nmap.|      1|\n|    115|         normal.|     40|\n|    115|      portsweep.|      1|\n|    116|        neptune.|    200|\n|    116|      portsweep.|      7|\n|    116|          satan.|      2|\n|    117|        neptune.|    200|\n|    117|      portsweep.|      9|\n|    117|          satan.|      3|\n|    118|        neptune.|    200|\n|    118|      portsweep.|      8|\n|    118|          satan.|      3|\n|    119|        neptune.|    200|\n|    119|      portsweep.|     13|\n|    119|          satan.|      3|\n|    120|        neptune.|    200|\n|    120|         normal.|    918|\n|    120|      portsweep.|      8|\n|    120|          satan.|      3|\n|    121|        neptune.|    200|\n|    121|      portsweep.|      9|\n|    121|          satan.|      2|\n|    122|        neptune.|    200|\n|    122|      portsweep.|      7|\n|    122|          satan.|      1|\n|    123|        neptune.|    200|\n|    123|      portsweep.|      7|\n|    123|          satan.|      1|\n|    124|        neptune.|    840|\n|    124|           nmap.|      1|\n|    124|      portsweep.|      1|\n|    125|        ipsweep.|     13|\n|    125|        neptune.|    200|\n|    125|      portsweep.|     12|\n|    125|          satan.|      3|\n|    126|        neptune.|    200|\n|    126|         normal.|     19|\n|    126|      portsweep.|      9|\n|    126|          satan.|      1|\n|    127|        neptune.|    200|\n|    127|      portsweep.|      8|\n|    127|          satan.|      4|\n|    128|        neptune.|    200|\n|    128|      portsweep.|      6|\n|    128|          satan.|      1|\n|    129|        neptune.|    200|\n|    129|         normal.|      4|\n|    129|      portsweep.|      7|\n|    129|          satan.|      4|\n|    130|        neptune.|    200|\n|    130|      portsweep.|      6|\n|    130|          satan.|      1|\n|    131|        neptune.|    200|\n|    131|      portsweep.|      9|\n|    131|          satan.|      6|\n|    132|        neptune.|    200|\n|    132|      portsweep.|      7|\n|    132|          satan.|      2|\n|    133|        neptune.|    200|\n|    133|      portsweep.|      7|\n|    133|          satan.|      1|\n|    134|        neptune.|    200|\n|    134|      portsweep.|      7|\n|    134|          satan.|      6|\n|    135|        neptune.|    200|\n|    135|      portsweep.|     10|\n|    135|          satan.|      3|\n|    136|        neptune.|    200|\n|    136|      portsweep.|     12|\n|    136|          satan.|      3|\n|    137|        ipsweep.|    702|\n|    137|        neptune.| 193990|\n|    137|           nmap.|    250|\n|    137|         normal.|  73852|\n|    137|      portsweep.|   6974|\n|    137|          satan.|   2977|\n|    137|       teardrop.|    979|\n|    138|        neptune.|    200|\n|    138|      portsweep.|     13|\n|    138|          satan.|      3|\n|    139|        neptune.|    200|\n|    139|      portsweep.|     10|\n|    139|          satan.|      2|\n|    140|        neptune.|    200|\n|    140|      portsweep.|     10|\n|    140|          satan.|      2|\n|    141|         normal.|    278|\n|    142|    warezclient.|      3|\n|    143|        ipsweep.|     13|\n|    143|        neptune.|    200|\n|    143|         normal.|   4910|\n|    143|      portsweep.|      9|\n|    143|          satan.|     27|\n|    144|           land.|      4|\n|    144|        neptune.|     42|\n|    144|         normal.|      8|\n|    145|         normal.|   1749|\n|    146|         normal.|    117|\n|    146|          satan.|      4|\n|    147|         normal.|      1|\n|    148|         normal.|     10|\n|    149|        ipsweep.|     13|\n|    149|        neptune.|    200|\n|    149|      portsweep.|     11|\n|    149|          satan.|      3|\n|    150|        neptune.|    831|\n|    150|           nmap.|      1|\n|    150|          satan.|      1|\n|    151|        neptune.|    180|\n|    151|      portsweep.|      7|\n|    151|          satan.|      1|\n|    152|        neptune.|    822|\n|    152|           nmap.|      1|\n|    152|         normal.|     10|\n|    152|          satan.|   1564|\n|    153|        neptune.|    842|\n|    153|      portsweep.|      1|\n|    154|        neptune.|   1601|\n|    154|           nmap.|      1|\n|    154|      portsweep.|      3|\n|    155|      portsweep.|      1|\n|    156|      portsweep.|      1|\n|    157|      portsweep.|      1|\n|    158|        ipsweep.|     13|\n|    158|        neptune.|    200|\n|    158|      portsweep.|     12|\n|    158|          satan.|      3|\n|    159|        neptune.|    200|\n|    159|      portsweep.|      9|\n|    159|          satan.|      2|\n|    160|        neptune.|    837|\n|    160|         normal.|     17|\n|    160|      portsweep.|      1|\n+-------+----------------+-------+\n\nSecond subset count by cluster : \n+-------+----------------+-------+\n|cluster|           label|  count|\n+-------+----------------+-------+\n|      0|         normal.|  66806|\n|      1|        neptune.|   1035|\n|      1|           nmap.|      1|\n|      1|      portsweep.|      9|\n|      1|          satan.|      2|\n|      2|        neptune.|   1027|\n|      2|           nmap.|      1|\n|      2|      portsweep.|      7|\n|      2|          satan.|      6|\n|      3|         normal.|      9|\n|      4|        neptune.|   1034|\n|      4|           nmap.|      1|\n|      4|      portsweep.|      7|\n|      4|          satan.|      3|\n|      5|         normal.|    520|\n|      5|          satan.|      1|\n|      6|        neptune.|   1041|\n|      6|      portsweep.|     11|\n|      6|          satan.|      2|\n|      7|          smurf.| 180247|\n|      8|        ipsweep.|     13|\n|      8|        neptune.|   1042|\n|      8|           nmap.|      1|\n|      8|      portsweep.|     14|\n|      8|          satan.|      3|\n|      9|         normal.|    509|\n|     10|        neptune.|   1037|\n|     10|           nmap.|      1|\n|     10|      portsweep.|     15|\n|     10|          satan.|      3|\n|     11|        neptune.|   1043|\n|     11|           nmap.|      1|\n|     11|      portsweep.|      9|\n|     11|          satan.|      3|\n|     12|        neptune.|  41117|\n|     13|        ipsweep.|   6541|\n|     13|           nmap.|    341|\n|     13|         normal.|    482|\n|     14|        neptune.|   1037|\n|     14|      portsweep.|     11|\n|     14|          satan.|      1|\n|     15|           nmap.|    907|\n|     15|      portsweep.|   3734|\n|     16|        neptune.|   1030|\n|     16|           nmap.|      1|\n|     16|      portsweep.|      6|\n|     16|          satan.|      1|\n|     17|        neptune.|   1044|\n|     17|      portsweep.|     11|\n|     17|          satan.|      2|\n|     18|buffer_overflow.|      1|\n|     18|      ftp_write.|      2|\n|     18|       multihop.|      2|\n|     18|        neptune.|   1042|\n|     18|         normal.|   3680|\n|     18|      portsweep.|     10|\n|     18|        rootkit.|      1|\n|     18|          satan.|      5|\n|     18|    warezclient.|    307|\n|     18|    warezmaster.|      2|\n|     19|         normal.|   5040|\n|     20|           imap.|     12|\n|     20|        neptune.|   1043|\n|     20|           nmap.|      1|\n|     20|         normal.|      3|\n|     20|      portsweep.|      8|\n|     20|          satan.|      2|\n|     21|          satan.|      2|\n|     22|        neptune.|   1037|\n|     22|           nmap.|      1|\n|     22|      portsweep.|      9|\n|     22|          satan.|      3|\n|     23|        neptune.|   1046|\n|     23|         normal.|     38|\n|     23|      portsweep.|      8|\n|     23|          satan.|      2|\n|     24|        neptune.|   1037|\n|     24|         normal.|   2163|\n|     25|        neptune.|   1035|\n|     25|           nmap.|      1|\n|     25|      portsweep.|      7|\n|     25|          satan.|      2|\n|     26|        neptune.|   1888|\n|     26|         normal.|   2006|\n|     26|           perl.|      3|\n|     26|      portsweep.|      9|\n|     26|        rootkit.|      5|\n|     26|          satan.|      5|\n|     26|            spy.|      2|\n|     27|        neptune.|   1038|\n|     27|           nmap.|      1|\n|     27|      portsweep.|      9|\n|     27|          satan.|      3|\n|     28|        neptune.|   1041|\n|     28|           nmap.|      1|\n|     28|      portsweep.|      9|\n|     28|          satan.|      2|\n|     29|        neptune.|   1039|\n|     29|           nmap.|      1|\n|     29|      portsweep.|     10|\n|     29|          satan.|      2|\n|     30|         normal.|   8924|\n|     31|        neptune.|   1036|\n|     31|           nmap.|      1|\n|     31|      portsweep.|      6|\n|     31|          satan.|      1|\n|     32|        neptune.|   1043|\n|     32|           nmap.|      1|\n|     32|      portsweep.|      8|\n|     32|          satan.|      3|\n|     33|        neptune.|   1038|\n|     33|           nmap.|      1|\n|     33|      portsweep.|     14|\n|     33|          satan.|      3|\n|     34|          satan.|      2|\n|     35|           land.|     18|\n|     35|        neptune.|    801|\n|     35|         normal.|   4481|\n|     35|      portsweep.|      3|\n|     35|          satan.|     19|\n|     36|        neptune.|   1033|\n|     36|           nmap.|      1|\n|     36|      portsweep.|      6|\n|     36|          satan.|      1|\n|     37|        neptune.|    893|\n|     38|        neptune.|   1066|\n|     38|           nmap.|      1|\n|     38|      portsweep.|      9|\n|     38|          satan.|      2|\n|     39|        neptune.|   1039|\n|     39|           nmap.|      1|\n|     39|      portsweep.|     10|\n|     39|          satan.|      2|\n|     40|        neptune.|      3|\n|     40|         normal.|   3224|\n|     40|      portsweep.|      3|\n|     40|    warezclient.|     10|\n|     41|        neptune.|   1040|\n|     41|           nmap.|      1|\n|     41|      portsweep.|     14|\n|     41|          satan.|      3|\n|     42|        neptune.|   1040|\n|     42|           nmap.|      1|\n|     42|      portsweep.|      7|\n|     42|          satan.|      2|\n|     43|         normal.|   2633|\n|     44|      ftp_write.|      2|\n|     44|        neptune.|   1032|\n|     44|           nmap.|      1|\n|     44|      portsweep.|      7|\n|     44|          satan.|      3|\n|     45|        ipsweep.|     13|\n|     45|        neptune.|   1038|\n|     45|           nmap.|      1|\n|     45|      portsweep.|     15|\n|     45|          satan.|      3|\n|     46|          satan.|      5|\n|     47|        neptune.|   1040|\n|     47|           nmap.|      1|\n|     47|      portsweep.|     15|\n|     47|          satan.|      3|\n|     48|      portsweep.|      1|\n|     49|        neptune.|   1042|\n|     49|           nmap.|      1|\n|     49|      portsweep.|     14|\n|     49|          satan.|      3|\n|     50|          satan.|      2|\n|     51|         normal.|  11304|\n|     51|      portsweep.|    659|\n|     51|          satan.|      1|\n|     52|         normal.|      7|\n|     52|            pod.|      5|\n|     53|        ipsweep.|     13|\n|     53|        neptune.|   1039|\n|     53|           nmap.|      1|\n|     53|         normal.|      7|\n|     53|      portsweep.|     12|\n|     53|          satan.|      3|\n|     54|        neptune.|   1041|\n|     55|        neptune.|   1042|\n|     55|           nmap.|      1|\n|     55|      portsweep.|      8|\n|     55|          satan.|      4|\n|     56|        neptune.|   1043|\n|     56|           nmap.|      1|\n|     56|      portsweep.|      9|\n|     56|          satan.|      6|\n|     57|        neptune.|   1040|\n|     57|         normal.|   1431|\n|     57|      portsweep.|      2|\n|     57|          satan.|      1|\n|     58|         normal.|    148|\n|     59|        neptune.|   1038|\n|     59|           nmap.|      1|\n|     59|      portsweep.|     10|\n|     59|          satan.|      3|\n|     60|         normal.|   2461|\n|     61|        neptune.|   1011|\n|     61|           nmap.|      1|\n|     61|      portsweep.|      7|\n|     61|          satan.|      2|\n|     62|        neptune.|   1044|\n|     63|        neptune.|   1038|\n|     63|           nmap.|      1|\n|     63|      portsweep.|     14|\n|     63|          satan.|      3|\n|     64|         normal.|      3|\n|     65|         normal.|    118|\n|     65|          satan.|      6|\n|     66|        neptune.|   1032|\n|     66|           nmap.|      1|\n|     66|      portsweep.|      7|\n|     66|          satan.|      2|\n|     67|        neptune.|   1034|\n|     67|           nmap.|      1|\n|     67|         normal.|      5|\n|     67|      portsweep.|      7|\n|     67|          satan.|      4|\n|     68|      portsweep.|      1|\n|     69|         normal.|  71722|\n|     70|        neptune.|   1017|\n|     71|        ipsweep.|     13|\n|     71|        neptune.|   1039|\n|     71|           nmap.|      1|\n|     71|      portsweep.|     13|\n|     71|          satan.|     11|\n|     72|        neptune.|   1030|\n|     72|           nmap.|      1|\n|     72|      portsweep.|      7|\n|     72|          satan.|      2|\n|     73|          smurf.|2622722|\n|     74|        ipsweep.|      9|\n|     74|           nmap.|      4|\n|     74|         normal.|   1191|\n|     74|      portsweep.|      4|\n|     74|          satan.|     23|\n|     75|      portsweep.|      1|\n|     76|         normal.|   5432|\n|     76|          satan.|      1|\n|     77|        ipsweep.|     13|\n|     77|        neptune.|   1036|\n|     77|           nmap.|      1|\n|     77|      portsweep.|     14|\n|     77|          satan.|      3|\n|     78|           back.|    248|\n|     78|        neptune.|     28|\n|     78|         normal.|   9424|\n|     79|      portsweep.|      1|\n|     80|        neptune.|  64890|\n|     81|        ipsweep.|     40|\n|     81|           nmap.|      6|\n|     81|         normal.|   3319|\n|     81|            pod.|    226|\n|     81|      portsweep.|      2|\n|     81|          satan.|     10|\n|     81|          smurf.|    186|\n|     82|         normal.|   7361|\n|     82|    warezclient.|      1|\n|     83|         normal.|   8908|\n|     84|         normal.|  55060|\n|     85|        neptune.|  90999|\n|     85|      portsweep.|     17|\n|     86|        neptune.|   1022|\n|     86|         normal.|    794|\n|     86|        rootkit.|      1|\n|     86|          satan.|    116|\n|     86|    warezclient.|      1|\n|     87|         normal.|  12829|\n|     88|        ipsweep.|   4967|\n|     88|           nmap.|    681|\n|     88|         normal.|   2095|\n|     89|          satan.|  12191|\n|     90|         normal.|    509|\n|     91|        neptune.|  71596|\n|     92|        ipsweep.|     13|\n|     92|           nmap.|      1|\n|     92|      portsweep.|      4|\n|     92|          satan.|      2|\n|     93|         normal.|    128|\n|     93|          smurf.|   1567|\n|     94|      portsweep.|      1|\n|     95|        neptune.|     10|\n|     95|         normal.|  13382|\n|     95|    warezclient.|     27|\n|     96|         normal.|   2978|\n|     96|      portsweep.|      1|\n|     97|         normal.|   5947|\n|     98|         normal.|  11030|\n|     99|        ipsweep.|     13|\n|     99|           nmap.|      1|\n|     99|      portsweep.|      3|\n|     99|          satan.|      2|\n|    100|           nmap.|      1|\n|    100|         normal.|  29788|\n|    100|      portsweep.|   1229|\n|    101|      portsweep.|      1|\n|    102|      portsweep.|    363|\n|    103|        neptune.|   1025|\n|    103|         normal.|     20|\n|    104|           back.|   1515|\n|    104|         normal.| 239997|\n|    104|            phf.|      3|\n|    105|buffer_overflow.|      8|\n|    105|      ftp_write.|      4|\n|    105|        ipsweep.|     13|\n|    105|     loadmodule.|      3|\n|    105|       multihop.|      3|\n|    105|         normal.|   2323|\n|    105|        rootkit.|      1|\n|    105|    warezclient.|    649|\n|    105|    warezmaster.|     18|\n|    106|         normal.|   6371|\n|    106|      portsweep.|    761|\n|    107|           nmap.|      1|\n|    107|         normal.|    284|\n|    107|      portsweep.|      1|\n|    107|          satan.|     24|\n|    108|        neptune.|     19|\n|    108|         normal.|   6125|\n|    108|      portsweep.|      3|\n|    108|          satan.|      1|\n|    109|         normal.|  26884|\n|    110|         normal.|   1457|\n|    110|      portsweep.|      4|\n|    111|        neptune.|  72114|\n|    112|        ipsweep.|     13|\n|    112|           nmap.|      1|\n|    112|      portsweep.|      4|\n|    112|          satan.|      1|\n|    113|        neptune.|  60312|\n|    114|        neptune.|     12|\n|    114|           nmap.|      4|\n|    114|         normal.|      6|\n|    114|            pod.|      3|\n|    114|          satan.|    435|\n|    114|       teardrop.|    162|\n|    115|        neptune.|    999|\n|    116|        ipsweep.|    715|\n|    116|        neptune.|      3|\n|    116|         normal.|      8|\n|    116|            pod.|     11|\n|    116|          satan.|    231|\n|    116|       teardrop.|     37|\n|    117|        ipsweep.|     13|\n|    117|           nmap.|      1|\n|    117|         normal.|    148|\n|    117|      portsweep.|      3|\n|    117|          satan.|      1|\n|    118|         normal.|    273|\n|    119|         normal.|   3396|\n|    120|        neptune.|   1025|\n|    120|         normal.|      3|\n|    120|      portsweep.|      3|\n|    121|         normal.|   1031|\n|    121|      portsweep.|      4|\n|    121|          satan.|      1|\n|    121|    warezclient.|      7|\n|    122|        neptune.|  64172|\n|    123|        ipsweep.|     14|\n|    123|     loadmodule.|      2|\n|    123|           nmap.|      1|\n|    123|         normal.|    134|\n|    123|      portsweep.|      3|\n|    123|          satan.|      2|\n|    124|         normal.|  15651|\n|    125|         normal.|   6944|\n|    125|    warezclient.|      1|\n|    126|         normal.|      1|\n|    126|          smurf.|    990|\n|    127|         normal.|    586|\n|    127|        rootkit.|      2|\n|    128|           land.|      2|\n|    128|         normal.|    388|\n|    128|      portsweep.|      6|\n|    128|          satan.|      7|\n|    129|         normal.|   1200|\n|    130|        neptune.|    743|\n|    130|         normal.|    377|\n|    130|      portsweep.|      6|\n|    130|          satan.|      4|\n|    131|           nmap.|      1|\n|    131|          satan.|   1061|\n|    132|         normal.|      1|\n|    133|           back.|    201|\n|    133|         normal.|   9391|\n|    134|           back.|    128|\n|    134|         normal.|   9197|\n|    135|        neptune.|  82602|\n|    136|        ipsweep.|     13|\n|    136|           nmap.|      1|\n|    136|      portsweep.|      4|\n|    136|          satan.|      1|\n|    137|        neptune.|     81|\n|    137|         normal.|  21126|\n|    137|          satan.|      1|\n|    138|           nmap.|      1|\n|    138|         normal.|    165|\n|    138|      portsweep.|      9|\n|    138|          satan.|      7|\n|    139|        neptune.|     15|\n|    139|           nmap.|      2|\n|    139|         normal.|      8|\n|    139|            pod.|      8|\n|    139|      portsweep.|    669|\n|    139|          satan.|    384|\n|    139|       teardrop.|     54|\n|    140|         normal.|     94|\n|    140|          satan.|      8|\n|    141|         normal.|  21538|\n|    142|        ipsweep.|     13|\n|    142|     loadmodule.|      1|\n|    142|           nmap.|      1|\n|    142|         normal.|    141|\n|    142|      portsweep.|      2|\n|    142|          satan.|      3|\n|    143|           back.|     86|\n|    143|         normal.|  17061|\n|    143|            phf.|      1|\n|    143|      portsweep.|      3|\n|    143|          satan.|      2|\n|    144|        ipsweep.|     13|\n|    144|        neptune.|   1040|\n|    144|           nmap.|      1|\n|    144|      portsweep.|     13|\n|    144|          satan.|      3|\n|    145|           nmap.|      5|\n|    145|            pod.|     11|\n|    145|      portsweep.|    661|\n|    145|          satan.|     67|\n|    145|       teardrop.|      6|\n|    146|        neptune.|  53265|\n|    147|        neptune.|     42|\n|    147|         normal.|     19|\n|    147|      portsweep.|    562|\n|    147|          satan.|    606|\n|    147|          smurf.|      1|\n|    147|       teardrop.|     25|\n|    148|         normal.|   2810|\n|    149|        ipsweep.|     13|\n|    149|           nmap.|      1|\n|    149|         normal.|    211|\n|    149|      portsweep.|      1|\n|    149|          satan.|      1|\n|    150|         normal.|  26962|\n|    151|        neptune.|    145|\n|    151|      portsweep.|     10|\n|    151|          satan.|      1|\n|    152|        neptune.|  44189|\n|    152|           nmap.|     20|\n|    152|         normal.|     81|\n|    152|          satan.|     11|\n|    152|       teardrop.|    452|\n|    153|           back.|      4|\n|    153|        neptune.|      1|\n|    153|         normal.|   2274|\n|    154|         normal.|   1012|\n|    154|      portsweep.|      1|\n|    154|          satan.|      1|\n|    154|    warezclient.|      2|\n|    155|        neptune.|  20058|\n|    155|           nmap.|     20|\n|    155|         normal.|     34|\n|    155|      portsweep.|    380|\n|    155|          satan.|    124|\n|    155|          smurf.|      1|\n|    155|       teardrop.|     94|\n|    156|         normal.|     10|\n|    157|         normal.|   8390|\n|    158|           back.|      8|\n|    158|        neptune.|      2|\n|    158|         normal.|   3031|\n|    159|        neptune.|  83607|\n|    160|        neptune.|     29|\n|    160|           nmap.|      1|\n|    160|         normal.|    922|\n|    160|      portsweep.|      9|\n|    160|          satan.|      3|\n|    161|           nmap.|      1|\n|    161|      portsweep.|     10|\n|    161|          satan.|      2|\n|    162|           nmap.|     63|\n|    162|      portsweep.|    817|\n|    163|           back.|     13|\n|    163|         normal.| 151049|\n|    164|         normal.|   1507|\n|    164|      portsweep.|      3|\n|    164|          satan.|     10|\n|    165|         normal.|   7351|\n|    166|         normal.|    335|\n|    166|          satan.|      3|\n|    167|           nmap.|      1|\n|    167|      portsweep.|     10|\n|    167|          satan.|      2|\n|    168|        neptune.|  78276|\n|    169|         normal.|    733|\n|    169|          satan.|    145|\n|    169|    warezclient.|      3|\n|    170|        neptune.|     33|\n|    170|           nmap.|    210|\n|    170|         normal.|   1993|\n|    170|          satan.|    216|\n|    170|       teardrop.|    143|\n|    171|         normal.|      2|\n|    171|          smurf.|   2172|\n|    172|        neptune.|  42498|\n|    173|         normal.|   3269|\n|    174|        neptune.|    767|\n|    174|         normal.|   9456|\n|    174|      portsweep.|      5|\n|    174|    warezclient.|     12|\n|    175|        neptune.|  76092|\n|    176|buffer_overflow.|     21|\n|    176|   guess_passwd.|     53|\n|    176|           land.|      1|\n|    176|     loadmodule.|      3|\n|    176|       multihop.|      2|\n|    176|        neptune.|     35|\n|    176|         normal.|     87|\n|    177|        ipsweep.|     13|\n|    177|           nmap.|      1|\n|    177|      portsweep.|      4|\n|    177|          satan.|      1|\n|    178|        neptune.|  67830|\n|    178|          satan.|     14|\n|    178|       teardrop.|      6|\n|    179|         normal.|   1015|\n+-------+----------------+-------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073723_1113679199",
      "id": "paragraph_1623316884301_1720476986",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:310"
    },
    {
      "text": "%md\nOn calcul maintenant l'entropie des deux subsets testés, et on remarque cette fois ci que l'entropie est bien moins bonne que lors de l'analyse avec toute les features (10 fois plus élévée ici).\nLes subsets testés n'ont donc pas permit d'améliorer les résultats. Cela ne nous permet par contre pas d'affirmer que les résultats seront toujours meilleurs avec toutes les features, d'autant plus que les subsets testés ici ont été généré avec des méthodes de classification, et non pas de clustering. Neanmoins, en règle général, le clustering est efficace avec beaucoup de features, on peut donc supposer qu'en enlever ne sera pas forcément bénéfique.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>On calcul maintenant l&rsquo;entropie des deux subsets testés, et on remarque cette fois ci que l&rsquo;entropie est bien moins bonne que lors de l&rsquo;analyse avec toute les features (10 fois plus élévée ici).<br />\nLes subsets testés n&rsquo;ont donc pas permit d&rsquo;améliorer les résultats. Cela ne nous permet par contre pas d&rsquo;affirmer que les résultats seront toujours meilleurs avec toutes les features, d&rsquo;autant plus que les subsets testés ici ont été généré avec des méthodes de classification, et non pas de clustering. Neanmoins, en règle général, le clustering est efficace avec beaucoup de features, on peut donc supposer qu&rsquo;en enlever ne sera pas forcément bénéfique.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073723_1527578475",
      "id": "paragraph_1623317237525_1651267286",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:311"
    },
    {
      "text": "println(\"First subset entropy : \" + computeEntropy(subset1_res))\nprintln(\"Second subset entropy : \" + computeEntropy(subset2_res))",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "First subset entropy : 0.06784364206521278\nSecond subset entropy : 0.016165695068562\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073723_780817605",
      "id": "paragraph_1623316987118_235725533",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:312"
    },
    {
      "text": "%md\n## Test de l'algorithme k medoids",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Test de l&rsquo;algorithme k medoids</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073726_532930405",
      "id": "paragraph_1623102655447_1087501512",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:313"
    },
    {
      "text": "import org.apache.spark.rdd.RDD\nimport scala.collection.mutable.ArrayBuffer\n\ndef clusteringScoreMedoids[T <: org.apache.spark.sql.Row, U >: T](data: RDD[T], k: Int) = {\n\n    val n = data.count()\n    val sampleSize = n.toInt\n\n    def metric(r1: T, r2: T) = {\n      def checkType(cls: Any) = cls match {\n        case i: Int => i.toDouble\n        case d: Double => d\n        case _ => 1.0\n      }\n\n      val sum = (0 until r1.length).map(k => math.pow(checkType(r1(k)) - checkType(r2(k)), 2)).sum\n      math.sqrt(sum)\n    }\n\n    val ss = math.min(sampleSize, n).toInt\n    val fraction = math.min(1.0, ss.toDouble / n.toDouble)\n    var sample = data.sample(withReplacement=false, fraction).take(ss)\n\n    var medoids = Random.shuffle(sample.toSet).take(k).toSeq\n    require(medoids.length == k)\n\n    val mdf = (x: T, mv: Seq[T]) => mv.view.zipWithIndex.map { z => (metric(x, z._1), z._2) }.min\n\n    var itr = 1\n    val nbIter = 10\n    var halt = itr > nbIter\n    var lastMetric = sample.map { x => mdf(x, medoids)._1 }.sum\n    while (!halt) {\n\n      println(s\"\\n\\nitr= $itr\")\n\n      val dmed = Array.fill[ArrayBuffer[T]](k)(new ArrayBuffer[T]())\n      sample.foldLeft(dmed)((dm, x) => {\n        dm(mdf(x, medoids)._2) += x\n        dm\n      })\n\n      // require(dmed.map(_.length).min > 0)\n\n      medoids = dmed.filter(_.nonEmpty).map { clust =>\n        clust.minBy { e =>\n          clust.foldLeft(0.0)((x, v) => x + metric(v, e))\n        }\n      }\n\n      val newMetric = sample.map { x => mdf(x, medoids)._1 }.sum\n      println(s\"last= $lastMetric  new= $newMetric\")\n      lastMetric = newMetric\n\n      itr += 1\n      if (itr > nbIter) halt = true\n    }\n\n    (medoids, lastMetric)\n  }\n\nprintln(clusteringScoreMedoids(numericOnly.rdd, 180))",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T12:44:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073726_1232189852",
      "id": "paragraph_1623265079348_471409227",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "READY",
      "$$hashKey": "object:314"
    },
    {
      "text": "%md\n## Détermination du type d'attaque par cluster\n\nPour cette question, nous cherchions à savoir si les résultats du clustering nous permettrais de déterminer le type d'attaque ou non (si un point appartient à tel cluster, alors il s'agit de telle attaque). Durant les diffèrentes étapes, nous avons affiché les clusters ainsi que les labels qui les composent. Cela nous permet de répondre à cette question. Globalement, la plupart des clusters sont composé d'une majorité de connexions du même type, puis de quelques connexions d'autres types (qui sont probablement en réalité des anomalies, trop éloignés, qui changent alors de cluster).\nOn peut donc dire qu'il parait possible de déterminer le type le plus probable d'attaque en fonction du cluster. Par contre, un même type de connexion peut être représenté par plusieurs cluster. Cela est le cas car les connexions normales sont forcement très hétérogénes (il n'existe pas un type de connexion pour tout les protocoles), et les attaques peuvent être effectuées de plusieurs manières (par exemple, on peut faire une attaque DDOS avec peu de machines et de gros payloads, ou alors avec beaucoup de machines et de petit payloads).\nPour pouvoir déterminer le types d'une attaque, il faudra donc être capable de \"labeliser\" les clusters découverts lors du training, en sachant que des erreurs sont possible (comme quelque connexions erronnées subsistent dans les clusters).\nConcernant les anomalies (point très éloigné de son centroïde), nous avons voulu savoir si on pouvait en savoir plus, en regardant au niveau des clusters voisins. Pour certaines attaques, il a en effet été constaté qu'un cluster voisin du bon type est présent. Donc, si un point est très éloigné du centroïde, on peut estimer qu'il peut être à la fois du type du cluster dans lequel il se trouve, ou alors du type d'un des clusters voisins. Pour les connexions normales, il n'a pas été possible de déterminer le type d'attaque que cela pouvait représenter (tous les voisins étaient aussi des clusters de type normal). Nous nous attendions typiquement à retrouver l'attaque à partir d'un voisin (par exemple si une connexion normal effectue des requêtes sur un grand nombre de port, nous nous attendions à observer un cluster de type port scanning proche) mais ce ne fut pas le cas.",
      "user": "anonymous",
      "dateUpdated": "2021-06-10T13:05:10+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Détermination du type d&rsquo;attaque par cluster</h2>\n<p>Pour cette question, nous cherchions à savoir si les résultats du clustering nous permettrais de déterminer le type d&rsquo;attaque ou non (si un point appartient à tel cluster, alors il s&rsquo;agit de telle attaque). Durant les diffèrentes étapes, nous avons affiché les clusters ainsi que les labels qui les composent. Cela nous permet de répondre à cette question. Globalement, la plupart des clusters sont composé d&rsquo;une majorité de connexions du même type, puis de quelques connexions d&rsquo;autres types (qui sont probablement en réalité des anomalies, trop éloignés, qui changent alors de cluster).<br />\nOn peut donc dire qu&rsquo;il parait possible de déterminer le type le plus probable d&rsquo;attaque en fonction du cluster. Par contre, un même type de connexion peut être représenté par plusieurs cluster. Cela est le cas car les connexions normales sont forcement très hétérogénes (il n&rsquo;existe pas un type de connexion pour tout les protocoles), et les attaques peuvent être effectuées de plusieurs manières (par exemple, on peut faire une attaque DDOS avec peu de machines et de gros payloads, ou alors avec beaucoup de machines et de petit payloads).<br />\nPour pouvoir déterminer le types d&rsquo;une attaque, il faudra donc être capable de &ldquo;labeliser&rdquo; les clusters découverts lors du training, en sachant que des erreurs sont possible (comme quelque connexions erronnées subsistent dans les clusters).<br />\nConcernant les anomalies (point très éloigné de son centroïde), nous avons voulu savoir si on pouvait en savoir plus, en regardant au niveau des clusters voisins. Pour certaines attaques, il a en effet été constaté qu&rsquo;un cluster voisin du bon type est présent. Donc, si un point est très éloigné du centroïde, on peut estimer qu&rsquo;il peut être à la fois du type du cluster dans lequel il se trouve, ou alors du type d&rsquo;un des clusters voisins. Pour les connexions normales, il n&rsquo;a pas été possible de déterminer le type d&rsquo;attaque que cela pouvait représenter (tous les voisins étaient aussi des clusters de type normal). Nous nous attendions typiquement à retrouver l&rsquo;attaque à partir d&rsquo;un voisin (par exemple si une connexion normal effectue des requêtes sur un grand nombre de port, nous nous attendions à observer un cluster de type port scanning proche) mais ce ne fut pas le cas.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1623329073726_300946194",
      "id": "paragraph_1623102698805_2101964488",
      "dateCreated": "2021-06-10T12:44:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:315",
      "dateFinished": "2021-06-10T13:05:10+0000",
      "dateStarted": "2021-06-10T13:05:10+0000"
    }
  ],
  "name": "bda_project",
  "id": "2G94D243R",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/bda_project"
}